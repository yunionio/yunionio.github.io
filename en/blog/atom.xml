<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://www.cloudpods.org/en/blog</id>
    <title>Cloudpods Blog</title>
    <updated>2023-05-23T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://www.cloudpods.org/en/blog"/>
    <subtitle>Cloudpods Blog</subtitle>
    <icon>https://www.cloudpods.org/en/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[记一次符合 Google Coding Style 的 Bash 脚本重构]]></title>
        <id>https://www.cloudpods.org/en/blog/refactoring-bash-scripts-to-comply-with-the-google-coding-style</id>
        <link href="https://www.cloudpods.org/en/blog/refactoring-bash-scripts-to-comply-with-the-google-coding-style"/>
        <updated>2023-05-23T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[最近我在思考这样一个问题，顺便看一下gpt对这个问题的解释。搜索发现：]]></summary>
        <content type="html"><![CDATA[<p>最近我在思考这样一个问题，顺便看一下gpt对这个问题的解释。搜索发现：</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="团队写代码为什么要遵循coding-guideline">团队写代码，为什么要遵循coding guideline？<a class="hash-link" aria-label="Direct link to 团队写代码，为什么要遵循coding guideline？" title="Direct link to 团队写代码，为什么要遵循coding guideline？" href="https://www.cloudpods.org/en/blog/refactoring-bash-scripts-to-comply-with-the-google-coding-style#%E5%9B%A2%E9%98%9F%E5%86%99%E4%BB%A3%E7%A0%81%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E9%81%B5%E5%BE%AAcoding-guideline">​</a></h3>
<ol>
<li>
<p><strong>一致性</strong>：编码准则确保整个团队的代码风格和格式是一致的，这使得团队成员之间更易于交流和协作。这也使得代码更容易维护和更新，因为其他人可以更轻松地理解代码。</p>
</li>
<li>
<p><strong>可读性</strong>：编码准则有助于提高代码的可读性。通过对代码进行格式化和注释，代码会更易于阅读和理解，从而减少错误和缺陷，并提高代码的质量。</p>
</li>
<li>
<p><strong>可维护性</strong>：编码准则有助于提高代码的可维护性。通过使用一致的格式和风格，团队成员可以更轻松地理解代码，并进行更快速的故障排除和修复。</p>
</li>
<li>
<p><strong>代码质量</strong>：编码准则有助于提高代码的质量。通过要求团队成员编写可读性高、可维护性强的代码，编码准则可以确保代码更加健壮、可靠和安全。这也有助于减少代码缺陷和错误，提高代码的可靠性和可用性。</p>
</li>
<li>
<p><strong>代码重用</strong>：编码准则有助于提高代码的重用性。通过编写符合标准的代码，团队成员可以更容易地将代码重用在其他项目中，从而提高生产力和效率。</p>
</li>
</ol>
<p>继续搜索：</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="对于一个使用bash为主要语言的项目业界推荐的coding-guideline">对于一个使用bash为主要语言的项目，业界推荐的coding guideline？<a class="hash-link" aria-label="Direct link to 对于一个使用bash为主要语言的项目，业界推荐的coding guideline？" title="Direct link to 对于一个使用bash为主要语言的项目，业界推荐的coding guideline？" href="https://www.cloudpods.org/en/blog/refactoring-bash-scripts-to-comply-with-the-google-coding-style#%E5%AF%B9%E4%BA%8E%E4%B8%80%E4%B8%AA%E4%BD%BF%E7%94%A8bash%E4%B8%BA%E4%B8%BB%E8%A6%81%E8%AF%AD%E8%A8%80%E7%9A%84%E9%A1%B9%E7%9B%AE%E4%B8%9A%E7%95%8C%E6%8E%A8%E8%8D%90%E7%9A%84coding-guideline">​</a></h3>
<ol>
<li>
<p>使用有意义的变量名：变量名应该具有描述性，以便其他人可以轻松地理解代码。</p>
</li>
<li>
<p>缩进：使用4个空格作为缩进，而不是制表符。</p>
</li>
<li>
<p>注释：对代码进行注释，以解释代码的目的和功能。注释应该清晰、简洁，并且易于阅读。</p>
</li>
<li>
<p>函数：编写短小精悍的函数，每个函数都应该具有一个特定的目的。函数应该使用有意义的名称，并且应该清晰地描述其目的和功能。</p>
</li>
<li>
<p>错误处理：在代码中包含错误处理，以确保代码在遇到错误时不会崩溃或产生不可预测的结果。</p>
</li>
<li>
<p>使用双引号：在引用变量时，使用双引号而不是单引号，以确保变量扩展能够正常工作。</p>
</li>
<li>
<p>使用全局变量：尽量避免使用全局变量，因为它们很难调试和维护。</p>
</li>
<li>
<p>使用命令替换：使用<code>$()</code>语法而不是反引号 <code>``</code>来执行命令替换。</p>
</li>
<li>
<p>使用数组：使用数组来管理相关变量，而不是使用多个单独的变量。</p>
</li>
<li>
<p>使用“<code>set -u</code>”：使用“<code>set -u</code>”来检查未定义的变量，以避免在引用未定义的变量时产生错误。</p>
</li>
</ol>
<p>这些规范有助于提高 Bash 代码的可读性、可维护性和可靠性。</p>
<p>然后我搜索 "bash script style guideline"，最上面的结果是：</p>
<p><img decoding="async" loading="lazy" src="https://pic4.zhimg.com/v2-b4a917830a4156b60781d6c69243fe57_b.jpg" alt="image-20230430140433698" class="img_ev3q"></p>
<p>即：代码规范：<a href="https://google.github.io/styleguide/shellguide.html" target="_blank" rel="noopener noreferrer">https://google.github.io/styleguide/shellguide.html</a></p>
<p>我仔细阅读了这份风格指南，对其中的“局部变量”的章节很感兴趣。</p>
<p>文中说：「最好把局部变量的定义与赋值，换行实现，不要写到同一行上」，以免掩盖报错状态码。</p>
<p><a href="https://google.github.io/styleguide/shellguide.html#use-local-variables" target="_blank" rel="noopener noreferrer">原文</a></p>
<blockquote>
<p>Declare function-specific variables with <code>local</code>. Declaration and assignment should be on different lines.</p>
<p>Ensure that local variables are only seen inside a function and its
children by using <code>local</code> when declaring them. This avoids
polluting the global name space and inadvertently setting variables
that may have significance outside the function.</p>
<p>Declaration and assignment must be separate statements when the
assignment value is provided by a command substitution; as the
<code>local</code> builtin does not propagate the exit code from the
command substitution.</p>
</blockquote>
<p>我动手验证这个细节，发现果然如此：</p>
<p><img decoding="async" loading="lazy" src="https://pic1.zhimg.com/v2-bf484fe4d6b2b2e0f523afb5fdec4d00_b.jpg" alt="image-20230430103921020" class="img_ev3q"></p>
<p>然后我开始自查当前的项目，寻找类似于如下风格的代码：</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">local my_var="$(my_func)"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>优化后的预期结果：</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">local my_var</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">my_var="$(my_func)"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>在 <a href="https://regex101.com/" target="_blank" rel="noopener noreferrer">https://regex101.com/</a> 测试代码的运行。给出范例</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">regex:  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  local fn=$(echo $name_ver| tr ':' '-').tar.xz</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">test string</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  local fn=$(echo $name_ver| tr ':' '-').tar.xz		#普通</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    local fn=$(echo $name_ver| tr ':' '-').tar.xz	# 模拟多个空格</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	local fn=$(echo $name_ver| tr ':' '-').tar.xz		# 模拟tab缩进</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	local fn="$(echo $name_ver| tr ':' '-').tar.xz" # 模拟带引号的变量声明</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>测似乎生成的代码</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token variable" style="color:#36acaa">$1local</span><span class="token plain"> </span><span class="token variable" style="color:#36acaa">$2</span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain">n</span><span class="token variable" style="color:#36acaa">$1</span><span class="token variable" style="color:#36acaa">$2</span><span class="token operator" style="color:#393A34">=</span><span class="token variable" style="color:#36acaa">$3</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="生成的代码">生成的代码<a class="hash-link" aria-label="Direct link to 生成的代码" title="Direct link to 生成的代码" href="https://www.cloudpods.org/en/blog/refactoring-bash-scripts-to-comply-with-the-google-coding-style#%E7%94%9F%E6%88%90%E7%9A%84%E4%BB%A3%E7%A0%81">​</a></h3>
<div class="language-perl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-perl codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$re = '/^(\s*)local\s+(\w+)=("?\$\(.*)/m';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$str = '  local fn=$(echo $name_ver| tr \':\' \'-\').tar.xzt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    local fn=$(echo $name_ver| tr \':\' \'-\').tar.xzt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	local fn=$(echo $name_ver| tr \':\' \'-\').tar.xz</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	local fn="$(echo $name_ver| tr \':\' \'-\').tar.xz"';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$subst = "$1local $2\n$1$2=$3";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$result = preg_replace($re, $subst, $str);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo "The result of the substitution is ".$result;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>精简为 perl_oneliner:</p>
<p><img decoding="async" loading="lazy" src="https://pic4.zhimg.com/v2-c0abdb849eb637368f747f99bc4abbff_b.jpg" alt="image-20230430103045113" class="img_ev3q"></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">perl </span><span class="token parameter variable" style="color:#36acaa">-pe</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'s/^(\s*)local\s+(\w+)=("?\$\(.*)/$1local $2\n$1$2=$3/g'</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-i</span><span class="token plain"> file.txt</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>测试的场景：</p>
<p>搜索代码</p>
<p><code>pcregrep -lr '^(\s*)local\s+(\w+)=("?\$\(.*)' *</code></p>
<p>批量修正：</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">perl </span><span class="token parameter variable" style="color:#36acaa">-pi</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-e</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'s#^(\s*)local\s+(\w+)=("?\$\(.*)#$1local $2\n$1$2=$3#'</span><span class="token plain"> </span><span class="token variable" style="color:#36acaa">$(</span><span class="token variable" style="color:#36acaa">pcregrep </span><span class="token variable parameter variable" style="color:#36acaa">-l</span><span class="token variable" style="color:#36acaa"> </span><span class="token variable parameter variable" style="color:#36acaa">-r</span><span class="token variable" style="color:#36acaa"> </span><span class="token variable string" style="color:#e3116c">'^(\s*)local\s+(\w+)=("?\$\(.*)'</span><span class="token variable" style="color:#36acaa"> * </span><span class="token variable" style="color:#36acaa">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>修正之后，仔细阅读<code>diff</code>，检验效果，发现符合预期。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="后续增加git-hook检测代码">后续：增加git hook检测代码<a class="hash-link" aria-label="Direct link to 后续：增加git hook检测代码" title="Direct link to 后续：增加git hook检测代码" href="https://www.cloudpods.org/en/blog/refactoring-bash-scripts-to-comply-with-the-google-coding-style#%E5%90%8E%E7%BB%AD%E5%A2%9E%E5%8A%A0git-hook%E6%A3%80%E6%B5%8B%E4%BB%A3%E7%A0%81">​</a></h2>
<p>为了让以后新增的代码，也都符合上述规范，我增加了这样一个 <code>pre-commit</code>脚本。这样，每次提交之前，它都会帮我确保代码合规。</p>
<p>同时，我在编辑器里，设置了shfmt、shellcheck之类的规范，并设置为<code>format on save</code>，即，保存时自动格式化，来自动处理格式问题。</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># test code </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">grep</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-wq</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Code violates rules'</span><span class="token plain"> .git/hooks/pre-commit</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">then</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">cat</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&gt;&gt;</span><span class="token plain"> .git/hooks/pre-commit </span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token string" style="color:#e3116c">'GIT_PRE_COMMIT_EOF'                                                                                                                                        </span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">#!/usr/bin/env bash</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">if find . -name '*.sh'| xargs pcregrep '^\s+local\s+\w+="?(`|\$\()'; then</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">  echo "Error: Code violates rules"</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">  echo 'use: local var'</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">  echo 'var="$(...")'</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">  echo 'instead of local var=``'</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">  echo 'or local var="$(...)"'</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">  echo 'as of explained in https://google.github.io/styleguide/shellguide.html'</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">  exit 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">fi</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">GIT_PRE_COMMIT_EOF</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">chmod</span><span class="token plain"> +x .git/hooks/pre-commit</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">fi</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="总结">总结：<a class="hash-link" aria-label="Direct link to 总结：" title="Direct link to 总结：" href="https://www.cloudpods.org/en/blog/refactoring-bash-scripts-to-comply-with-the-google-coding-style#%E6%80%BB%E7%BB%93">​</a></h3>
<ul>
<li>寻找业界规范</li>
<li>遵循规范</li>
<li>修改过去不合规范的代码</li>
<li>新增代码确保合规</li>
<li>将代码的规范检查，加入到日常的流程里。（goimport check)</li>
<li>越早做，历史包袱越少。越晚做，历史包袱越沉重。</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="links">links<a class="hash-link" aria-label="Direct link to links" title="Direct link to links" href="https://www.cloudpods.org/en/blog/refactoring-bash-scripts-to-comply-with-the-google-coding-style#links">​</a></h2>
<ul>
<li><a href="https://github.com/koalaman/shellcheck/wiki/Checks" target="_blank" rel="noopener noreferrer">Checks · koalaman/shellcheck Wiki</a></li>
<li><a href="https://chromium.googlesource.com/chromiumos/third_party/shellcheck/+/HEAD/README.md" target="_blank" rel="noopener noreferrer">ShellCheck - A shell script static analysis tool</a></li>
<li><a href="https://google.github.io/styleguide/shellguide.html" target="_blank" rel="noopener noreferrer">styleguide | Style guides for Google-originated open-source projects</a>*</li>
<li><a href="https://regex101.com/" target="_blank" rel="noopener noreferrer">regex101: build, test, and debug regex</a></li>
</ul>]]></content>
        <author>
            <name>Rex Zhasm</name>
            <uri>https://github.com/zhasm</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[SkyPilot：构建在多云之上的 ML 和数据科学，可节约 3 倍以上成本]]></title>
        <id>https://www.cloudpods.org/en/blog/introduction-to-the-skypilot-open-source-project</id>
        <link href="https://www.cloudpods.org/en/blog/introduction-to-the-skypilot-open-source-project"/>
        <updated>2023-05-15T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[作者：Zongheng Yang（在加州大学伯克利分校研发 SkyPilot）]]></summary>
        <content type="html"><![CDATA[<p>作者：Zongheng Yang（在加州大学伯克利分校研发 SkyPilot）</p>
<p>整理：高现起</p>
<p>导读：用于 ML 和数据科学的云计算已经比较困难，如果你想要通过成本优化削减成本，你的整体成本包括资源和人力，可能会不降反增。不想在机器闲置时停止？因为这样你可能需要反复的启停，并且重新配置环境或者准备数据。想要通过使用抢占实例降低成本？解决抢占实例的调度问题也可能会花上几周时间。如何很好的利用地区之间的巨大价格差异，或者不同云厂商之间更大的价格差异来降低成本？</p>
<p>如果云上有一个简单、统一的 ML 和数据科学接口，具有成本效益、容错性、多区域和多云，是不是会更好？今天就给大家介绍一个项目，会从以下几个方面展开：</p>
<ul>
<li>SkyPilot 项目介绍</li>
<li>SkyPilot 工作原理</li>
<li>SkyPilot 使用场景</li>
<li>为什么多云成为新常态？</li>
</ul>
<p>以下为详细内容。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="skypilot-项目介绍">SkyPilot 项目介绍<a class="hash-link" aria-label="Direct link to SkyPilot 项目介绍" title="Direct link to SkyPilot 项目介绍" href="https://www.cloudpods.org/en/blog/introduction-to-the-skypilot-open-source-project#skypilot-%E9%A1%B9%E7%9B%AE%E4%BB%8B%E7%BB%8D">​</a></h2>
<p>SkyPilot，由加州大学伯克利分校的 Sky Computing 实验室主导研发的一个开源框架，用于在任何云上无缝且经济高效地运行 ML 和数据科学批处理作业。它的目标是让云比以往任何时候都更容易使用，成本更低，并且全程不需要云计算相关的专业知识。</p>
<p><img decoding="async" loading="lazy" src="https://pic2.zhimg.com/v2-7f5fe6f9e99f998630929da9e8739591_b.gif" alt="SkyPilot 项目介绍" class="img_ev3q"></p>
<p>近一年多来，SkyPilot 一直在加州大学伯克利分校的天空计算实验室积极开发。它被 10 多个组织用于各种用例，包括：GPU/TPU 模型训练（成本节省 3 倍）、分布式超参数调优以及 100 多个 CPU 抢占实例上的生物信息学批处理作业（在持续使用的基础上成本节省 6.5 倍）。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="skypilot-工作原理">SkyPilot 工作原理<a class="hash-link" aria-label="Direct link to SkyPilot 工作原理" title="Direct link to SkyPilot 工作原理" href="https://www.cloudpods.org/en/blog/introduction-to-the-skypilot-open-source-project#skypilot-%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86">​</a></h2>
<p>给定一个作业及其资源需求（CPU/GPU/TPU），SkyPilot 会自动找出哪些位置（可用区/区域/云厂商）具有运行该作业的计算能力，然后将其发送到成本最低的位置执行。</p>
<p><img decoding="async" loading="lazy" src="https://pic3.zhimg.com/v2-535dd856b0af5ad19b26aaa68914a54a_b.jpg" alt="SkyPilot 工作原理" class="img_ev3q"></p>
<p>SkyPilot 自动执行云上正在运行的作业的繁重工作：</p>
<ul>
<li>可靠地配置集群，如果发生容量或配额错误，自动故障转移到其他位置</li>
<li>将用户代码和文件（从本地或云存储桶）同步到集群</li>
<li>管理作业排队和执行</li>
</ul>
<p>SkyPilot 还大大减少了不断增长的云费用，通常减少 3 倍以上：</p>
<ul>
<li>自动找到所需资源的最便宜的可用区/区域/云厂商（节省约 2 倍的成本）</li>
<li>Managed Spot，通过使用抢占实例节省约 3-6 倍的成本，并自动从抢占中恢复</li>
<li>Autostop，自动清理空闲集群——可避免的云超支的最大贡献者</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="skypilot-的使用场景">SkyPilot 的使用场景<a class="hash-link" aria-label="Direct link to SkyPilot 的使用场景" title="Direct link to SkyPilot 的使用场景" href="https://www.cloudpods.org/en/blog/introduction-to-the-skypilot-open-source-project#skypilot-%E7%9A%84%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF">​</a></h2>
<p>在过去的几个月里，逐渐向来自 10 多个组织的数十名 ML/数据科学从业者和研究人员推荐了 SkyPilot。从用户反馈中，看到该系统确实解决了他们遇到的常见痛点。</p>
<p>出现了几种使用场景，从交互式开发到跨区域或跨云厂商运行许多的项目，再到横向扩展：</p>
<p><img decoding="async" loading="lazy" src="https://pic1.zhimg.com/v2-d0c9a2e505bc9255d62b3127d85901f0_b.jpg" alt="SkyPilot 的使用场景" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="在-gpu-和-tpu-上进行-ml-训练和超参数调整">在 GPU 和 TPU 上进行 ML 训练和超参数调整<a class="hash-link" aria-label="Direct link to 在 GPU 和 TPU 上进行 ML 训练和超参数调整" title="Direct link to 在 GPU 和 TPU 上进行 ML 训练和超参数调整" href="https://www.cloudpods.org/en/blog/introduction-to-the-skypilot-open-source-project#%E5%9C%A8-gpu-%E5%92%8C-tpu-%E4%B8%8A%E8%BF%9B%E8%A1%8C-ml-%E8%AE%AD%E7%BB%83%E5%92%8C%E8%B6%85%E5%8F%82%E6%95%B0%E8%B0%83%E6%95%B4">​</a></h3>
<p>伯克利人工智能研究所 ( BAIR ) 和斯坦福大学的领先机器学习团队一直在使用 SkyPilot 在云端运行机器学习训练。用户通常在不更改代码的情况下启动他们现有的 ML 项目。可靠地配置 GPU 实例、在集群上排队许多作业以及同时运行约 100 个超参数试验是用户反馈的主要优点。此外，用户在 AWS 上运行的相同作业只需更改一个参数就可以在 GCP/Azure 上运行。</p>
<p>用户还使用 SkyPilot 在谷歌的 TPU 上训练大模型。研究人员可以通过 TRC 程序申请免费的 TPU 访问权限，然后使用 SkyPilot 快速上手 TPU。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="cpu-抢占实例上的生物信息学批处理作业成本节省-65-倍">CPU 抢占实例上的生物信息学批处理作业，成本节省 6.5 倍<a class="hash-link" aria-label="Direct link to CPU 抢占实例上的生物信息学批处理作业，成本节省 6.5 倍" title="Direct link to CPU 抢占实例上的生物信息学批处理作业，成本节省 6.5 倍" href="https://www.cloudpods.org/en/blog/introduction-to-the-skypilot-open-source-project#cpu-%E6%8A%A2%E5%8D%A0%E5%AE%9E%E4%BE%8B%E4%B8%8A%E7%9A%84%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF%E5%AD%A6%E6%89%B9%E5%A4%84%E7%90%86%E4%BD%9C%E4%B8%9A%E6%88%90%E6%9C%AC%E8%8A%82%E7%9C%81-65-%E5%80%8D">​</a></h3>
<p>生物研究所 Salk 的科学家们一直在使用 SkyPilot 在抢占实例上运行每周定期执行的批处理作业任务。这些作业分别操作序列的不同部分，之前一直以一种令人尴尬的情况并行。使用 SkyPilot 的 Managed Spot 功能之后，Salk 的科学家们可以在数百个 CPU 抢占实例上进行计算，与使用按需实例相比成本降低了 6.5 倍，并且与使用繁忙的本地集群相比显著缩短了任务处理时间。Salk 用户反馈到，通过抽象化云计算技术，SkyPilot 让他们能够更专注于科学研究而非云端技术细节问题。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="使用-skypilot-构建基于多云的应用">使用 SkyPilot 构建基于多云的应用<a class="hash-link" aria-label="Direct link to 使用 SkyPilot 构建基于多云的应用" title="Direct link to 使用 SkyPilot 构建基于多云的应用" href="https://www.cloudpods.org/en/blog/introduction-to-the-skypilot-open-source-project#%E4%BD%BF%E7%94%A8-skypilot-%E6%9E%84%E5%BB%BA%E5%9F%BA%E4%BA%8E%E5%A4%9A%E4%BA%91%E7%9A%84%E5%BA%94%E7%94%A8">​</a></h3>
<p>一些行业合作伙伴已经在 SkyPilot 的 API 之上构建了更多云厂商的 lib 库。SkyPilot 使更多应用从第一天起就可以使用与云厂商无关的界面在不同的云上运行（这与 Terraform 等工具形成对比，后者虽然功能强大，但专注于较低级别的基础设施而不是作业，并且需要特定于云厂商的模板）。开发人员喜欢开箱即用地在不同云厂商可靠地配置和运行作业的能力，这样他们就可以专注于应用的业务逻辑，而不是熟悉各个云厂商的功能操作。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="为什么多云成为新常态">为什么多云成为新常态？<a class="hash-link" aria-label="Direct link to 为什么多云成为新常态？" title="Direct link to 为什么多云成为新常态？" href="https://www.cloudpods.org/en/blog/introduction-to-the-skypilot-open-source-project#%E4%B8%BA%E4%BB%80%E4%B9%88%E5%A4%9A%E4%BA%91%E6%88%90%E4%B8%BA%E6%96%B0%E5%B8%B8%E6%80%81">​</a></h2>
<p>多云和多区域的增长趋势促使构建了 SkyPilot。出于战略原因，企业组织越来越多地使用多个公有云，例如更高的可靠性、避免云供应商锁定、更强的议价能力等。</p>
<p>即使从用户（例如，机器学习工程师或数据科学家）的角度来看，也有很多理由可以根据工作负载使用多云：</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="减少开支">减少开支<a class="hash-link" aria-label="Direct link to 减少开支" title="Direct link to 减少开支" href="https://www.cloudpods.org/en/blog/introduction-to-the-skypilot-open-source-project#%E5%87%8F%E5%B0%91%E5%BC%80%E6%94%AF">​</a></h3>
<p>使用相同/相似硬件的最优惠价格的云厂商可以自动节省大量成本。以 GPU 为例。在 2022 年底时，Azure 拥有最便宜的 NVIDIA A100 GPU 实例，GCP 和 AWS 分别收取 8% 和 20% 的溢价。</p>
<p><img decoding="async" loading="lazy" src="https://pic2.zhimg.com/v2-d7865ffc53f8bb870ccd7e6460bcc7b9_b.jpg" alt="减少开支" class="img_ev3q"></p>
<p>CPU 也存在价格差异。对于最新的通用实例（相同的 vCPU/内存），差异可能超过 50%（见上图）。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="利用一流的硬件">利用一流的硬件<a class="hash-link" aria-label="Direct link to 利用一流的硬件" title="Direct link to 利用一流的硬件" href="https://www.cloudpods.org/en/blog/introduction-to-the-skypilot-open-source-project#%E5%88%A9%E7%94%A8%E4%B8%80%E6%B5%81%E7%9A%84%E7%A1%AC%E4%BB%B6">​</a></h3>
<p>正处于计算机体系结构的新黄金时代，专用硬件正在推动性能和效率的大幅提升。毫不奇怪，云厂商越来越多地提供定制硬件以从竞争中脱颖而出。例子包括：</p>
<ul>
<li>GCP 用于高性能 ML 训练的 TPU</li>
<li>用于经济高效的 ML 推理的 AWS Inferentia 和用于 CPU 工作负载的 Graviton 处理器</li>
<li>用于机密计算的 Azure 英特尔 SGX</li>
</ul>
<p>使用更适合工作负载的硬件，可以显著的降低成本或提高性能，一般这些硬件位于不同的云厂商那里。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="增加稀缺资源的可用性">增加稀缺资源的可用性<a class="hash-link" aria-label="Direct link to 增加稀缺资源的可用性" title="Direct link to 增加稀缺资源的可用性" href="https://www.cloudpods.org/en/blog/introduction-to-the-skypilot-open-source-project#%E5%A2%9E%E5%8A%A0%E7%A8%80%E7%BC%BA%E8%B5%84%E6%BA%90%E7%9A%84%E5%8F%AF%E7%94%A8%E6%80%A7">​</a></h3>
<p>理想的云实例很难获得。使用 NVIDIA V100 和 A100 等高端 GPU 的按需实例经常售罄。具有 GPU 或大量 CPU 的抢占实例甚至几乎不可能获得。根据经验，一般需要等待几小时或者几天的时间才能获取这些稀缺资源。</p>
<p>为了提高成功获取此类资源的机会，一种自然的方法是使用多云。（假设每个云有 40% 的机会提供资源；使用 3 个云将机会增加到 1–0.6³ = 78%。）</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="单云用户也想要多个区域">单云用户也想要多个区域<a class="hash-link" aria-label="Direct link to 单云用户也想要多个区域" title="Direct link to 单云用户也想要多个区域" href="https://www.cloudpods.org/en/blog/introduction-to-the-skypilot-open-source-project#%E5%8D%95%E4%BA%91%E7%94%A8%E6%88%B7%E4%B9%9F%E6%83%B3%E8%A6%81%E5%A4%9A%E4%B8%AA%E5%8C%BA%E5%9F%9F">​</a></h3>
<p>有趣的是，上述所有好处也都适用于单云的多个区域：</p>
<p>(1) 不同可用区/区域的价格差异也很大。对于普通的 GPU/CPU，跨区按需价格差异可能高达20%（见下图）。对于现货实例，价格差异很容易超过 3 倍。简单地说：用户可以通过在同一个云厂商跨多个可用区/区域购买来降低成本。</p>
<p><img decoding="async" loading="lazy" src="https://pic4.zhimg.com/v2-dcc7ff73648d99e0600ba8e8114981e3_b.jpg" alt="不同可用区/区域的价格差异也很大" class="img_ev3q"></p>
<p>(2) 硬件/服务产品因云区域而异。例如，GCP 的 TPU V3 仅在其 35 个全球区域中的 2 个区域可用。</p>
<p>(3) 分散从多个区域获取稀缺资源更容易成功。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Cloudpods容器化经验分享]]></title>
        <id>https://www.cloudpods.org/en/blog/cloudpods-k8s-experience-sharing</id>
        <link href="https://www.cloudpods.org/en/blog/cloudpods-k8s-experience-sharing"/>
        <updated>2022-11-29T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[背景介绍]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="背景介绍">背景介绍<a class="hash-link" aria-label="Direct link to 背景介绍" title="Direct link to 背景介绍" href="https://www.cloudpods.org/en/blog/cloudpods-k8s-experience-sharing#%E8%83%8C%E6%99%AF%E4%BB%8B%E7%BB%8D">​</a></h2>
<p>Cloudpods是一个开源的多云混合云管理平台。Cloudpods首先是一个私有云云平台，具备将计算节点使用开源QEMU/KVM虚拟化技术虚拟出虚拟机，实现私有云的功能。其次，Cloudpods能够纳管其他的云平台，包括主流私有云和公有云，实现云管的功能。Cloudpods的目标是帮助用户基于本地基础设置以及已有云基础设置，构建一个统一融合的云上之云，达到降低复杂度，提高管理效率的效果。Cloudpods从3.0开始全面拥抱Kubernetes，基于Kubernetes部署运行云平台的服务组件，采用Kubernetes Operator，基于Kubernetes集群自动化部署服务，实现了云平台的服务的容器化分布式部署。本文总结了Cloudpods在过去3年云平台底层容器化改造的经验。</p>
<p>目前，将Kubernetes作为IAAS平台的底层服务管理平台是一个趋势，例如OpenStack的Kolla项目，VMware的Tanzu，以及基于Kubernetes的虚拟化方案KubeVirt。Cloudpods顺应此趋势，早在2019年下半年开始基于Kubernetes构建Cloudpods的服务组件基础设施。理论上，Cloudpods站在了巨人的肩膀上。有了Kubernetes的加持，我们基于Operator管理CRD(Custom Resource Definition)机制做到了更优雅的服务自动化部署，符合IaC(Infrastructure as code)实践的服务升级和回滚，服务的自动高可用部署等等。但在实际效果上，我们基于Kubernetes，获得了一些便利，但也遇到了不少未曾预料到的问题。本文介绍自从2019年3.0容器化改造以来，因为引入Kubernetes遇到的问题，我们的一些解决方案，以及将来的规划。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="容器化带来了哪些好处">容器化带来了哪些好处<a class="hash-link" aria-label="Direct link to 容器化带来了哪些好处" title="Direct link to 容器化带来了哪些好处" href="https://www.cloudpods.org/en/blog/cloudpods-k8s-experience-sharing#%E5%AE%B9%E5%99%A8%E5%8C%96%E5%B8%A6%E6%9D%A5%E4%BA%86%E5%93%AA%E4%BA%9B%E5%A5%BD%E5%A4%84">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-方便对分布于多个节点上的服务的管理">1. 方便对分布于多个节点上的服务的管理<a class="hash-link" aria-label="Direct link to 1. 方便对分布于多个节点上的服务的管理" title="Direct link to 1. 方便对分布于多个节点上的服务的管理" href="https://www.cloudpods.org/en/blog/cloudpods-k8s-experience-sharing#1-%E6%96%B9%E4%BE%BF%E5%AF%B9%E5%88%86%E5%B8%83%E4%BA%8E%E5%A4%9A%E4%B8%AA%E8%8A%82%E7%82%B9%E4%B8%8A%E7%9A%84%E6%9C%8D%E5%8A%A1%E7%9A%84%E7%AE%A1%E7%90%86">​</a></h3>
<p>管理员可以在控制节点统一地查看运行在各个节点的服务状态，查看日志，启停和发布回滚服务，甚至exec进入服务容器排查问题。同时我们引入<a href="https://github.com/grafana/loki" target="_blank" rel="noopener noreferrer">Loki</a>收集所有容器的日志，可以统一地查看各个服务的日志。对分布式集群的运维和排障都变得相对简单。采用Kubernetes之后，直接登录各个节点排障的机会大大降低了。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-集群配置变更变得方便和可控">2. 集群配置变更变得方便和可控<a class="hash-link" aria-label="Direct link to 2. 集群配置变更变得方便和可控" title="Direct link to 2. 集群配置变更变得方便和可控" href="https://www.cloudpods.org/en/blog/cloudpods-k8s-experience-sharing#2-%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AE%E5%8F%98%E6%9B%B4%E5%8F%98%E5%BE%97%E6%96%B9%E4%BE%BF%E5%92%8C%E5%8F%AF%E6%8E%A7">​</a></h3>
<p>整个集群的状态可以保存为一个OnecloudCluster yaml文件。可以方便地变更集群的配置，包括集群的版本，实现版本的升级和回退，以及集群服务的开启和关闭，镜像版本等关键参数的变更等。更进一步地，可以通过git进行配置yaml的版本控制，做到变更的历史记录审计，并且可以随时恢复到任意指定的配置。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-易于适配不同的cpu架构和操作系统">3. 易于适配不同的CPU架构和操作系统<a class="hash-link" aria-label="Direct link to 3. 易于适配不同的CPU架构和操作系统" title="Direct link to 3. 易于适配不同的CPU架构和操作系统" href="https://www.cloudpods.org/en/blog/cloudpods-k8s-experience-sharing#3-%E6%98%93%E4%BA%8E%E9%80%82%E9%85%8D%E4%B8%8D%E5%90%8C%E7%9A%84cpu%E6%9E%B6%E6%9E%84%E5%92%8C%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F">​</a></h3>
<p>Kubernetes作为一层中间层，从一定程度上屏蔽了底层的差异。采用Kubernetes后，对CPU和操作系统的适配大概分为三部分工作：</p>
<p>1）Kubernetes对CPU和操作系统的适配；
2）不同CPU架构下服务容器镜像的构建；
3）Kubernetes之外的组件的适配，例如平台依赖的rpm包等。</p>
<p>基于Kubernetes自身强大的生态，1）基本都有现成的解决方案，只需要做相应的集成工作。2）只需通过docker buildx工具生成异构CPU架构的镜像。因此，整个适配工作复杂度大大降低了。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="4-部署的便利性增加">4. 部署的便利性增加<a class="hash-link" aria-label="Direct link to 4. 部署的便利性增加" title="Direct link to 4. 部署的便利性增加" href="https://www.cloudpods.org/en/blog/cloudpods-k8s-experience-sharing#4-%E9%83%A8%E7%BD%B2%E7%9A%84%E4%BE%BF%E5%88%A9%E6%80%A7%E5%A2%9E%E5%8A%A0">​</a></h3>
<p>引入Kubernetes之后，整个部署流程分为几个阶段：</p>
<p>1）Kubernetes的部署，这个步骤通过基于kubeadm改造的ocadm实现。
2）Cloudpods服务容器的部署，这个步骤通过ocadm在容器内部署operator，通过operator实现相应configmaps，deployments和daemonsets等资源的创建，进而自动创建服务集群。
3） Kubernetes之外依赖组件的安装部署。这个步骤通过ocboot集成ansible实现。</p>
<p>每个阶段都是基于成熟的开源方案扩展实现，可靠性高。同时，各个组件分工明确，模块化清晰，易于维护和扩展。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="5-可以复用kubernetes本身自带的强大功能">5. 可以复用Kubernetes本身自带的强大功能<a class="hash-link" aria-label="Direct link to 5. 可以复用Kubernetes本身自带的强大功能" title="Direct link to 5. 可以复用Kubernetes本身自带的强大功能" href="https://www.cloudpods.org/en/blog/cloudpods-k8s-experience-sharing#5-%E5%8F%AF%E4%BB%A5%E5%A4%8D%E7%94%A8kubernetes%E6%9C%AC%E8%BA%AB%E8%87%AA%E5%B8%A6%E7%9A%84%E5%BC%BA%E5%A4%A7%E5%8A%9F%E8%83%BD">​</a></h3>
<p>如coredns可以自定义域名，甚至可以做泛域名解析。Ingress自带反向代理的功能。service+deployment提供的多副本冗余机制。daemonset提供的在新添加节点自动拉起服务的能力。对服务的资源限制（CPU，内存，进程号等）。这些都使得云平台服务功能特性的实现变得更加容易。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="容器化遇到了哪些问题如何解决">容器化遇到了哪些问题，如何解决<a class="hash-link" aria-label="Direct link to 容器化遇到了哪些问题，如何解决" title="Direct link to 容器化遇到了哪些问题，如何解决" href="https://www.cloudpods.org/en/blog/cloudpods-k8s-experience-sharing#%E5%AE%B9%E5%99%A8%E5%8C%96%E9%81%87%E5%88%B0%E4%BA%86%E5%93%AA%E4%BA%9B%E9%97%AE%E9%A2%98%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3">​</a></h2>
<p>下面总结一些遇到的问题。这些问题是我们在采用Kubernetes管理和运行云平台组件中陆续发现的。有些已经彻底解决，但很大一部分还只是部分解决，彻底解决的方案还在持续摸索中。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-容器内运行系统级服务">1. 容器内运行系统级服务<a class="hash-link" aria-label="Direct link to 1. 容器内运行系统级服务" title="Direct link to 1. 容器内运行系统级服务" href="https://www.cloudpods.org/en/blog/cloudpods-k8s-experience-sharing#1-%E5%AE%B9%E5%99%A8%E5%86%85%E8%BF%90%E8%A1%8C%E7%B3%BB%E7%BB%9F%E7%BA%A7%E6%9C%8D%E5%8A%A1">​</a></h3>
<p>Cloudpods在计算节点运行的服务都是系统级的服务，如计算节点的核心服务hostagent，需具备几个特权：</p>
<p>1）需启动系统的daemon服务进程，如qemu虚拟机进程，vswitchd等系统进程，这些进程由hostagent启动，但需独立于hostagent运行；
2）需访问计算节点的任意目录文件。</p>
<p>在容器化之前，这些服务由systemd管理，以root身份运行。这些特权都自然具备。</p>
<p>容器化后，服务需运行在容器内。虽然可以通过配置给与容器系统级的root权限，但是一些特权操作在容器内依然无法执行。</p>
<p>首先，容器内无法启动系统级daemon服务进程。如果通过容器内的程序启动进程，则该进程只能运行在容器内的PID空间(pid namespace)，只能跟随容器的生命周期启停。为了解决这个问题，我们将系统服务的二进制程序安装在计算节点的底层操作系统，并且开发了一个命令执行代理<a href="https://github.com/yunionio/executor" target="_blank" rel="noopener noreferrer">executor-server</a>。该代理安装在底层操作系统，并作为一个系统服务运行。容器内的hostagent通过该代理执行系统级命令，例如启动这些daemon服务，设置内核参数等，从而获得了执行系统级命令的特权。</p>
<p>其次，每个容器具有自己独立的文件系统命名空间(mount namespace)。为了允许容器内服务访问计算节点底层系统的特定路径文件，需要将该路径显式地挂载到容器的文件系统命名空间。例如，虚拟机的配置文件和本地磁盘文件都存储在/opt/cloud/workspace目录下。容器内的hostagent在虚拟机准备和配置阶段需要能够访问这个目录的文件，同时，启动虚拟机后，在底层操作系统运行的虚拟机qemu进程也需要能够访问对应的文件。并且，由于上述命令执行代理的机制，为了简化和保持向后兼容的目的，需要确保尽量以一致的路径在容器内和容器外访问这些文件。为此，我们将一些特定的系统目录以同样的路径挂载到hostagent的容器内，例如系统设备文件路径/dev，云平台的配置文件路径/etc/yunion，虚拟机系统文件路径/opt/cloud/workspace等。然而，这个机制还无法解决容器内服务访问底层系统任意路径的问题。例如，用户可以将底层系统的任意目录设置为虚拟机磁盘的存储目录，但是该目录其实并未通过容器的spec挂载到hostagent容器内，从而导致hostagent在容器内无法访问该目录。为了解决这个问题，我们对hostagent进行了改造。当hostagent检测到用户添加了新的本地目录作为虚拟磁盘文件的存储路径，会自动地执行底层系统命令，将该路径挂载到底层操作系统的/opt/cloud/workspace目录下。因该目录已经挂载到hostagent容器内，这样hostagent就可以在容器内访问这个目录下的文件。</p>
<p>总之，相比将一个普通应用程序容器化，将系统级的服务程序从systemd托管变为在Kubernetes容器中运行，不是仅仅简单地打一个容器镜像，其实还需要做一系列比较复杂和繁杂的改造工作。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-日志持久化">2. 日志持久化<a class="hash-link" aria-label="Direct link to 2. 日志持久化" title="Direct link to 2. 日志持久化" href="https://www.cloudpods.org/en/blog/cloudpods-k8s-experience-sharing#2-%E6%97%A5%E5%BF%97%E6%8C%81%E4%B9%85%E5%8C%96">​</a></h3>
<p>容器化之前，服务日志会记录到journald中，并被持久化到/var/log/messages。按照CentOS的默认策略，保留最近一段时间的日志。遇到问题的时候，可以到对应服务器查找到对应的日志，排查错误原因。但是，不方便的地方是需要登录到服务运行的节点查看日志。在一个事故涉及的服务分布在多个节点的时候，就需要同时登录多个节点进行日志排查。</p>
<p>容器化之后，可以方便地在一个地方，通过kubectl log命令查看指定容器的日志，不需要登录到服务运行的节点。</p>
<p>然而，如果没有做特殊设置，Kubernetes里的容器的日志都是不持久保存的，并且只保留当前正在运行的容器的最近一段时间的日志。而容器往往非常动态，很容易删除。这就导致遇到问题需要排查已经被删除的容器时候，容易遇到找不到对应的日志的问题。这就使得追溯问题变得比较困难。</p>
<p>我们的解决方案是从3.7开始，会默认在Kubernetes集群里部署Loki套件来收集容器的日志，日志最后存在平台自带的minio的S3 Bucket里面。这样做能够持久化容器的日志。解决上述问题。但是，保存Loki日志有一定的系统负载，并且需要较大容量的存储空间。在集群容量紧张的情况下成为平台的额外负担，可能造成平台的不稳定。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-节点eviction机制">3. 节点Eviction机制<a class="hash-link" aria-label="Direct link to 3. 节点Eviction机制" title="Direct link to 3. 节点Eviction机制" href="https://www.cloudpods.org/en/blog/cloudpods-k8s-experience-sharing#3-%E8%8A%82%E7%82%B9eviction%E6%9C%BA%E5%88%B6">​</a></h3>
<p>Kubernetes有驱逐机制（Evict）。当节点的资源余量不足时，例如磁盘剩余空间低于阈值或剩余内存低于阈值（默认根分区磁盘空间低于85%，空闲内存低于500M）等，会触发Kubernetes的节点驱逐机制，将该节点设置为不可调度，上面的所有容器都设置为Evict状态，停止运行。</p>
<p>该机制对于无状态应用可以动态地规避有问题的节点，是一个好的特性。然而，在云平台的场景中，甚至对于普遍的有状态服务场景中，Eviction机制导致节点可用性变得非常动态，进而降低了整体的稳定性。例如，由于用户上传一个大的镜像，导致控制节点根分区利用率超过Eviction的阈值85%，云平台的所有控制服务就会被立即驱除，导致云平台控制平面完全不可用。用户在虚拟机磁盘写入大量数据导致宿主机磁盘空间利用率超过阈值，也会引起计算节点上所有服务被驱逐，进而导致这台计算节点上所有的虚拟机失联，无法控制。可以看到，虽然触发Eviction机制的问题存在造成服务问题的潜在可能，但是这些问题对服务的影响是延后的，逐步生效的。Eviction机制则使得这些潜在风险对服务的影响提前了，并立即发生，起到了放大的作用。</p>
<p>为了避免Eviction机制生效，云平台在计算节点的hostagent启动的时候，会自动检测该节点的Eviction阈值，并设置为计算节点的资源申请上限。云平台在调度主机的时候，会考虑到Eviction的阈值，避免资源分配触发Eviction。这个机制能从一定程度规避Eviction的出现，但云平台只能管理由云平台分配的资源，还是有可能不在云平台管理范围内的存储和内存的分配导致Eviction的情况。因此需要计算节点一定程度的内存和存储的over-provisioning。</p>
<p>目前，Eviction的存在也有一定的积极作用，那就是让节点资源的不足以云平台罢工的方式提出警示。由于云平台的冗余设计，云平台的暂时罢工并不会影响虚拟机的运行，因此影响程度还比较可控。无论如何，以云平台可用性的牺牲来实现资源不足的警示，代价还是有点大。这样的警示可以其他更柔和的方式来实现。随着云平台自身管理资源容量能力的完善，Eviction机制应该可以去除。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="4-容器内进程泄露">4. 容器内进程泄露<a class="hash-link" aria-label="Direct link to 4. 容器内进程泄露" title="Direct link to 4. 容器内进程泄露" href="https://www.cloudpods.org/en/blog/cloudpods-k8s-experience-sharing#4-%E5%AE%B9%E5%99%A8%E5%86%85%E8%BF%9B%E7%A8%8B%E6%B3%84%E9%9C%B2">​</a></h3>
<p>Cloudpods服务主要为golang开发的应用程序，容器镜像采用alpine基础镜像最小化构建，仅包含服务的二进制和alpine基础镜像，服务进程作为容器的启动进程（1号进程）运行。初期，我们的服务程序没有为作为1号进程做专门的优化，因此不具备systemd/init等正常操作系统1号进程具备的进程管理能力，例如处理孤儿进程，回收zombie进程等。然而，一些服务存在fork子进程的场景，例如kubeserver调用服务的时候会fork ssh执行远程命令，cloudmon则会执行采集监控数据的子进程。当这些子进程遇到异常退出时，由于我们的服务进程不具备主动回收子进程的功能，导致系统里积压了了大量退出异常未回收的子进程，导致进程泄露。这些子进程占用操作系统进程号，当达到系统最大进程数时，会出现系统CPU和内存非常空闲，但是无法进一步fork新的进程的情况，导致系统服务异常。</p>
<p>为了避免容器内进程泄露问题，我们在Cloudpods服务框架里加入了回收子进程的逻辑，并且添加到每个服务进程中，这样在子进程异常退出后，我们的服务进程会回收子进程资源，从而避免了这个问题。同时我们也配置了kubelet的 最大进程数的限制参数，限制一个pod里面最多能有1024个进程，作为辅助手段避免容器内的进程泄露。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="5-高可用不一定高可用">5. 高可用不一定高可用<a class="hash-link" aria-label="Direct link to 5. 高可用不一定高可用" title="Direct link to 5. 高可用不一定高可用" href="https://www.cloudpods.org/en/blog/cloudpods-k8s-experience-sharing#5-%E9%AB%98%E5%8F%AF%E7%94%A8%E4%B8%8D%E4%B8%80%E5%AE%9A%E9%AB%98%E5%8F%AF%E7%94%A8">​</a></h3>
<p>我们基于Kubernetes实现了控制节点的3节点高可用，基本思路是使用3个节点部署高可用的Kubernetes的控制服务，包括etcd, apiserver, scheduler, controller等。Kubernetes服务通过VIP访问。采用keepalived实现VIP在三个控制节点上的自动漂移。在此高可用Kubernetes集群之上，部署云平台控制服务，实现云平台控制平面的高可用。预期效果是将3个控制节点中的任意节点宕机后，主要服务不受影响，如果有影响，需能够在短时间内自动恢复。</p>
<p>然而，初期测试发现采用默认参数部署的 Kubernetes 高可用自动恢复的时间高达15分钟，不符合预期。经过调研发现，可以通过给各个组件设置相关的参数来减少恢复时间<a href="https://github.com/yunionio/ocadm/pull/39/files" target="_blank" rel="noopener noreferrer">https://github.com/yunionio/ocadm/pull/39/files</a>。经过参数调整，可以让Kubernetes集群高可用切换时间缩短到1分钟以内。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="6-服务的启动顺序">6. 服务的启动顺序<a class="hash-link" aria-label="Direct link to 6. 服务的启动顺序" title="Direct link to 6. 服务的启动顺序" href="https://www.cloudpods.org/en/blog/cloudpods-k8s-experience-sharing#6-%E6%9C%8D%E5%8A%A1%E7%9A%84%E5%90%AF%E5%8A%A8%E9%A1%BA%E5%BA%8F">​</a></h3>
<p>Kubernetes无法指定pod启动的顺序，同时也要求部署在Kubernetes里的服务不要对其他服务的启动先后顺序有依赖。云平台服务在采用Kubernetes部署管理之前是采用systemd管理，systemd可以明确定义服务之间的启动顺序。这导致服务之间有比较明显的先后次序依赖。比如，负责认证的keystone服务就要求最先启动，其他所有服务都依赖keystone服务提供初始化服务账号的认证。容器化改造后，由于这个依赖，导致在keystone容器启动之前的服务无法正常运行。定位到该问题后，我们将服务因为未成功认证服务账号的错误升级为致命错误。这样，该服务程序遇到依赖keystone服务未启动导致的问题就立即异常退出。进而，通过Kubernetes自动重启拉起服务进程。通过这样的改造消除了其他服务对keystone的启动顺序依赖。然而，我们无法找到有效手段识别出所有依赖启动顺序而出现的错误，因此这样的服务启动无顺序改造还在持续。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="7-证书失效问题">7. 证书失效问题<a class="hash-link" aria-label="Direct link to 7. 证书失效问题" title="Direct link to 7. 证书失效问题" href="https://www.cloudpods.org/en/blog/cloudpods-k8s-experience-sharing#7-%E8%AF%81%E4%B9%A6%E5%A4%B1%E6%95%88%E9%97%AE%E9%A2%98">​</a></h3>
<p>Kubernetes集群节点之间的相互认证和通信依赖PKI秘钥体系。如果节点的PKI证书过期，则该节点kubelet无法正常和ApiServer通信，进而导致节点状态被设置为NotReady，进而出现前述的容器驱逐导致节点不可用的严重问题。刚开始，我们部署的Kubernetes集群还是采用kubeadm默认的1年有效期的证书，当时还未顾及到证书到期的问题。到2020年底，开始陆续出现多个集群莫名服务不可用的情况，才注意到证书过期的问题。针对这个问题，我们刚开始采用cronjob安装自动更新证书脚本的方案，并且在客户巡检中，专门检查证书过期问题，以提前发现问题。后来到了2021年3.8版本，采用了更糙快猛的方法，直接修改了kubeadm的证书签发代码，一次性签发99年证书，从而彻底解决了Kubernetes的证书过期问题。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="8-iptables修改">8. iptables修改<a class="hash-link" aria-label="Direct link to 8. iptables修改" title="Direct link to 8. iptables修改" href="https://www.cloudpods.org/en/blog/cloudpods-k8s-experience-sharing#8-iptables%E4%BF%AE%E6%94%B9">​</a></h3>
<p>Kubernetes部署后，kubelet、kube-proxy以及我们采用的calico等都依赖iptables，会接管节点的iptables规则，在kubelet启动之后，对iptables规则的修改会被重置，并且会刷新iptables规则。如何持久化对iptables规则的修改成为问题。目前，针对节点的防火墙规则可以采用calico的网络策略来实现，可参考文章<a href="https://www.cloudpods.org/zh/blog/2021/09/25/calico-customized-node-firewall/" target="_blank" rel="noopener noreferrer">https://www.cloudpods.org/zh/blog/2021/09/25/calico-customized-node-firewall/</a>。但如何持久化配置更复杂的iptables规则，还没找到有效办法。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="未来的规划">未来的规划<a class="hash-link" aria-label="Direct link to 未来的规划" title="Direct link to 未来的规划" href="https://www.cloudpods.org/en/blog/cloudpods-k8s-experience-sharing#%E6%9C%AA%E6%9D%A5%E7%9A%84%E8%A7%84%E5%88%92">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-升级kubernetes版本">1. 升级Kubernetes版本<a class="hash-link" aria-label="Direct link to 1. 升级Kubernetes版本" title="Direct link to 1. 升级Kubernetes版本" href="https://www.cloudpods.org/en/blog/cloudpods-k8s-experience-sharing#1-%E5%8D%87%E7%BA%A7kubernetes%E7%89%88%E6%9C%AC">​</a></h3>
<p>目前，云平台底座kubernetes的版本是1.15.12，该版本已经不再被Kubernetes官方支持。目前版本存在的比较明显的问题是和较新的采用cgroup v2的操作系统不兼容，导致无法设置容器pod的资源limit。后续考虑升级底层Kubernetes到更新版本，以期获得更新的功能特性支持。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-采用k3s等更轻量kubernetes版本">2. 采用K3S等更轻量Kubernetes版本<a class="hash-link" aria-label="Direct link to 2. 采用K3S等更轻量Kubernetes版本" title="Direct link to 2. 采用K3S等更轻量Kubernetes版本" href="https://www.cloudpods.org/en/blog/cloudpods-k8s-experience-sharing#2-%E9%87%87%E7%94%A8k3s%E7%AD%89%E6%9B%B4%E8%BD%BB%E9%87%8Fkubernetes%E7%89%88%E6%9C%AC">​</a></h3>
<p>目前云平台依赖底层Kubernetes的功能特性不多，同时Kubernetes本身也要消耗一定的节点资源，后面也计划考虑采用k3s等更轻量的Kubernetes版本，进一步降低Kubernetes的使用成本。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-移除计算节点对iptables的依赖">3. 移除计算节点对iptables的依赖<a class="hash-link" aria-label="Direct link to 3. 移除计算节点对iptables的依赖" title="Direct link to 3. 移除计算节点对iptables的依赖" href="https://www.cloudpods.org/en/blog/cloudpods-k8s-experience-sharing#3-%E7%A7%BB%E9%99%A4%E8%AE%A1%E7%AE%97%E8%8A%82%E7%82%B9%E5%AF%B9iptables%E7%9A%84%E4%BE%9D%E8%B5%96">​</a></h3>
<p>计算节点网络主要依赖openvswitch实现虚拟机的通信，iptables主要是给kubelet，kube-proxy和cailico-node等Kubernetes服务组件使用，而计算节点上的服务组件主要是用来管理QEMU/KVM虚拟机的host-agent等服务，这些服务本身具备基于ovs的网络管理能，不依赖Kubernetes的网络，完全可以只依赖host网络即可正常工作。因此，其实可以去掉计算节点的kubeproxy，calico等组件，去除对iptables的修改，这样简化组件依赖，进一步提高系统的可靠性。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="4-完全禁用eviction机制">4. 完全禁用Eviction机制<a class="hash-link" aria-label="Direct link to 4. 完全禁用Eviction机制" title="Direct link to 4. 完全禁用Eviction机制" href="https://www.cloudpods.org/en/blog/cloudpods-k8s-experience-sharing#4-%E5%AE%8C%E5%85%A8%E7%A6%81%E7%94%A8eviction%E6%9C%BA%E5%88%B6">​</a></h3>
<p>Eviction机制在虚拟化云平台或有状态服务场景中，会起到故障放大的作用。在充分掌控对节点资源耗尽预警的前提下，应考虑彻底禁用Eviction机制。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="5-多数据中心架构的支持">5. 多数据中心架构的支持<a class="hash-link" aria-label="Direct link to 5. 多数据中心架构的支持" title="Direct link to 5. 多数据中心架构的支持" href="https://www.cloudpods.org/en/blog/cloudpods-k8s-experience-sharing#5-%E5%A4%9A%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83%E6%9E%B6%E6%9E%84%E7%9A%84%E6%94%AF%E6%8C%81">​</a></h3>
<p>目前云平台所有节点都运行在一个Kubernetes集群内。而云平台本身是可以支持多数据中心部署的。但是跨数据中心部署单个kubernetes集群不是最佳实践。比较理想的架构是单个kubernetes集群部署在一个数据中心内。因此，应该允许云平台跨多个Kubernetes集群部署。例如每个数据中心一个Kubernetes集群，其中一个集群部署完整的云平台，其他Kubernetes集群以从可用区的角色加入主集群。每个Kubernetes集群之上只运行管理一个数据中心所需的云平台组件。进而构成一个多数据中心的云平台架构。</p>]]></content>
        <author>
            <name>Zexi Li</name>
            <uri>https://github.com/zexi</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Cloudpods Golang实践]]></title>
        <id>https://www.cloudpods.org/en/blog/cloudpods-golang</id>
        <link href="https://www.cloudpods.org/en/blog/cloudpods-golang"/>
        <updated>2022-02-02T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Cloudpods是完全自研的一套云平台，Golang是该平台的主要后端开发语言。本文介绍我们在平台开发迭代过程中关于Golang的经验以及在Golang上积累的框架和库，包括积累的Golang工具库，以及基于这些工具库实现的开发框架。]]></summary>
        <content type="html"><![CDATA[<p>Cloudpods是完全自研的一套云平台，Golang是该平台的主要后端开发语言。本文介绍我们在平台开发迭代过程中关于Golang的经验以及在Golang上积累的框架和库，包括积累的Golang工具库，以及基于这些工具库实现的开发框架。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="背景介绍">背景介绍<a class="hash-link" aria-label="Direct link to 背景介绍" title="Direct link to 背景介绍" href="https://www.cloudpods.org/en/blog/cloudpods-golang#%E8%83%8C%E6%99%AF%E4%BB%8B%E7%BB%8D">​</a></h2>
<p>Cloudpods从2017年开始迭代开发。当时企业的IT环境已经不仅仅是本地的虚拟机以及裸金属，不少企业已经逐步采纳多云。所以Cloudpods平台作为新一代的云平台，需要不仅能管理本地IT环境中的虚拟机和裸金属，还能管理其他的云平台的资源，特别是公有云。实现所有的资源在一个平台上统一运维，操作，起到降低运维复杂度并提高企业IT运维效率的目的。</p>
<p>为了实现一个统一的多云平台，我们采用了最适合开发云原生应用的 Golang作为后端开发语言。前端则采用Vue框架。整个平台基于微服务框架。服务之间的认证鉴权基于OpenStack Keystone的框架（我们用Golang重新实现了Keystone）。</p>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/01-cloudpods-arch-95ff0ee4a28c89a93227b06c5f0575dc.png" width="4480" height="2520" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="cloudpods-golang技术栈">Cloudpods Golang技术栈<a class="hash-link" aria-label="Direct link to Cloudpods Golang技术栈" title="Direct link to Cloudpods Golang技术栈" href="https://www.cloudpods.org/en/blog/cloudpods-golang#cloudpods-golang%E6%8A%80%E6%9C%AF%E6%A0%88">​</a></h2>
<p>云联壹云的Golang技术栈包含两部分：</p>
<p>首先是一个Golang的服务框架，所有的服务组件都基于同一套服务框架来开发，这个服务框架针对云平台的特点做出优化，适合快速开发云服务的API和异步任务逻辑。</p>
<p>其次是四个主要的Golang工具库</p>
<ul>
<li>
<p>jsonutils：JSON序列化和反序列化 (<a href="https://github.com/yunionio/jsonutils" target="_blank" rel="noopener noreferrer">https://github.com/yunionio/jsonutils</a>)</p>
</li>
<li>
<p>sqlchemy：模仿python SQLAlchemy的ORM库 (<a href="https://github.com/yunionio/sqlchemy" target="_blank" rel="noopener noreferrer">https://github.com/yunionio/sqlchemy</a>)</p>
</li>
<li>
<p>structarg：基于结构体的命令行参数生成和解析工具 (<a href="https://github.com/yunionio/structarg" target="_blank" rel="noopener noreferrer">https://github.com/yunionio/structarg</a>)</p>
</li>
<li>
<p>pkg：其他一些辅助工具和方法 (<a href="https://github.com/yunionio/pkg" target="_blank" rel="noopener noreferrer">https://github.com/yunionio/pkg</a>)</p>
</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="golang框架">Golang框架<a class="hash-link" aria-label="Direct link to Golang框架" title="Direct link to Golang框架" href="https://www.cloudpods.org/en/blog/cloudpods-golang#golang%E6%A1%86%E6%9E%B6">​</a></h2>
<p>大部分Cloudpods服务都基于同一套服务框架开发，此框架的特点是针对云服务开发进行了适配和优化。</p>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/02-golang-framework-69adc6b096201ce9a1ad362b9c5632b6.png" width="4480" height="2520" class="img_ev3q"></p>
<p>Cloudpods的服务框架可以简单地认为是一套方便CRUD的脚手架。云服务主要是对云资源的操作，比如云资源的创建、删除、更新等。服务框架内置了云资源的CRUD API的基础框架，再加上异步任务机制实现对云资源的复杂操作以及资源模型的修改。</p>
<p>除CRUD脚手架外，服务框架把认证，权限、配额等云平台特有的功能内置集成，使得认证和权限成为云平台默认的标配，同时简化相应功能的实现。</p>
<p>首先，服务组件之间的通信基于OpenStack Keystone认证，我们将keystone认证加到框架中，使得服务组件开发者不需关注keystone认证流程如何实现，就能天然支持keystone认证。其次，每一个API请求都受到权限的控制，因此把权限控制也集成到框架中。开发者在实现REST API时，基本不必为权限控制实现相应的代码，就能够天然地将权限控制集成到API中。</p>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/03-keystone-8cbb296ffa9edfbd49227bfac91abadc.png" width="4480" height="2520" class="img_ev3q"></p>
<p>与此同时，每一个服务都有相应的配置参数，如何方便地管理各个服务的配置，允许对配置更新并同步到相应的组件使其生效，此过程相对复杂。我们将服务配置的功能集成到框架中，开发者采用框架不必考虑配置的存储、更新、服务器读取更新并使配置生效，这些复杂事宜已在框架中解决。</p>
<p>另外，还有异步任务的管理功能。平台是一个分布式的系统，云控制器需要去操作和管理数据计算节点、裸金属的管理节点。协调组件之间的复杂操作，例如将虚拟机、裸金属创建起来，这些都是分布式的任务管理，在平台中也嵌入了异步任务管理框架。如此即可较为方便地实现异步任务。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="crud脚手架原理">CRUD脚手架原理<a class="hash-link" aria-label="Direct link to CRUD脚手架原理" title="Direct link to CRUD脚手架原理" href="https://www.cloudpods.org/en/blog/cloudpods-golang#crud%E8%84%9A%E6%89%8B%E6%9E%B6%E5%8E%9F%E7%90%86">​</a></h3>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/04-crud-6a1598162d0e280ab5bf30f4a5846c77.png" width="4480" height="2520" class="img_ev3q"></p>
<p>在平台中，每一种资源，例如主机，在底层对应到数据库MySQL表，资源的状态、相应的属性都记录到了MySQL表中。</p>
<p>用户通过调用API对数据进行操作，在数据操作的同时也能调用异步的任务去实现相应功能。落到底层代码中就是一种资源对应到一张MySQL表。</p>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/05-model-manager-cdcd2db142b305552994369f5662ed87.png" width="4480" height="2520" class="img_ev3q"></p>
<p>为了比较方便地实现对数据库MySQL记录的操作，针对每一个资源，都会对应到一对ModelManager和Model的数据结构。ModelManager数据结构对实现一类资源的集合操作，例如创建资源或者列表，而针对单个资源的操作，则通过Model来实现，实现对单个具体资源的更新、删除的操作。</p>
<p>每个资源的Model对应到Golang的一个结构体，该结构体有若干字段，每个字段代表资源的属性，例如有一个用户的资源包含用户的id、extra属性,用户是否enabled，用户何时创建，归属的域等。一个属性就是Golang结构体的一个字段，通过结构体字段的Tag属性定义每个字段在MySQL的数据库中对应的schema的定义。</p>
<p>例如Id这个字段，属性中有</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">width:"64" charset:"ascii" nullable:"false" primary:"true"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>这些tags定义了Id这个字段是数据库里面的一个VARCHAR(64)的字段，并且他的字符集是ascii码，不能为空，并且是主键。所以通过tag将结构体的字段映射到了MySQL的schema的字段中，如此，每一个model通过字段的定义就能够清晰地映射到MySQL的数据表中。这样实现了Model的字段和MySQL的数据表定义的严格同步，每次程序启动时都会进行schema的同步检查，如果Model 的定义和数据表的定义不一致，就会执行相应的SQL的变更操作，将表的schema定义和Model的定义变更为一致。例如我们将Id的宽度从64改成80，在程序重启时就能够发现这个变化，然后将数据表该知道的宽度变更成80。如此实现通过代码定义的Model 和数据库中的表定义的严格同步。（另外，也支持离线变更数据库Schema，即只检测数据库Schema的变更，并且输出对应的SQL语句，通过专门的离线数据库schema变更工具实现数据库的变更。）</p>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/06-api-model-methods-34d2c45a6f1d3b158e529c0752d88778.png" width="4480" height="2520" class="img_ev3q"></p>
<p>与此同时，每类资源都会提供一系列的API，此处列出了对一个资源会实现的九类API，包括创建、删除、更新、执行操作、获取详情、列表等操作。</p>
<p>每一个操作对应一个REST API，每一个REST API对应到后端代码中就对应到了每一个资源对应的ModalManager或者Model的方法。</p>
<p>例如获取资源详情的REST API是:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">GET /resources/&lt;res_id&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>调用这个REST API其实就映射到相应的Model的GetDetails方法。为了实现获取资源的详情只需要去实现Model中的GetDetails的方法。</p>
<p>通过框架简化了实现云资源REST API的流程，只需要把相应的Model和ModelManager的方法根据输入实现相应逻辑，然后把正确的输出返回回去，这个REST API的功能即可实现。</p>
<p>如此诸如鉴权 、认证、配置同步等周边的工作在框架中实现，从而大大提升了开发效率并降低在开发过程中犯错的几率。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="golang-工具库">Golang 工具库<a class="hash-link" aria-label="Direct link to Golang 工具库" title="Direct link to Golang 工具库" href="https://www.cloudpods.org/en/blog/cloudpods-golang#golang-%E5%B7%A5%E5%85%B7%E5%BA%93">​</a></h2>
<p>下面介绍在Cloudpods开发过程中积累的Golang工具库。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="jsonutils">jsonutils<a class="hash-link" aria-label="Direct link to jsonutils" title="Direct link to jsonutils" href="https://www.cloudpods.org/en/blog/cloudpods-golang#jsonutils">​</a></h3>
<p>jsonutils是一个JSON序列化和反序列的工具库。</p>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/07-encoding-json-ee397b271a7d3a8693aef6ac0f00f808.png" width="4480" height="2520" class="img_ev3q"></p>
<p>Golang 的标准库中带的JSON库是encoding/json，encoding/json是一个非常强大、非常高效的JSON序列化和反序列的工具库。encoding/json实现的是Golang的数据结构和对应json的字符串之间的相互转换。可以把Golang中的结构体通过Marshal的方式生成一个Json的字符串，或者把Json的字符串通过Unmarshal放到相应的结构体中的各个字段，这样即可访问结构体去获得json中的这些值。</p>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/08-jsonutils-de4f2ceaa80c595621680f9673512433.png" width="4480" height="2520" class="img_ev3q"></p>
<p>jsonutils与encoding/json相比的明显区别是中间增加了一个中间态，在jsonutils库里面实现一个中间态的通用类型的数据类型JSONObject。我们可以把数据结构Marshal（s）成JSONObject，JSONObject是Golang的interface，该interface可以进一步地序列化成json字符串。</p>
<p>这个中间态就是使用jsonutils的重要原因，通过通用类型的JSONObject就可以实现任意的结构体都可以Marshal（s）成JSONObject然后可以把JSONObject作为函数参数进行传递。</p>
<p>Golang是一个严格类型检查的静态语言，它的每一个变量都有相应的类型，我们的框架能够处理任意API的输入输出，如果没有中间的结构体，在处理API的输入输出时，输入是json字符串， 为了在程序上访问它， 就必须把它反序列化成严格的有类型结构体，这样一来就无法将框架变成通用框架。</p>
<p>如果引入通用的JSONObject，在框架中输入了json字符串， 先把它反序列化成JSONObject，这个JSONObject是通用类型的，这样就可以将JSONObject作为参数再进一步的向下传递，直到传递到具体相应的Model或者ModelManager相应的方法中，然后进一步把它转换成相应的结构体。这样就允许框架中使用已经反序列化好的JSONObject 并进行操作，可以实现比较通用的框架。</p>
<p>平台采用jsonutils最主要的原因是方便实现通用的框架。同时jsonutils还有其它特别之处，JSONObject 不仅能够转换成JSON字符串，也可以转换成QueryString 或者是把QueryString 反序列化成JSONObject 或者可以序列化成YAML的字符串。</p>
<p>这样可以实现更方便的功能，比如对于列表 GET这种读取的这种API，它的参数通常作为QueryString 嵌入到URL中。如此我们可以将QueryString参数在框架中反序列化成JSONObject，把它作为JSONObject输入参数传入到框架中。</p>
<p>对于其他类型的请求，可以把请求参数放在HTTP请求的body中的JSON字符串，我们同样可以把请求参数解析成JSONObject。这样，可以以同样的逻辑去处理嵌入到URL中的QueryString的参数以及嵌入到body 中的JSON的参数，可以做到统一处理出入参数的逻辑。</p>
<p>另外jsonutils 还有还有一些针对云平台API做的一些特别的一些处理。较为特别的一点是支持结构体字段的版本变更。</p>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/09-jsonutils-deprecated-c1f28502e12e79d63f3c1e2bf8c47c0a.png" width="4480" height="2520" class="img_ev3q"></p>
<p>以下为举例说明：</p>
<p>例如有一个输入参数的结构体称为Input，有一个字段是TenantId，用来标识用户的租户ID。</p>
<p>随着版本的升级，希望将TenantId统一改名为ProjectId，这种升级如果不做任何处理，将可能出现接口兼容性的问题，在变更之前这个字段是TenantId，变更之后这个字段就只能是ProjectId。升级后，使用TenantId的客户端就不能正确访问这个接口。</p>
<p>在这个结构体中，我们增加了特别的tag：yunion-deprecated-by，把这个结构体input升级为新的input的结构之后，增加了ProjectId的字段，用它来代表新的TenantId的属性。</p>
<p>旧的TenantId仍然保留，但是在结构体的tag中加了名称为yunion-deprecated-by的tag，这个Tag的值是ProjectId。表明TenantId的字段已经被ProjectId这个字段deprecated。</p>
<p>代码在处理时，如果旧客户端的参数中只有TenantId，此时框架就会将TenantId的值根据yunion-deprecated-by这个tag 指引同时copy到ProjectId的字段中。</p>
<p>这样，如果旧的客户端去访问新的接口，在新的接口中同样可以用ProjectId这个字段去获取这个值。这样保证了旧的客户端可以访问升级后的接口。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="sqlchemy">sqlchemy<a class="hash-link" aria-label="Direct link to sqlchemy" title="Direct link to sqlchemy" href="https://www.cloudpods.org/en/blog/cloudpods-golang#sqlchemy">​</a></h3>
<p>Sqlchemy是前文介绍的Golang服务框架中实现Model和数据库表映射的底层实现。</p>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/10-sqlchemy-a299e00660a79ae4feb06207a9dba93c.png" width="4480" height="2520" class="img_ev3q"></p>
<p>Sqlchemy实现了Golang的数据结构到MySQL表单向同步，能够根据结构体字段的定义以及字段中tag的定义，生成精确的MySQL的schema。</p>
<p>Sqlchemy能保证数据库中schema总是严格地和结构体定义保持一致，如果不一致，能够自动地变更数据库，将数据库Schema和结构体的定义变更为一致。</p>
<p>Sqlchemy另一个重要特性是能够实现结构化的数据库查询语句。</p>
<p>这里举一个简单的例子。如上图所示，我们要对UserTable表进行一个查询。首先实例化UserTable实例，然后调用它的Query接口返回一个SQuery实例，再调用Equals方法，进行过滤。这样就表示在查询user表，并且要求domain_id 这个字段要等于指定的值。Sqlchemy在执行时会把结构体的结构化查询变成SQL的查询语句，并送到MySQL进行执行。</p>
<p>使用这种代码化的数据库查询方式的优点是避免了人工拼凑SQL容易出现的问题,并且Golang是一个严格的静态语言。可以通过Golang的语法检查保证查询语句的正确性。</p>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/11-sqlchemy-query-253a5ed781b79fd214f5d094698b7656.png" width="4480" height="2520" class="img_ev3q"></p>
<p>另一个好处是因为把SQL的查询代码化，这样就可以把数据库查询的逻辑进行一定程度的代码复用，这样就不用重复同样的查询语句，而是调用一个方法，这个方法中就嵌入了SQL的查询逻辑。</p>
<p>框架中所有数据库的操作查询都用到sqlchemy，在一定程度上保证框架代码中SQL语句的正确性以及执行效率。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="structarg">structarg<a class="hash-link" aria-label="Direct link to structarg" title="Direct link to structarg" href="https://www.cloudpods.org/en/blog/cloudpods-golang#structarg">​</a></h3>
<p>还有一个比较重要一个库是structarg，这个库的作用是将程序的命令行参数或者配置文件信息和代码中的结构体做严格的映射。</p>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/12-structarg-ef03ed8c58445eabeb0cdaa00ec22f8d.png" width="4480" height="2520" class="img_ev3q"></p>
<p>这样可以基于结构体自动生成程序输入参数的提示，并且能够根据命令行参数将参数中的值反序列化放到结构体中， 或者是将对应配置文件中的参数反序列化到结构体中，在程序中就可以通过访问结构体的字段去访问相应参数的值。</p>
<p>如此即可比较方便地在程序中使用配置的信息，这里举个例子。
假设定义了UserOption的结构体，这个结构体tag中包含一个help的tag，这个tag的定义了结构体的每个字段的帮助信息。将其初始化并进行程序编译之后，如果命令行中执行带help的参数的话，其将会把这些帮助信息展现出来。</p>
<p>同时，用户也可以在命令行参数中去用这些参数把值传递到程序中，在程序代码中即可通过访问结构体去访问这些参数。</p>
<p>同时，也支持配置文件的输入，而且配置文件同时支持Key=Value格式和YAML格式。</p>
<p>这样可以将程序的配置文件的配置信息通过结构体定义下来，程序就能够自动地识别配置文件的信息，然后将信息放到结构体中访问。</p>
<p>框架中对配置管理的基础就是structarg的功能，利用该功能将每一个服务的配置用结构体来定义，并且配置的信息会存到数据库中，在数据库的信息进行修改之后，框架会把数据库中的配置信息拉取下来，然后把它反序列化到结构体中，程序中能够感知到配置的变更，并做出相应的配置变更处理。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="pkg">pkg<a class="hash-link" aria-label="Direct link to pkg" title="Direct link to pkg" href="https://www.cloudpods.org/en/blog/cloudpods-golang#pkg">​</a></h3>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/13-pkg-699c85da56447ea31ce82d4a729e1165.png" width="4480" height="2520" class="img_ev3q"></p>
<p>除去三个比较重要的库之外， 还有一些其他辅助的工具库在pkg这个库中。包括模仿python的prettytable的格式化输出数据的库，错误处理库，保证key顺序的map的实现等。这里就不一一介绍，感兴趣的读者可以阅读相关源码。</p>]]></content>
        <author>
            <name>Jian Qiu</name>
            <uri>https://github.com/swordqiu</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[天空计算——云计算的下一个时代?]]></title>
        <id>https://www.cloudpods.org/en/blog/skycomputing</id>
        <link href="https://www.cloudpods.org/en/blog/skycomputing"/>
        <updated>2022-01-21T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[背景介绍]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="背景介�绍">背景介绍<a class="hash-link" aria-label="Direct link to 背景介绍" title="Direct link to 背景介绍" href="https://www.cloudpods.org/en/blog/skycomputing#%E8%83%8C%E6%99%AF%E4%BB%8B%E7%BB%8D">​</a></h2>
<p>根据加州大学伯克利分校的两位杰出计算机科学教授Ion Stoica和 Scott Shenker 的说法，我们即将从云计算时代过渡到“天空计算”时代。</p>
<p>顾名思义，天空计算是云平台之上的一层——其目标是实现云之间的互操作性。</p>
<p>Stoica 教授曾正确预测云计算的未来，早在 2009 年 2 月，他和伯克利的一群学者发表了一篇关于当时新兴的云行业的有影响力的论文。</p>
<p>当时，亚马逊网络服务刚刚成立几年，谷歌唯一的云产品是 App Engine，微软的 Azure 尚未正式发布。2009 年的论文得出的结论是，“梦想已久的计算作为一种实用工具的愿景终于出现了。”</p>
<p>尽管云计算确实在 2010 年代从根本上改变了 IT 行业以及应用程序的构建和部署方式，但也存在一个明显的问题——云计算并没有像互联网或网络那样成为一种公用事业。</p>
<p>到 2021 年，没有一个单一的底层云平台具有一套任何人都可以使用的开放标准。取而代之的是，云计算已经演变成一系列在很大程度上彼此不兼容的专有平台：亚马逊网络服务(AWS)、微软 Azure、谷歌云等。因此 Stoica 教授的论文中出现了“一个更加商品化的云计算版本，称之为天空计算”的愿景。</p>
<p><img decoding="async" loading="lazy" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/52a8e1e113284a4a9cb06d2001ac876f~tplv-k3u1fbpfcp-zoom-1.image" alt="图片" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="实施多云平台">实施多云平台<a class="hash-link" aria-label="Direct link to 实施多云平台" title="Direct link to 实施多云平台" href="https://www.cloudpods.org/en/blog/skycomputing#%E5%AE%9E%E6%96%BD%E5%A4%9A%E4%BA%91%E5%B9%B3%E5%8F%B0">​</a></h2>
<p>从本质上讲，这是关于启用多云应用程序开发。“为了实现效用计算的愿景，应用程序应该能够在任何云提供商上运行（即，一次编写，随处运行），” Stoica 教授的论文断言。</p>
<p>本质上，天空计算支持多云应用程序开发。</p>
<p>开发人员为何要为多云环境构建应用程序？传统观点认为，选择一个云提供商并使用该公司提供的服务套件会更容易。然而，该论文拒绝了这一观点，而是建议具有“计算密集型工作负载”的应用程序更适合多云环境。</p>
<p>因为计算更简单，不需要处理出口费用，将数据放入云中无需花钱，但将数据从云中取出需要花费很多，特别是正在进行训练或高参数调整的机器学习中。这些都是计算密集型的工作，因此将这些工作转移到可以更快、更便宜地完成的地方是很有意义的。当然，如果移动计算，还需要移动训练数据——但总的来说，与训练或调整模型的成本相比，移动这些数据的成本相形见绌。”</p>
<p>该论文建议天空计算由三层组成：“一个用于掩盖低级技术差异的兼容层，一个将作业路由到正确云的云间层，以及一个允许云之间就有关问题达成一致的对等层。”&nbsp;这三层反映了互联网本身的设计方式——例如，互联网协议 (IP) 提供了网络间兼容性。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="天空计算由三层组成兼容性云间和对等">天空计算由三层组成：兼容性、云间和对等<a class="hash-link" aria-label="Direct link to 天空计算由三层组成：兼容性、云间和对等" title="Direct link to 天空计算由三层组成：兼容性、云间和对等" href="https://www.cloudpods.org/en/blog/skycomputing#%E5%A4%A9%E7%A9%BA%E8%AE%A1%E7%AE%97%E7%94%B1%E4%B8%89%E5%B1%82%E7%BB%84%E6%88%90%E5%85%BC%E5%AE%B9%E6%80%A7%E4%BA%91%E9%97%B4%E5%92%8C%E5%AF%B9%E7%AD%89">​</a></h2>
<p>兼容层将使应用程序开发人员能够轻松地选择他们的应用程序并将其从AWS 迁移到 Google Cloud。多云的用武之地是云间层，因为它将允许应用程序跨多个云提供商运行——这取决于用户的需求。以下是 Stoica 教授的解释：</p>
<p>理想情况下，通过云间层，用户可以为其工作指定首选项——比如想最小化成本，或最小化时间，或者需要在本地处理这些数据——云间层将决定在何处运行客户工作以满足这些偏好。</p>
<p>关于数据本地性示例，应用程序必须使用特定地理位置的原因可能是地缘政治或其他原因。如果一个应用程序想要处理一些不得离开某个国家/地区边界的数据，并且该国家/地区只有一个云数据中心。在这种情况下，云间层会自动将该应用程序路由到该云数据中心。但所有其他应用程序可能使用不同的云平台，具体取决于应用程序开发人员定义的云间规则。</p>
<p>谁来提供这个云间层？Stoica 教授认为它可以由现有的云平台提供，或者可能会出现一种新型的“虚拟云”公司来专门从事这种路由功能。他建议使用“无基础设施云”这一术语，因为云间层不需要基础设施（服务器、数据库等）。</p>
<p><img decoding="async" loading="lazy" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ec2a28b8d15144c9ba795e0213e224cb~tplv-k3u1fbpfcp-zoom-1.image" alt="图片" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="云计算头部企业如何应对">云计算头部企业如何应对？<a class="hash-link" aria-label="Direct link to 云计算头部企业如何应对？" title="Direct link to 云计算头部企业如何应对？" href="https://www.cloudpods.org/en/blog/skycomputing#%E4%BA%91%E8%AE%A1%E7%AE%97%E5%A4%B4%E9%83%A8%E4%BC%81%E4%B8%9A%E5%A6%82%E4%BD%95%E5%BA%94%E5%AF%B9">​</a></h2>
<p>随着多云成为天空计算的优先事项，一个关键的挑战将是购买当今市场领先的云平台——尤其是 AWS、微软和谷歌。</p>
<p>那么哪些主要平台会率先迈向天空计算，他们的动机是什么？</p>
<p>根据经济学理论，在市场上排名第二或第三的云（例如谷歌）最有可能做到这一点，因为这是他们获得更多市场份额的一种方式。如果他们提供更快或更便宜的基础设施，天空云平台将使他们更容易从其他云中获得更多工作负载。</p>
<p>但是，应用程序开发人员不一定需要大型云平台的许可才能获得“天空计算”功能。</p>
<p>现在可以做到开发一个应用程序——比如机器学习管道——并进行数据处理、训练和服务来为模型提供服务。可以在谷歌上接受培训，在亚马逊上服务。</p>
<p>今天使用多云的问题在于，它是“笨拙”且“不是自动的，而是手动的”，当然还有出口费用。</p>
<p><strong>天空计算可能会扩展云提供商的软件即服务业务。</strong></p>
<p>大公司面临的另一个挑战是，他们会将此视为其核心云平台的商品化。但 Stoica 指出，这些企业的其他部门将受益——例如，对于微软的 Office 团队，“这将允许他们在亚马逊的云或谷歌云上运行 Office。”</p>
<p>因此，天空计算可能会扩展大型云提供商的软件即服务业务。当然，微软是否愿意这样做仍然存疑，但如果所有的云竞争对手都转向天空计算模式，那么他们将别无选择，只能跟随市场。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="会出现下一个-kubernetes-吗">会出现下一个 Kubernetes 吗？<a class="hash-link" aria-label="Direct link to 会出现下一个 Kubernetes 吗？" title="Direct link to 会出现下一个 Kubernetes 吗？" href="https://www.cloudpods.org/en/blog/skycomputing#%E4%BC%9A%E5%87%BA%E7%8E%B0%E4%B8%8B%E4%B8%80%E4%B8%AA-kubernetes-%E5%90%97">​</a></h2>
<p>Docker 和 Kubernetes 作为大规模管理云计算的方式出现在多年之前，那么 DevOps 工具中的类似创新是否可能会在未来几年内推动天空计算的采用？</p>
<p>“展望未来，我认为会有很多创新，因为将云抽象出来并不容易。即使它们提供相同的服务——比如 Kubernetes——谷歌托管的服务与亚马逊或微软托管的并不完全相同，所以从根本上说，发布和公开服务 API 的能力，以及它们之间的差异，我认为会在这些方面看到很多创新。”</p>
<p>Stoica 教授还认为在数据层（因为必须透明有效地跨云移动数据）和安全（需要授权和认证，每个云略有不同）都会有创新。</p>
<p>未来会有很多创新，考虑到它们提供的无数服务，将云抽象出来并不容易。</p>
<p>因此，也许类似于 2010 年代的云计算革命为这些云平台之上的服务开辟巨大的市场，我们现在称之为“云原生”行业，初创公司将有很多机会提供解决方案促进或建立在天空计算层上。</p>
<p>同样，前端也需要解决方案。开发人员将如何指定上面提到的应用程序首选项（使用云间层）？</p>
<p>并且另一个挑战将是“如何指定可以分发的应用程序的主要组件以及在哪里分发。”&nbsp;例如，也许客户想在 Google 上完成机器学习方面的工作，但在 AWS 或 Azure 上完成另一项关键任务。因此，随着天空计算时代的到来，这将是初创公司在未来十年探索的蓝海。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="结论">结论<a class="hash-link" aria-label="Direct link to 结论" title="Direct link to 结论" href="https://www.cloudpods.org/en/blog/skycomputing#%E7%BB%93%E8%AE%BA">​</a></h2>
<p>Stoica教授和他的伯克利同事在 2009 年对云计算的未来有先见之明，现在，Stoica教授在新论文中为公用事业云计算提供了令人信服的案例。但要实现这一愿景，至少有一家大型云提供商需要迈出构建兼容性和云间层的第一步。</p>
<p>这家公司可能会是 Google（毕竟它是开发 Kubernetes 的公司）。但微软也证明了它愿意支持开源并转向新兴的云计算趋势。虽然市场领导者 AWS 迈出第一步的可能性很小，但亚马逊实际上也是发明了云计算的公司。</p>
<p>无论哪个云计算公司迈出第一步，众多新创业公司都将有机会在未来十年构建天空计算平台时大放异彩。</p>
<p>引用参考文章：<a href="https://thenewstack.io/sky-computing-the-next-era-after-cloud-computing/" target="_blank" rel="noopener noreferrer">https://thenewstack.io/sky-computing-the-next-era-after-cloud-computing/</a></p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Cloudpods + Rook + Ceph 轻松实现云原生的超融合私有云]]></title>
        <id>https://www.cloudpods.org/en/blog/rook-ceph-with-cloudpods</id>
        <link href="https://www.cloudpods.org/en/blog/rook-ceph-with-cloudpods"/>
        <updated>2021-10-09T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[背景介绍]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="背景介绍">背景介绍<a class="hash-link" aria-label="Direct link to 背景介绍" title="Direct link to 背景介绍" href="https://www.cloudpods.org/en/blog/rook-ceph-with-cloudpods#%E8%83%8C%E6%99%AF%E4%BB%8B%E7%BB%8D">​</a></h2>
<ul>
<li><a href="https://www.cloudpods.org/" target="_blank" rel="noopener noreferrer">Cloudpods</a>: 是我们开源的多云管理平台，运行在 Kubernetes 之上，里面包含一个完整的私有云实现。</li>
<li><a href="https://rook.io/docs/rook/v1.7" target="_blank" rel="noopener noreferrer">Rook</a>: 是一个分布式存储编排系统，目的是在 Kubernetes 上提供存储解决方案，本身不提供存储，而是在 Kubernetes 和存储系统之间提供适配层，简化存储系统的部署和维护工作。其支持的 Ceph 存储为 Stable 生产可用的状态。</li>
<li><a href="https://docs.ceph.com/" target="_blank" rel="noopener noreferrer">Ceph</a>: 是开源的分布式存储系统，主要功能包含 RBD 块存储以及 CephFS 分布式文件系统存储。</li>
</ul>
<p>Cloudpods 服务以容器化的方式运行在 Kubernetes 集群之上，按照 <a href="https://www.cloudpods.org/en/docs/getting-started/">安装部署</a> 文档部署完 Cloudpods 之后，环境就有了一个完整的 Kubernetes 集群。</p>
<p>但 Cloudpods 内置私有云虚拟机使用的是本地存储，本文主要介绍使用 Rook 在 Cloudpods Kubernetes 集群里面的计算节点上部署 Ceph 集群，然后把 Rook 管理的 Ceph 集群暴露出来对接 Cloudpods 的私有云虚拟机。</p>
<p>Cloudpods 内置私有云提供虚拟化功能， Rook 管理的 Ceph 提供分布式存储，并且这些服务都是容器化，基于 Kubernetes 运行的。Cloudpods 运行虚拟机的节点也叫计算节点，计算节点也是 Kubernetes 的 Node，只要计算节点上有独立的裸盘，就可以使用 Rook 把 Ceph 部署到计算节点上，把这些技术结合起来可以轻松实现一个云原生的超融合私有云。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="环境准备">环境准备<a class="hash-link" aria-label="Direct link to 环境准备" title="Direct link to 环境准备" href="https://www.cloudpods.org/en/blog/rook-ceph-with-cloudpods#%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87">​</a></h2>
<ul>
<li>Cloudpods：v3.6 以上的多节点部署版本<!-- -->
<ul>
<li>3 台计算节点，有单独的裸盘给 Ceph 使用(同时作为存储节点使用)</li>
</ul>
</li>
<li>Kubernetes：v1.15.9 版本(Cloudpods 默认的集群)</li>
<li>Rook: v1.7 版本</li>
<li>操作系统：CentOS 7</li>
<li>内核版本：3.10.0-1062.4.3.el7.yn20191203.x86_64<!-- -->
<ul>
<li>如果使用 CephFS 建议的内核版本是 4.17 以上的版本，可以升级我们官方提供的 5.4 版本内核</li>
</ul>
</li>
</ul>
<p>其中 Ceph 相关的环境准备工作和限制可以参考 Rook 提供的文档：<a href="https://rook.io/docs/rook/v1.7/pre-reqs.html" target="_blank" rel="noopener noreferrer">https://rook.io/docs/rook/v1.7/pre-reqs.html</a> 。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="使用-rook-部署-ceph">使用 Rook 部署 Ceph<a class="hash-link" aria-label="Direct link to 使用 Rook 部署 Ceph" title="Direct link to 使用 Rook 部署 Ceph" href="https://www.cloudpods.org/en/blog/rook-ceph-with-cloudpods#%E4%BD%BF%E7%94%A8-rook-%E9%83%A8%E7%BD%B2-ceph">​</a></h2>
<p>接下来介绍使用 Rook 在已有的 Cloudpods Kubernetes 集群上部署 Ceph 集群，这里有个前提是已经按照 <a href="https://www.cloudpods.org/en/docs/getting-started/onpremise/host">安装部署/添加节点</a> 文档，部署了一个多节点的 Cloudpods 集群。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="节点信息">节点信息<a class="hash-link" aria-label="Direct link to 节点信息" title="Direct link to 节点信息" href="https://www.cloudpods.org/en/blog/rook-ceph-with-cloudpods#%E8%8A%82%E7%82%B9%E4%BF%A1%E6%81%AF">​</a></h3>
<p>假设已有的 3 个节点为 node-{0,1,2}，每个节点的磁盘信息如下，sd{b,c,d} 都是没有分区的裸盘，留给 Ceph 使用：</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ lsblk</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">NAME   MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sda      </span><span class="token number" style="color:#36acaa">8</span><span class="token plain">:0    </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">931</span><span class="token plain">.5G  </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> disk</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├─sda1   </span><span class="token number" style="color:#36acaa">8</span><span class="token plain">:1    </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">     1M  </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> part</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├─sda2   </span><span class="token number" style="color:#36acaa">8</span><span class="token plain">:2    </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">   512M  </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> part /boot</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">└─sda3   </span><span class="token number" style="color:#36acaa">8</span><span class="token plain">:3    </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">   931G  </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> part /</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sdb      </span><span class="token number" style="color:#36acaa">8</span><span class="token plain">:16   </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">931</span><span class="token plain">.5G  </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> disk</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sdc      </span><span class="token number" style="color:#36acaa">8</span><span class="token plain">:32   </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">   </span><span class="token number" style="color:#36acaa">3</span><span class="token plain">.7T  </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> disk</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sdd      </span><span class="token number" style="color:#36acaa">8</span><span class="token plain">:48   </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">   </span><span class="token number" style="color:#36acaa">3</span><span class="token plain">.7T  </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> disk</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>使用 <code>kubectl get nodes</code> 可以看到已经在 Kubernetes 集群中的节点：</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ kubectl get nodes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">NAME      STATUS   ROLES    AGE   VERSION</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cloudbox  Ready    master   34d   v1.15.9-beta.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">node-0    Ready    </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">none</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain">   12d   v1.15.9-beta.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">node-1    Ready    </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">none</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain">   11d   v1.15.9-beta.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">node-2    Ready    </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">none</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain">   11d   v1.15.9-beta.0</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>然后给对应的节点打上 role=storage-node 的标签：</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># 打标签</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ kubectl label </span><span class="token function" style="color:#d73a49">node</span><span class="token plain"> node-0 </span><span class="token assign-left variable" style="color:#36acaa">role</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">storage-node</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ kubectl label </span><span class="token function" style="color:#d73a49">node</span><span class="token plain"> node-1 </span><span class="token assign-left variable" style="color:#36acaa">role</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">storage-node</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ kubectl label </span><span class="token function" style="color:#d73a49">node</span><span class="token plain"> node-2 </span><span class="token assign-left variable" style="color:#36acaa">role</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">storage-node</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 查看标签对应的节点</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ kubectl get nodes </span><span class="token parameter variable" style="color:#36acaa">-L</span><span class="token plain"> role</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">NAME       STATUS   ROLES    AGE   VERSION          ROLE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cloudbox   Ready    master   34d   v1.15.9-beta.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">node-0     Ready    </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">none</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain">   12d   v1.15.9-beta.0   storage-node</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">node-1     Ready    </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">none</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain">   11d   v1.15.9-beta.0   storage-node</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">node-2     Ready    </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">none</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain">   11d   v1.15.9-beta.0   storage-node</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>另外执行 <code>climc host-list</code> 命令(climc 是云平台的命令行工具)，也可以看到这 3 个节点作为 Cloudpods 的计算节点加入到了云平台:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ climc host-list</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+--------------------------------------+----------+-------------------+----------------+--------------+-----------------------------+---------+---------+-------------+----------+-----------+------------+------------+--------------+------------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">                  ID                  </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">   Name   </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">    Access_mac     </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">   Access_ip    </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">   Ipmi_Ip    </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">         Manager_URI         </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> Status  </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> enabled </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> host_status </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> mem_size </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> cpu_count </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> node_count </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">     sn     </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> storage_type </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> host_type  </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+--------------------------------------+----------+-------------------+----------------+--------------+-----------------------------+---------+---------+-------------+----------+-----------+------------+------------+--------------+------------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> 0d8023ad-ebf9-4a3c-8294-fd170f4ce5c6 </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> node-0   </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">38</span><span class="token plain">:ea:a7:8d:94:78 </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">172.16</span><span class="token plain">.254.127 </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">172.16</span><span class="token plain">.254.2 </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> https://172.16.254.127:8885 </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> running </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain">    </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> online      </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">128695</span><span class="token plain">   </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">32</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token plain">          </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> 6CU3505M2G </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> rotate       </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> hypervisor </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> c02470b3-9666-46f7-852e-9bda8074a72e </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> node-1   </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> ec:f4:bb:d7:c4:e0 </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">172.16</span><span class="token plain">.254.124 </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">172.16</span><span class="token plain">.254.5 </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> https://172.16.254.124:8885 </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> running </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain">    </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> online      </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">96432</span><span class="token plain">    </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">48</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token plain">          </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> 62CNF52    </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> rotate       </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> hypervisor </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> 5811c2d9-2b45-47e4-8c08-a5d479d03009 </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> node-2   </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> d4:ae:52:7e:90:9c </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">172.16</span><span class="token plain">.254.126 </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">172.16</span><span class="token plain">.254.3 </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> https://172.16.254.126:8885 </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> running </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain">    </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> online      </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">128723</span><span class="token plain">   </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">24</span><span class="token plain">        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token plain">          </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> 8Q1PB3X    </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> rotate       </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> hypervisor </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+--------------------------------------+----------+-------------------+----------------+--------------+-----------------------------+---------+---------+-------------+----------+-----------+------------+------------+--------------+------------+</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="部署-rook-组件">部署 Rook 组件<a class="hash-link" aria-label="Direct link to 部署 Rook 组件" title="Direct link to 部署 Rook 组件" href="https://www.cloudpods.org/en/blog/rook-ceph-with-cloudpods#%E9%83%A8%E7%BD%B2-rook-%E7%BB%84%E4%BB%B6">​</a></h3>
<p>下载 Rook 相关代码：</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># clone rook 源码</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">git</span><span class="token plain"> clone --single-branch </span><span class="token parameter variable" style="color:#36acaa">--branch</span><span class="token plain"> release-1.7 https://github.com/rook/rook.git</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token builtin class-name">cd</span><span class="token plain"> rook</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>部署 rook operator 服务：</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># apply rook 相关 CRD</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token builtin class-name">cd</span><span class="token plain"> cluster/examples/kubernetes/ceph/pre-k8s-1.16/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ kubectl apply </span><span class="token parameter variable" style="color:#36acaa">-f</span><span class="token plain"> crds.yaml</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># apply rook operator 服务</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token builtin class-name">cd</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ kubectl apply </span><span class="token parameter variable" style="color:#36acaa">-f</span><span class="token plain"> common.yaml </span><span class="token parameter variable" style="color:#36acaa">-f</span><span class="token plain"> operator.yaml</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 查看 operator 服务的状态，等待 rook-ceph-operator pod 变为 Running</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ kubectl </span><span class="token parameter variable" style="color:#36acaa">-n</span><span class="token plain"> rook-ceph get pods</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">NAME                                  READY   STATUS    RESTARTS   AGE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rook-ceph-operator-68964f4b87-pc87m   </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">/1     Running   </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">          7m38s</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="创建-ceph-集群">创建 ceph 集群<a class="hash-link" aria-label="Direct link to 创建 ceph 集群" title="Direct link to 创建 ceph 集群" href="https://www.cloudpods.org/en/blog/rook-ceph-with-cloudpods#%E5%88%9B%E5%BB%BA-ceph-%E9%9B%86%E7%BE%A4">​</a></h3>
<p>首先根据自己的环境，修改 rook 提供的 <code>cluster.yaml</code> 里面的内容：</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">cp</span><span class="token plain"> cluster.yaml cluster-env.yaml</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>下面是修改后的 cluster.yaml 和 cluster-env.yaml 的 diff 内容：</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">diff</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-u</span><span class="token plain"> cluster.yaml cluster-env.yaml</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>请根据自己的节点环境配置，参考 diff 修改，需要注意的地方如下：</p>
<ul>
<li>spec.image: 改为 registry.cn-beijing.aliyuncs.com/yunionio/ceph<!-- -->:v14<!-- -->.2.22 ，这里需要用 v14 版本的镜像，对应的 ceph 版本为 nautilus。如果要使用更高版本 v16 版本ceph，请参考下文 [使用 Pacific (v16) Ceph]。</li>
<li>spec.network.provider: 改为 host ，表示 ceph 相关容器使用 hostNetwork ，这样才能给 Kubernetes 集群之外的服务使用</li>
<li>spec.placement: 修改了里面的 Kubernetes 调度策略，表示把 ceph pod 调度到 role=storage-node 的节点上</li>
<li>spec.storage: 表示存储的配置<!-- -->
<ul>
<li>useAllNodes: 我们指定了role=storage-node 的节点运行 ceph，该值必须设置为false</li>
<li>nodes: 分别设置各个节点的存储路径，可以是磁盘或者目录</li>
</ul>
</li>
</ul>
<div class="language-diff codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-diff codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token coord">--- cluster.yaml    2021-10-09 10:49:53.731596210 +0800</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token coord">+++ cluster-env.yaml    2021-10-09 17:50:01.859112585 +0800</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token coord">@@ -21,7 +21,7 @@</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">    # versions running within the cluster. See tags available at https://hub.docker.com/r/ceph/ceph/tags/.</span><br></span><span class="token-line" style="color:#393A34"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">    # If you want to be more precise, you can always use a timestamp tag such quay.io/ceph/ceph:v16.2.6-20210918</span><br></span><span class="token-line" style="color:#393A34"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">    # This tag might not contain a new Ceph version, just security fixes from the underlying operating system, which will reduce vulnerabilities</span><br></span><span class="token-line" style="color:#393A34"><span class="token unchanged line"></span><span class="token deleted-sign deleted prefix deleted" style="color:#d73a49">-</span><span class="token deleted-sign deleted line" style="color:#d73a49">    image: quay.io/ceph/ceph:v16.2.6</span><br></span><span class="token-line" style="color:#393A34"><span class="token deleted-sign deleted line" style="color:#d73a49"></span><span class="token inserted-sign inserted prefix inserted" style="color:#36acaa">+</span><span class="token inserted-sign inserted line" style="color:#36acaa">    image: registry.cn-beijing.aliyuncs.com/yunionio/ceph:v14.2.22</span><br></span><span class="token-line" style="color:#393A34"><span class="token inserted-sign inserted line" style="color:#36acaa"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">    # Whether to allow unsupported versions of Ceph. Currently `nautilus`, `octopus`, and `pacific` are supported.</span><br></span><span class="token-line" style="color:#393A34"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">    # Future versions such as `pacific` would require this to be set to `true`.</span><br></span><span class="token-line" style="color:#393A34"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">    # Do not set to true in production.</span><br></span><span class="token-line" style="color:#393A34"><span class="token unchanged line"></span><span class="token coord">@@ -81,7 +81,7 @@</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">    rulesNamespace: rook-ceph</span><br></span><span class="token-line" style="color:#393A34"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">  network:</span><br></span><span class="token-line" style="color:#393A34"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">    # enable host networking</span><br></span><span class="token-line" style="color:#393A34"><span class="token unchanged line"></span><span class="token deleted-sign deleted prefix deleted" style="color:#d73a49">-</span><span class="token deleted-sign deleted line" style="color:#d73a49">    #provider: host</span><br></span><span class="token-line" style="color:#393A34"><span class="token deleted-sign deleted line" style="color:#d73a49"></span><span class="token inserted-sign inserted prefix inserted" style="color:#36acaa">+</span><span class="token inserted-sign inserted line" style="color:#36acaa">    provider: host</span><br></span><span class="token-line" style="color:#393A34"><span class="token inserted-sign inserted line" style="color:#36acaa"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">    # enable the Multus network provider</span><br></span><span class="token-line" style="color:#393A34"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">    #provider: multus</span><br></span><span class="token-line" style="color:#393A34"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">    #selectors:</span><br></span><span class="token-line" style="color:#393A34"><span class="token unchanged line"></span><span class="token coord">@@ -135,22 +135,22 @@</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">  # To control where various services will be scheduled by kubernetes, use the placement configuration sections below.</span><br></span><span class="token-line" style="color:#393A34"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">  # The example under 'all' would have all services scheduled on kubernetes nodes labeled with 'role=storage-node' and</span><br></span><span class="token-line" style="color:#393A34"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">  # tolerate taints with a key of 'storage-node'.</span><br></span><span class="token-line" style="color:#393A34"><span class="token unchanged line"></span><span class="token deleted-sign deleted prefix deleted" style="color:#d73a49">-</span><span class="token deleted-sign deleted line" style="color:#d73a49">#  placement:</span><br></span><span class="token-line" style="color:#393A34"><span class="token deleted-sign deleted line" style="color:#d73a49"></span><span class="token deleted-sign deleted prefix deleted" style="color:#d73a49">-</span><span class="token deleted-sign deleted line" style="color:#d73a49">#    all:</span><br></span><span class="token-line" style="color:#393A34"><span class="token deleted-sign deleted line" style="color:#d73a49"></span><span class="token deleted-sign deleted prefix deleted" style="color:#d73a49">-</span><span class="token deleted-sign deleted line" style="color:#d73a49">#      nodeAffinity:</span><br></span><span class="token-line" style="color:#393A34"><span class="token deleted-sign deleted line" style="color:#d73a49"></span><span class="token deleted-sign deleted prefix deleted" style="color:#d73a49">-</span><span class="token deleted-sign deleted line" style="color:#d73a49">#        requiredDuringSchedulingIgnoredDuringExecution:</span><br></span><span class="token-line" style="color:#393A34"><span class="token deleted-sign deleted line" style="color:#d73a49"></span><span class="token deleted-sign deleted prefix deleted" style="color:#d73a49">-</span><span class="token deleted-sign deleted line" style="color:#d73a49">#          nodeSelectorTerms:</span><br></span><span class="token-line" style="color:#393A34"><span class="token deleted-sign deleted line" style="color:#d73a49"></span><span class="token deleted-sign deleted prefix deleted" style="color:#d73a49">-</span><span class="token deleted-sign deleted line" style="color:#d73a49">#          - matchExpressions:</span><br></span><span class="token-line" style="color:#393A34"><span class="token deleted-sign deleted line" style="color:#d73a49"></span><span class="token deleted-sign deleted prefix deleted" style="color:#d73a49">-</span><span class="token deleted-sign deleted line" style="color:#d73a49">#            - key: role</span><br></span><span class="token-line" style="color:#393A34"><span class="token deleted-sign deleted line" style="color:#d73a49"></span><span class="token deleted-sign deleted prefix deleted" style="color:#d73a49">-</span><span class="token deleted-sign deleted line" style="color:#d73a49">#              operator: In</span><br></span><span class="token-line" style="color:#393A34"><span class="token deleted-sign deleted line" style="color:#d73a49"></span><span class="token deleted-sign deleted prefix deleted" style="color:#d73a49">-</span><span class="token deleted-sign deleted line" style="color:#d73a49">#              values:</span><br></span><span class="token-line" style="color:#393A34"><span class="token deleted-sign deleted line" style="color:#d73a49"></span><span class="token deleted-sign deleted prefix deleted" style="color:#d73a49">-</span><span class="token deleted-sign deleted line" style="color:#d73a49">#              - storage-node</span><br></span><span class="token-line" style="color:#393A34"><span class="token deleted-sign deleted line" style="color:#d73a49"></span><span class="token deleted-sign deleted prefix deleted" style="color:#d73a49">-</span><span class="token deleted-sign deleted line" style="color:#d73a49">#      podAffinity:</span><br></span><span class="token-line" style="color:#393A34"><span class="token deleted-sign deleted line" style="color:#d73a49"></span><span class="token deleted-sign deleted prefix deleted" style="color:#d73a49">-</span><span class="token deleted-sign deleted line" style="color:#d73a49">#      podAntiAffinity:</span><br></span><span class="token-line" style="color:#393A34"><span class="token deleted-sign deleted line" style="color:#d73a49"></span><span class="token deleted-sign deleted prefix deleted" style="color:#d73a49">-</span><span class="token deleted-sign deleted line" style="color:#d73a49">#      topologySpreadConstraints:</span><br></span><span class="token-line" style="color:#393A34"><span class="token deleted-sign deleted line" style="color:#d73a49"></span><span class="token deleted-sign deleted prefix deleted" style="color:#d73a49">-</span><span class="token deleted-sign deleted line" style="color:#d73a49">#      tolerations:</span><br></span><span class="token-line" style="color:#393A34"><span class="token deleted-sign deleted line" style="color:#d73a49"></span><span class="token deleted-sign deleted prefix deleted" style="color:#d73a49">-</span><span class="token deleted-sign deleted line" style="color:#d73a49">#      - key: storage-node</span><br></span><span class="token-line" style="color:#393A34"><span class="token deleted-sign deleted line" style="color:#d73a49"></span><span class="token deleted-sign deleted prefix deleted" style="color:#d73a49">-</span><span class="token deleted-sign deleted line" style="color:#d73a49">#        operator: Exists</span><br></span><span class="token-line" style="color:#393A34"><span class="token deleted-sign deleted line" style="color:#d73a49"></span><span class="token inserted-sign inserted prefix inserted" style="color:#36acaa">+</span><span class="token inserted-sign inserted line" style="color:#36acaa">  placement:</span><br></span><span class="token-line" style="color:#393A34"><span class="token inserted-sign inserted line" style="color:#36acaa"></span><span class="token inserted-sign inserted prefix inserted" style="color:#36acaa">+</span><span class="token inserted-sign inserted line" style="color:#36acaa">    all:</span><br></span><span class="token-line" style="color:#393A34"><span class="token inserted-sign inserted line" style="color:#36acaa"></span><span class="token inserted-sign inserted prefix inserted" style="color:#36acaa">+</span><span class="token inserted-sign inserted line" style="color:#36acaa">      nodeAffinity:</span><br></span><span class="token-line" style="color:#393A34"><span class="token inserted-sign inserted line" style="color:#36acaa"></span><span class="token inserted-sign inserted prefix inserted" style="color:#36acaa">+</span><span class="token inserted-sign inserted line" style="color:#36acaa">        requiredDuringSchedulingIgnoredDuringExecution:</span><br></span><span class="token-line" style="color:#393A34"><span class="token inserted-sign inserted line" style="color:#36acaa"></span><span class="token inserted-sign inserted prefix inserted" style="color:#36acaa">+</span><span class="token inserted-sign inserted line" style="color:#36acaa">          nodeSelectorTerms:</span><br></span><span class="token-line" style="color:#393A34"><span class="token inserted-sign inserted line" style="color:#36acaa"></span><span class="token inserted-sign inserted prefix inserted" style="color:#36acaa">+</span><span class="token inserted-sign inserted line" style="color:#36acaa">          - matchExpressions:</span><br></span><span class="token-line" style="color:#393A34"><span class="token inserted-sign inserted line" style="color:#36acaa"></span><span class="token inserted-sign inserted prefix inserted" style="color:#36acaa">+</span><span class="token inserted-sign inserted line" style="color:#36acaa">            - key: role</span><br></span><span class="token-line" style="color:#393A34"><span class="token inserted-sign inserted line" style="color:#36acaa"></span><span class="token inserted-sign inserted prefix inserted" style="color:#36acaa">+</span><span class="token inserted-sign inserted line" style="color:#36acaa">              operator: In</span><br></span><span class="token-line" style="color:#393A34"><span class="token inserted-sign inserted line" style="color:#36acaa"></span><span class="token inserted-sign inserted prefix inserted" style="color:#36acaa">+</span><span class="token inserted-sign inserted line" style="color:#36acaa">              values:</span><br></span><span class="token-line" style="color:#393A34"><span class="token inserted-sign inserted line" style="color:#36acaa"></span><span class="token inserted-sign inserted prefix inserted" style="color:#36acaa">+</span><span class="token inserted-sign inserted line" style="color:#36acaa">              - storage-node</span><br></span><span class="token-line" style="color:#393A34"><span class="token inserted-sign inserted line" style="color:#36acaa"></span><span class="token inserted-sign inserted prefix inserted" style="color:#36acaa">+</span><span class="token inserted-sign inserted line" style="color:#36acaa">      podAffinity:</span><br></span><span class="token-line" style="color:#393A34"><span class="token inserted-sign inserted line" style="color:#36acaa"></span><span class="token inserted-sign inserted prefix inserted" style="color:#36acaa">+</span><span class="token inserted-sign inserted line" style="color:#36acaa">      podAntiAffinity:</span><br></span><span class="token-line" style="color:#393A34"><span class="token inserted-sign inserted line" style="color:#36acaa"></span><span class="token inserted-sign inserted prefix inserted" style="color:#36acaa">+</span><span class="token inserted-sign inserted line" style="color:#36acaa">      topologySpreadConstraints:</span><br></span><span class="token-line" style="color:#393A34"><span class="token inserted-sign inserted line" style="color:#36acaa"></span><span class="token inserted-sign inserted prefix inserted" style="color:#36acaa">+</span><span class="token inserted-sign inserted line" style="color:#36acaa">      tolerations:</span><br></span><span class="token-line" style="color:#393A34"><span class="token inserted-sign inserted line" style="color:#36acaa"></span><span class="token inserted-sign inserted prefix inserted" style="color:#36acaa">+</span><span class="token inserted-sign inserted line" style="color:#36acaa">      - key: storage-node</span><br></span><span class="token-line" style="color:#393A34"><span class="token inserted-sign inserted line" style="color:#36acaa"></span><span class="token inserted-sign inserted prefix inserted" style="color:#36acaa">+</span><span class="token inserted-sign inserted line" style="color:#36acaa">        operator: Exists</span><br></span><span class="token-line" style="color:#393A34"><span class="token inserted-sign inserted line" style="color:#36acaa"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"># The above placement information can also be specified for mon, osd, and mgr components</span><br></span><span class="token-line" style="color:#393A34"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">#    mon:</span><br></span><span class="token-line" style="color:#393A34"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"># Monitor deployments may contain an anti-affinity rule for avoiding monitor</span><br></span><span class="token-line" style="color:#393A34"><span class="token unchanged line"></span><span class="token coord">@@ -207,8 +207,8 @@</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">#    osd: rook-ceph-osd-priority-class</span><br></span><span class="token-line" style="color:#393A34"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">#    mgr: rook-ceph-mgr-priority-class</span><br></span><span class="token-line" style="color:#393A34"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">  storage: # cluster level storage configuration and selection</span><br></span><span class="token-line" style="color:#393A34"><span class="token unchanged line"></span><span class="token deleted-sign deleted prefix deleted" style="color:#d73a49">-</span><span class="token deleted-sign deleted line" style="color:#d73a49">    useAllNodes: true</span><br></span><span class="token-line" style="color:#393A34"><span class="token deleted-sign deleted line" style="color:#d73a49"></span><span class="token deleted-sign deleted prefix deleted" style="color:#d73a49">-</span><span class="token deleted-sign deleted line" style="color:#d73a49">    useAllDevices: true</span><br></span><span class="token-line" style="color:#393A34"><span class="token deleted-sign deleted line" style="color:#d73a49"></span><span class="token inserted-sign inserted prefix inserted" style="color:#36acaa">+</span><span class="token inserted-sign inserted line" style="color:#36acaa">    useAllNodes: false</span><br></span><span class="token-line" style="color:#393A34"><span class="token inserted-sign inserted line" style="color:#36acaa"></span><span class="token inserted-sign inserted prefix inserted" style="color:#36acaa">+</span><span class="token inserted-sign inserted line" style="color:#36acaa">    useAllDevices: false</span><br></span><span class="token-line" style="color:#393A34"><span class="token inserted-sign inserted line" style="color:#36acaa"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">    #deviceFilter:</span><br></span><span class="token-line" style="color:#393A34"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">    config:</span><br></span><span class="token-line" style="color:#393A34"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">      # crushRoot: "custom-root" # specify a non-default root label for the CRUSH map</span><br></span><span class="token-line" style="color:#393A34"><span class="token unchanged line"></span><span class="token coord">@@ -219,17 +219,22 @@</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">      # encryptedDevice: "true" # the default value for this option is "false"</span><br></span><span class="token-line" style="color:#393A34"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"># Individual nodes and their config can be specified as well, but 'useAllNodes' above must be set to false. Then, only the named</span><br></span><span class="token-line" style="color:#393A34"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"># nodes below will be used as storage resources.  Each node's 'name' field should match their 'kubernetes.io/hostname' label.</span><br></span><span class="token-line" style="color:#393A34"><span class="token unchanged line"></span><span class="token deleted-sign deleted prefix deleted" style="color:#d73a49">-</span><span class="token deleted-sign deleted line" style="color:#d73a49">    # nodes:</span><br></span><span class="token-line" style="color:#393A34"><span class="token deleted-sign deleted line" style="color:#d73a49"></span><span class="token deleted-sign deleted prefix deleted" style="color:#d73a49">-</span><span class="token deleted-sign deleted line" style="color:#d73a49">    #   - name: "172.17.4.201"</span><br></span><span class="token-line" style="color:#393A34"><span class="token deleted-sign deleted line" style="color:#d73a49"></span><span class="token deleted-sign deleted prefix deleted" style="color:#d73a49">-</span><span class="token deleted-sign deleted line" style="color:#d73a49">    #     devices: # specific devices to use for storage can be specified for each node</span><br></span><span class="token-line" style="color:#393A34"><span class="token deleted-sign deleted line" style="color:#d73a49"></span><span class="token deleted-sign deleted prefix deleted" style="color:#d73a49">-</span><span class="token deleted-sign deleted line" style="color:#d73a49">    #       - name: "sdb"</span><br></span><span class="token-line" style="color:#393A34"><span class="token deleted-sign deleted line" style="color:#d73a49"></span><span class="token deleted-sign deleted prefix deleted" style="color:#d73a49">-</span><span class="token deleted-sign deleted line" style="color:#d73a49">    #       - name: "nvme01" # multiple osds can be created on high performance devices</span><br></span><span class="token-line" style="color:#393A34"><span class="token deleted-sign deleted line" style="color:#d73a49"></span><span class="token deleted-sign deleted prefix deleted" style="color:#d73a49">-</span><span class="token deleted-sign deleted line" style="color:#d73a49">    #         config:</span><br></span><span class="token-line" style="color:#393A34"><span class="token deleted-sign deleted line" style="color:#d73a49"></span><span class="token deleted-sign deleted prefix deleted" style="color:#d73a49">-</span><span class="token deleted-sign deleted line" style="color:#d73a49">    #           osdsPerDevice: "5"</span><br></span><span class="token-line" style="color:#393A34"><span class="token deleted-sign deleted line" style="color:#d73a49"></span><span class="token deleted-sign deleted prefix deleted" style="color:#d73a49">-</span><span class="token deleted-sign deleted line" style="color:#d73a49">    #       - name: "/dev/disk/by-id/ata-ST4000DM004-XXXX" # devices can be specified using full udev paths</span><br></span><span class="token-line" style="color:#393A34"><span class="token deleted-sign deleted line" style="color:#d73a49"></span><span class="token deleted-sign deleted prefix deleted" style="color:#d73a49">-</span><span class="token deleted-sign deleted line" style="color:#d73a49">    #     config: # configuration can be specified at the node level which overrides the cluster level config</span><br></span><span class="token-line" style="color:#393A34"><span class="token deleted-sign deleted line" style="color:#d73a49"></span><span class="token deleted-sign deleted prefix deleted" style="color:#d73a49">-</span><span class="token deleted-sign deleted line" style="color:#d73a49">    #   - name: "172.17.4.301"</span><br></span><span class="token-line" style="color:#393A34"><span class="token deleted-sign deleted line" style="color:#d73a49"></span><span class="token deleted-sign deleted prefix deleted" style="color:#d73a49">-</span><span class="token deleted-sign deleted line" style="color:#d73a49">    #     deviceFilter: "^sd."</span><br></span><span class="token-line" style="color:#393A34"><span class="token deleted-sign deleted line" style="color:#d73a49"></span><span class="token inserted-sign inserted prefix inserted" style="color:#36acaa">+</span><span class="token inserted-sign inserted line" style="color:#36acaa">    nodes:</span><br></span><span class="token-line" style="color:#393A34"><span class="token inserted-sign inserted line" style="color:#36acaa"></span><span class="token inserted-sign inserted prefix inserted" style="color:#36acaa">+</span><span class="token inserted-sign inserted line" style="color:#36acaa">      - name: "node-0"</span><br></span><span class="token-line" style="color:#393A34"><span class="token inserted-sign inserted line" style="color:#36acaa"></span><span class="token inserted-sign inserted prefix inserted" style="color:#36acaa">+</span><span class="token inserted-sign inserted line" style="color:#36acaa">        devices: # specific devices to use for storage can be specified for each node</span><br></span><span class="token-line" style="color:#393A34"><span class="token inserted-sign inserted line" style="color:#36acaa"></span><span class="token inserted-sign inserted prefix inserted" style="color:#36acaa">+</span><span class="token inserted-sign inserted line" style="color:#36acaa">          - name: "sdb"</span><br></span><span class="token-line" style="color:#393A34"><span class="token inserted-sign inserted line" style="color:#36acaa"></span><span class="token inserted-sign inserted prefix inserted" style="color:#36acaa">+</span><span class="token inserted-sign inserted line" style="color:#36acaa">          - name: "sdc"</span><br></span><span class="token-line" style="color:#393A34"><span class="token inserted-sign inserted line" style="color:#36acaa"></span><span class="token inserted-sign inserted prefix inserted" style="color:#36acaa">+</span><span class="token inserted-sign inserted line" style="color:#36acaa">          - name: "sdd"</span><br></span><span class="token-line" style="color:#393A34"><span class="token inserted-sign inserted line" style="color:#36acaa"></span><span class="token inserted-sign inserted prefix inserted" style="color:#36acaa">+</span><span class="token inserted-sign inserted line" style="color:#36acaa">      - name: "node-1"</span><br></span><span class="token-line" style="color:#393A34"><span class="token inserted-sign inserted line" style="color:#36acaa"></span><span class="token inserted-sign inserted prefix inserted" style="color:#36acaa">+</span><span class="token inserted-sign inserted line" style="color:#36acaa">        devices:</span><br></span><span class="token-line" style="color:#393A34"><span class="token inserted-sign inserted line" style="color:#36acaa"></span><span class="token inserted-sign inserted prefix inserted" style="color:#36acaa">+</span><span class="token inserted-sign inserted line" style="color:#36acaa">          - name: "sdb"</span><br></span><span class="token-line" style="color:#393A34"><span class="token inserted-sign inserted line" style="color:#36acaa"></span><span class="token inserted-sign inserted prefix inserted" style="color:#36acaa">+</span><span class="token inserted-sign inserted line" style="color:#36acaa">          - name: "sdc"</span><br></span><span class="token-line" style="color:#393A34"><span class="token inserted-sign inserted line" style="color:#36acaa"></span><span class="token inserted-sign inserted prefix inserted" style="color:#36acaa">+</span><span class="token inserted-sign inserted line" style="color:#36acaa">          - name: "sdd"</span><br></span><span class="token-line" style="color:#393A34"><span class="token inserted-sign inserted line" style="color:#36acaa"></span><span class="token inserted-sign inserted prefix inserted" style="color:#36acaa">+</span><span class="token inserted-sign inserted line" style="color:#36acaa">      - name: "node-2"</span><br></span><span class="token-line" style="color:#393A34"><span class="token inserted-sign inserted line" style="color:#36acaa"></span><span class="token inserted-sign inserted prefix inserted" style="color:#36acaa">+</span><span class="token inserted-sign inserted line" style="color:#36acaa">        devices:</span><br></span><span class="token-line" style="color:#393A34"><span class="token inserted-sign inserted line" style="color:#36acaa"></span><span class="token inserted-sign inserted prefix inserted" style="color:#36acaa">+</span><span class="token inserted-sign inserted line" style="color:#36acaa">          - name: "sdb"</span><br></span><span class="token-line" style="color:#393A34"><span class="token inserted-sign inserted line" style="color:#36acaa"></span><span class="token inserted-sign inserted prefix inserted" style="color:#36acaa">+</span><span class="token inserted-sign inserted line" style="color:#36acaa">          - name: "sdc"</span><br></span><span class="token-line" style="color:#393A34"><span class="token inserted-sign inserted line" style="color:#36acaa"></span><span class="token inserted-sign inserted prefix inserted" style="color:#36acaa">+</span><span class="token inserted-sign inserted line" style="color:#36acaa">          - name: "sdd"</span><br></span><span class="token-line" style="color:#393A34"><span class="token inserted-sign inserted line" style="color:#36acaa"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">    # when onlyApplyOSDPlacement is false, will merge both placement.All() and placement.osd</span><br></span><span class="token-line" style="color:#393A34"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">    onlyApplyOSDPlacement: false</span><br></span><span class="token-line" style="color:#393A34"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">  # The section for configuring management of daemon disruptions during upgrade or fencing.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>编辑好 <code>cluster-env.yaml</code> 后，使用下面的命令创建 ceph 集群：</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ kubectl apply </span><span class="token parameter variable" style="color:#36acaa">-f</span><span class="token plain"> cluster-env.yaml</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cephcluster.ceph.rook.io/rook-ceph created</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 查看 rook-ceph namespace 里面的 pod 健康状况</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ kubectl </span><span class="token parameter variable" style="color:#36acaa">-n</span><span class="token plain"> rook-ceph get pods</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">NAME                                                 READY   STATUS      RESTARTS   AGE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rook-ceph-crashcollector-dl380p-55f6cc56c9-b8ghc     </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">/1     Running     </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">          3m3s</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rook-ceph-crashcollector-r710-7d8659858-mrqgq        </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">/1     Running     </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">          2m20s</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rook-ceph-crashcollector-r720xd-1-5b686487c5-hvzdb   </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">/1     Running     </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">          3m10s</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rook-ceph-csi-detect-version-ffdsf                   </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">/1     Completed   </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">          26m</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rook-ceph-mgr-a-759465b6c7-cslkp                     </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">/1     Running     </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">          3m13s</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rook-ceph-mon-a-657c4c6769-ljtr9                     </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">/1     Running     </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">          18m</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rook-ceph-mon-b-7db98b99d4-99pft                     </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">/1     Running     </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">          18m</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rook-ceph-mon-c-7f84fc475d-5v599                     </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">/1     Running     </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">          10m</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rook-ceph-operator-68964f4b87-pc87m                  </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">/1     Running     </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">          68m</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rook-ceph-osd-0-7cc5cb94cb-dxznm                     </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">/1     Running     </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">          2m32s</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rook-ceph-osd-1-f4d47ddf9-7vgh7                      </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">/1     Running     </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">          2m35s</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rook-ceph-osd-2-5d7667b8d8-d5tnp                     </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">/1     Running     </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">          2m20s</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rook-ceph-osd-3-c9c56cd77-8sbzj                      </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">/1     Running     </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">          2m32s</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rook-ceph-osd-4-88565589c-rnpmg                      </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">/1     Running     </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">          2m35s</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rook-ceph-osd-5-7d7c554b6c-pvsfx                     </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">/1     Running     </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">          2m35s</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rook-ceph-osd-6-6c7596c844-jg9qt                     </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">/1     Running     </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">          2m20s</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rook-ceph-osd-7-55f9987ddf-pjthz                     </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">/1     Running     </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">          2m32s</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rook-ceph-osd-8-6949b69dd6-685wp                     </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">/1     Running     </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">          2m20s</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rook-ceph-osd-prepare-dl380p-c6nc8                   </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">/1     Completed   </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">          3m3s</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rook-ceph-osd-prepare-r710-zkmjz                     </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">/1     Completed   </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">          3m3s</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rook-ceph-osd-prepare-r720xd-1-fswnf                 </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">/1     Completed   </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">          3m2s</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 查看 ceph 集群的健康状况</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ kubectl </span><span class="token parameter variable" style="color:#36acaa">-n</span><span class="token plain"> rook-ceph get cephcluster</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">NAME        DATADIRHOSTPATH   MONCOUNT   AGE   PHASE   MESSAGE                        HEALTH</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rook-ceph   /var/lib/rook     </span><span class="token number" style="color:#36acaa">3</span><span class="token plain">          29m   Ready   Cluster created successfully   HEALTH_OK</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>ceph 集群部署完后，我们需要部署 <code>toolbox.yaml</code> pod 获取集群连接信息：</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ kubectl apply </span><span class="token parameter variable" style="color:#36acaa">-f</span><span class="token plain"> toolbox.yaml</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">deployment.apps/rook-ceph-tools created</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ kubectl </span><span class="token parameter variable" style="color:#36acaa">-n</span><span class="token plain"> rook-ceph get pods </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">grep</span><span class="token plain"> tools</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rook-ceph-tools-885579f55-qpnhh                      </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">/1     Running     </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">          3m44s</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 进入 toolbox pod</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ kubectl </span><span class="token parameter variable" style="color:#36acaa">-n</span><span class="token plain"> rook-ceph </span><span class="token builtin class-name">exec</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-it</span><span class="token plain"> </span><span class="token variable" style="color:#36acaa">$(</span><span class="token variable" style="color:#36acaa">kubectl </span><span class="token variable parameter variable" style="color:#36acaa">-n</span><span class="token variable" style="color:#36acaa"> rook-ceph get pod </span><span class="token variable parameter variable" style="color:#36acaa">-l</span><span class="token variable" style="color:#36acaa"> </span><span class="token variable string" style="color:#e3116c">"app=rook-ceph-tools"</span><span class="token variable" style="color:#36acaa"> </span><span class="token variable parameter variable" style="color:#36acaa">-o</span><span class="token variable" style="color:#36acaa"> </span><span class="token variable assign-left variable" style="color:#36acaa">jsonpath</span><span class="token variable operator" style="color:#393A34">=</span><span class="token variable string" style="color:#e3116c">'{.items[0].metadata.name}'</span><span class="token variable" style="color:#36acaa">)</span><span class="token plain"> -- </span><span class="token function" style="color:#d73a49">bash</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 查看 mon_host 为: 172.16.254.126:6789,172.16.254.124:6789,172.16.254.127:6789</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">root@rook-ceph-tools-885579f55-qpnhh /</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">$ </span><span class="token function" style="color:#d73a49">cat</span><span class="token plain"> /etc/ceph/ceph.conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">global</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mon_host </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">172.16</span><span class="token plain">.254.126:6789,172.16.254.124:6789,172.16.254.127:6789</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">client.admin</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">keyring </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> /etc/ceph/keyring</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 查看 keyring 为: AQBHTWFhFQzrORAALLIngo/OOTDdnUf4vNPRoA==</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">root@rook-ceph-tools-885579f55-qpnhh /</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">$ </span><span class="token function" style="color:#d73a49">cat</span><span class="token plain"> /etc/ceph/keyring</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">client.admin</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">key </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> AQBHTWFhFQzrORAALLIngo/OOTDdnUf4vNPRoA</span><span class="token operator" style="color:#393A34">==</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 查看集群健康状态</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">root@rook-ceph-tools-885579f55-qpnhh /</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">$ ceph status</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  cluster:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    id:     233cf123-7a1a-4a7b-b6db-1cee79ec752b</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    health: HEALTH_OK</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  services:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    mon: </span><span class="token number" style="color:#36acaa">3</span><span class="token plain"> daemons, quorum a,b,c </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">age 38m</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    mgr: a</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">active, since 33m</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    osd: </span><span class="token number" style="color:#36acaa">9</span><span class="token plain"> osds: </span><span class="token number" style="color:#36acaa">9</span><span class="token plain"> up </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">since 33m</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">, </span><span class="token number" style="color:#36acaa">9</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">since 34m</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">30</span><span class="token plain"> remapped pgs</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  data:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    pools:   </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> pools, </span><span class="token number" style="color:#36acaa">256</span><span class="token plain"> pgs</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    objects: </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> objects, </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> B</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    usage:   </span><span class="token number" style="color:#36acaa">57</span><span class="token plain"> MiB used, </span><span class="token number" style="color:#36acaa">20</span><span class="token plain"> TiB / </span><span class="token number" style="color:#36acaa">20</span><span class="token plain"> TiB avail</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    pgs:     </span><span class="token number" style="color:#36acaa">226</span><span class="token plain"> active+clean</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             </span><span class="token number" style="color:#36acaa">30</span><span class="token plain">  active+clean+remapped</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 查看 osd 状态，可以发现对应节点的设备都添加了进来</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">root@rook-ceph-tools-885579f55-qpnhh /</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">$ ceph osd status</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ID  HOST    USED  AVAIL  WR OPS  WR DATA  RD OPS  RD DATA  STATE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">  node-0  6172k  3725G      </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">        </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">       </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">        </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">   exists,up</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">  node-1  7836k   279G      </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">        </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">       </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">        </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">   exists,up</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token plain">  node-2  5596k   931G      </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">        </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">       </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">        </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">   exists,up</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token plain">  node-0  6044k  3725G      </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">        </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">       </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">        </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">   exists,up</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token number" style="color:#36acaa">4</span><span class="token plain">  node-1  5980k   279G      </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">        </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">       </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">        </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">   exists,up</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token number" style="color:#36acaa">5</span><span class="token plain">  node-1  5980k   279G      </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">        </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">       </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">        </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">   exists,up</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token number" style="color:#36acaa">6</span><span class="token plain">  node-2  6236k  3726G      </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">        </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">       </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">        </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">   exists,up</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token number" style="color:#36acaa">7</span><span class="token plain">  node-0  7772k  3725G      </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">        </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">       </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">        </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">   exists,up</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token number" style="color:#36acaa">8</span><span class="token plain">  node-2  7836k  3726G      </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">        </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">       </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">        </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">   exists,up</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 创建一个 cloudpods-test 的 pool 用于后面的虚拟机测试</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">root@rook-ceph-tools-885579f55-qpnhh /</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">$ ceph osd pool create cloudpods-test </span><span class="token number" style="color:#36acaa">64</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">64</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pool </span><span class="token string" style="color:#e3116c">'cloudpods-test'</span><span class="token plain"> created</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 初始化这个pool 为 RBD</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">root@rook-ceph-tools-885579f55-qpnhh /</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">$ rbd pool init cloudpods-test</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">root@rook-ceph-tools-885579f55-qpnhh /</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">$ ceph osd lspools</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> cloudpods-test</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="cloudpods-虚拟机使用-rook-部署的-ceph">Cloudpods 虚拟机使用 Rook 部署的 Ceph<a class="hash-link" aria-label="Direct link to Cloudpods 虚拟机使用 Rook 部署的 Ceph" title="Direct link to Cloudpods 虚拟机使用 Rook 部署的 Ceph" href="https://www.cloudpods.org/en/blog/rook-ceph-with-cloudpods#cloudpods-%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%BD%BF%E7%94%A8-rook-%E9%83%A8%E7%BD%B2%E7%9A%84-ceph">​</a></h2>
<p>通过之前的步骤，已经使用 Rook 在 Kubernetes 集群里面部署了 Ceph 集群，接下来将 Ceph 集群的连接信息导入到 Cloudpods 私有云平台，就可以给虚拟机使用了。</p>
<p>从之前的步骤得到 ceph 的连接信息如下：</p>
<ul>
<li>mon_host: 172.16.254.126:6789,172.16.254.124:6789,172.16.254.127:6789</li>
<li>keyring: AQBHTWFhFQzrORAALLIngo/OOTDdnUf4vNPRoA==</li>
<li>rbd pool: cloudpods-test</li>
</ul>
<p>然后登录 cloudpods 前端创建 ceph rbd 存储并且关联宿主机，操作如下：</p>
<ol>
<li>创建名为 rook-ceph 的块存储，填入上面的信息：</li>
</ol>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/create-ceph-storage-ddc0f4174ac0860d59194f45f89a7397.png" width="1990" height="1223" class="img_ev3q"></p>
<ol start="2">
<li>默认创建好的 rook-ceph 块存储为离线状态，需要关联平台的私有云宿主机，宿主机会探测 ceph 集群的连通性，并且获取对应的 pool 容量信息：</li>
</ol>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/attach-storage-host-e6fb10e6755e1f9ef19046834338de65.png" width="2264" height="1045" class="img_ev3q"></p>
<ol start="3">
<li>rook-ceph 块存储关联好宿主机后，状态就会变为“在线”，并且获取到了 20T 的容量：</li>
</ol>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/rook-ceph-status-69a1e71545f0eef5414feb3ba6861e29.png" width="2280" height="834" class="img_ev3q"></p>
<ol start="4">
<li>创建虚拟机使用 <code>rook-ceph</code> 存储，这里主要是在虚拟机创建页面添加磁盘，选择存储类型为 <strong>Ceph RBD</strong>：</li>
</ol>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/vm-with-ceph-ec90c2558b448214e4de3b07c941cb74.png" width="2251" height="799" class="img_ev3q"></p>
<ol start="5">
<li>等待虚拟机创建完成，通过 vnc 或者 ssh 登录虚拟机：</li>
</ol>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/vm-running-2f5b9b9830c49e367f73421674747c96.png" width="1580" height="538" class="img_ev3q"></p>
<p>可以发现虚拟机里面挂载了 /dev/sda(系统盘) 和 /dev/sdb(数据盘)，底层都为 ceph 的 RBD 块设备，因为 ceph 底层块设备用的机械盘，用 dd 简单测试速度在 99 MB/s ，符合预期。</p>
<ol start="6">
<li>然后使用平台的 climc 命令查看虚拟机所在的宿主机，发现虚拟机 ceph-test-vm 运行在 node-1 计算节点上，同时改节点也是 Ceph 集群的存储节点，实现了超融合的架构：</li>
</ol>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ climc server-list </span><span class="token parameter variable" style="color:#36acaa">--details</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">--search</span><span class="token plain"> ceph-test-vm</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+--------------------------------------+--------------+--------+---------------+--------+---------+------------+-----------+------------+---------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">                  ID                  </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">     Name     </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">  Host  </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">     IPs       </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">  Disk  </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> Status  </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> vcpu_count </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> vmem_size </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> Hypervisor </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> os_type </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+--------------------------------------+--------------+--------+---------------+--------+---------+------------+-----------+------------+---------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> ffd8ec7c-1e2d-4427-89e0-81b6ce184185 </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> ceph-test-vm </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> node-1 </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">172.16</span><span class="token plain">.254.252</span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">235520</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> running </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token plain">          </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2048</span><span class="token plain">      </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> kvm        </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> Linux   </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+--------------------------------------+--------------+--------+---------------+--------+---------+------------+-----------+------------+---------+</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="其它操作">其它操作<a class="hash-link" aria-label="Direct link to 其它操作" title="Direct link to 其它操作" href="https://www.cloudpods.org/en/blog/rook-ceph-with-cloudpods#%E5%85%B6%E5%AE%83%E6%93%8D%E4%BD%9C">​</a></h2>
<ul>
<li>删除 Rook 部署的 Ceph 集群请参考：<a href="https://rook.io/docs/rook/v1.7/ceph-teardown.html" target="_blank" rel="noopener noreferrer">Cleaning up a Cluster</a></li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="使用-pacific-v16-ceph">使用 Pacific (v16) Ceph<a class="hash-link" aria-label="Direct link to 使用 Pacific (v16) Ceph" title="Direct link to 使用 Pacific (v16) Ceph" href="https://www.cloudpods.org/en/blog/rook-ceph-with-cloudpods#%E4%BD%BF%E7%94%A8-pacific-v16-ceph">​</a></h2>
<p>上文介绍的流程适合部署 v14 版本的ceph，为了部署 v16 版本的ceph，首先需要把待部署的 ceph 镜像改为：</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">registry.cn-beijing.aliyuncs.com/yunionio/ceph:v16.2.14</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>另外，每个计算节点默认部署的是CentOS 7自带的ceph-common，版本为 v10.2.5。该版本的 ceph-common 已经无法访问 v16 ceph。为此，还需要升级每个计算节点的 ceph-common 版本。具体方法如下：</p>
<p>配置 ceph rpm repo 文件 /etc/yum.repos.d/ceph.repo, 内容为：</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[ceph]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">name=Ceph packages for $basearch</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">baseurl=https://download.ceph.com/rpm-15.2.17/el7/$basearch</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">enabled=1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">priority=2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">gpgcheck=1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">gpgkey=https://download.ceph.com/keys/release.asc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[ceph-noarch]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">name=Ceph noarch packages</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">baseurl=https://download.ceph.com/rpm-15.2.17/el7/noarch</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">enabled=1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">priority=2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">gpgcheck=1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">gpgkey=https://download.ceph.com/keys/release.asc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[ceph-source]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">name=Ceph source packages</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">baseurl=https://download.ceph.com/rpm-15.2.17/el7/SRPMS</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">enabled=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">priority=2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">gpgcheck=1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">gpgkey=https://download.ceph.com/keys/release.asc</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>保存 ceph.repo 后，执行如下命令安装 v15.2.17 的 ceph-common:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">yum </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-y</span><span class="token plain"> ceph-common</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>注：因为ceph官方rpm未提供v16的CentOS 7 rpms，因此安装v15的rpms，该版本兼容v16的ceph-common。</p>]]></content>
        <author>
            <name>Zexi Li</name>
            <uri>https://github.com/zexi</uri>
        </author>
        <author>
            <name>Jian Qiu</name>
            <uri>https://github.com/swordqiu</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[用Calico网络策略设置主机node防火墙规则]]></title>
        <id>https://www.cloudpods.org/en/blog/calico-customized-node-firewall</id>
        <link href="https://www.cloudpods.org/en/blog/calico-customized-node-firewall"/>
        <updated>2021-09-25T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Cloudpods的服务运行在一个Kubernetes集群之上，该Kubernets集群的网络方案采用了Calico。因此运行Cloudpods服务的节点的iptables规则被Calico接管。这就导致我们在Cloudpods服务节点上配置的防火墙规则会被Calico配置的iptables规则覆盖，导致防火墙规则不生效。本文介绍如何使用Calico的HostEndpoint和GlobalNetworkPolicy来设置主机节点的防火墙规则。]]></summary>
        <content type="html"><![CDATA[<p>Cloudpods的服务运行在一个Kubernetes集群之上，该Kubernets集群的网络方案采用了<a href="https://docs.projectcalico.org/" target="_blank" rel="noopener noreferrer">Calico</a>。因此运行Cloudpods服务的节点的iptables规则被Calico接管。这就导致我们在Cloudpods服务节点上配置的防火墙规则会被Calico配置的iptables规则覆盖，导致防火墙规则不生效。本文介绍如何使用Calico的HostEndpoint和GlobalNetworkPolicy来设置主机节点的防火墙规则。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="1-准备calicoctl工具">1. 准备calicoctl工具<a class="hash-link" aria-label="Direct link to 1. 准备calicoctl工具" title="Direct link to 1. 准备calicoctl工具" href="https://www.cloudpods.org/en/blog/calico-customized-node-firewall#1-%E5%87%86%E5%A4%87calicoctl%E5%B7%A5%E5%85%B7">​</a></h2>
<p>下载二进制</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">curl</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-O</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-L</span><span class="token plain"> https://github.com/projectcalico/calicoctl/releases/download/v3.12.1/calicoctl</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">chmod</span><span class="token plain"> +x calicoctl</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>设置环境变量</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">DATASTORE_TYPE</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">kubernetes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">KUBECONFIG</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">/etc/kubernetes/admin.conf</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="2-配置hostendpoint规则">2. 配置HostEndpoint规则<a class="hash-link" aria-label="Direct link to 2. 配置HostEndpoint规则" title="Direct link to 2. 配置HostEndpoint规则" href="https://www.cloudpods.org/en/blog/calico-customized-node-firewall#2-%E9%85%8D%E7%BD%AEhostendpoint%E8%A7%84%E5%88%99">​</a></h2>
<p>对每一台主机的每个需要控制防火墙规则接口，定义对应的HostEndpoint规则</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> projectcalico.org/v3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> HostEndpoint</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> &lt;node_name</span><span class="token punctuation" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">&lt;interface_name</span><span class="token punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">labels</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">role</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> master</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">env</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> production</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">interfaceName</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> &lt;interface_name</span><span class="token punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">node</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> &lt;node_name</span><span class="token punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">expectedIPs</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"&lt;interface_ip&gt;"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> projectcalico.org/v3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> HostEndpoint</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> &lt;node_name</span><span class="token punctuation" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">&lt;interface_name</span><span class="token punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">labels</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">role</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> master</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">env</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> production</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">interfaceName</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> &lt;interface_name</span><span class="token punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">node</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> &lt;node_name</span><span class="token punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">expectedIPs</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"&lt;interface_ip&gt;"</span><span class="token punctuation" style="color:#393A34">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>应用该规则：</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">./calicoctl apply </span><span class="token parameter variable" style="color:#36acaa">-f</span><span class="token plain"> hep.yaml</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="3-定义网络规则">3. 定义网络规则<a class="hash-link" aria-label="Direct link to 3. 定义网络规则" title="Direct link to 3. 定义网络规则" href="https://www.cloudpods.org/en/blog/calico-customized-node-firewall#3-%E5%AE%9A%E4%B9%89%E7%BD%91%E7%BB%9C%E8%A7%84%E5%88%99">​</a></h2>
<p>定义好HostEndpoint之后，采用Calico的GlobalNetworkPolicy定义防火墙规则。</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> projectcalico.org/v3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> GlobalNetworkPolicy</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> &lt;whitelist_gnp_name</span><span class="token punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">order</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">preDNAT</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">applyOnForward</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">ingress</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">action</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Allow</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">protocol</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> TCP</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">source</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">nets</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">&lt;src_net_block1</span><span class="token punctuation" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> &lt;src_net_block2</span><span class="token punctuation" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">destination</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">ports</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">&lt;dst_port1</span><span class="token punctuation" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> &lt;dst_port2</span><span class="token punctuation" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">selector</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"role==\"master\""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> projectcalico.org/v3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> GlobalNetworkPolicy</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> drop</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">other</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">ingress</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">order</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">20</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">preDNAT</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">applyOnForward</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">ingress</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">action</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Deny</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">selector</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"role==\"master\""</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>应用规则</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">./calicoctl apply </span><span class="token parameter variable" style="color:#36acaa">-f</span><span class="token plain"> gnp.yaml</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="4-failsafe机制">4. failSafe机制<a class="hash-link" aria-label="Direct link to 4. failSafe机制" title="Direct link to 4. failSafe机制" href="https://www.cloudpods.org/en/blog/calico-customized-node-firewall#4-failsafe%E6%9C%BA%E5%88%B6">​</a></h2>
<p>为防止用户错误配置导致node无法网络访问的风险，calico设计了failSafe机制，即在用户编写规则有误的情况下，部分端口也不会被封禁，导致节点功能失效。这里是FailSafe端口的信息：<a href="https://docs.projectcalico.org/reference/host-endpoints/failsafe" target="_blank" rel="noopener noreferrer">https://docs.projectcalico.org/reference/host-endpoints/failsafe</a></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="5-配置举例">5. 配置举例<a class="hash-link" aria-label="Direct link to 5. 配置举例" title="Direct link to 5. 配置举例" href="https://www.cloudpods.org/en/blog/calico-customized-node-firewall#5-%E9%85%8D%E7%BD%AE%E4%B8%BE%E4%BE%8B">​</a></h2>
<p>举例：master节点的外网端口只允许80和443端口，其他都禁止：</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="hostendpoint定义">HostEndpoint定义<a class="hash-link" aria-label="Direct link to HostEndpoint定义" title="Direct link to HostEndpoint定义" href="https://www.cloudpods.org/en/blog/calico-customized-node-firewall#hostendpoint%E5%AE%9A%E4%B9%89">​</a></h3>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> projectcalico.org/v3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> HostEndpoint</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> master1</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">em4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">labels</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">role</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> master</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> external</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">interfaceName</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> em4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">node</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> master1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">expectedIPs</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"120.133.60.219"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> projectcalico.org/v3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> HostEndpoint</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> master2</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">em4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">labels</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">role</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> master</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> external</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">interfaceName</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> em4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">node</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> master2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">expectedIPs</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"120.133.60.220"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> projectcalico.org/v3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> HostEndpoint</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> master3</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">em4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">labels</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">role</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> master</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> external</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">interfaceName</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> em4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">node</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> master3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">expectedIPs</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"120.133.60.221"</span><span class="token punctuation" style="color:#393A34">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="globalnetworkpolicy定义">GlobalNetworkPolicy定义<a class="hash-link" aria-label="Direct link to GlobalNetworkPolicy定义" title="Direct link to GlobalNetworkPolicy定义" href="https://www.cloudpods.org/en/blog/calico-customized-node-firewall#globalnetworkpolicy%E5%AE%9A%E4%B9%89">​</a></h3>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> projectcalico.org/v3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> GlobalNetworkPolicy</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> allow</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">http</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">https</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">traffic</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">only</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">order</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">preDNAT</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">applyOnForward</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">ingress</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">action</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Allow</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">protocol</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> TCP</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">destination</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">ports</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">80</span><span class="token punctuation" style="color:#393A34">,</span><span class="token number" style="color:#36acaa">443</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">selector</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"role==\"master\" &amp;&amp; type==\"external\""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> projectcalico.org/v3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> GlobalNetworkPolicy</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> drop</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">other</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">ingress</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">order</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">20</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">preDNAT</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">applyOnForward</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">ingress</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">action</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Deny</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>Jian Qiu</name>
            <uri>https://github.com/swordqiu</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[QEMU+OCFS2: 使用OCFS2作为虚拟机磁盘文件的SAN存储文件系统]]></title>
        <id>https://www.cloudpods.org/en/blog/ocfs2-as-san-filesystem</id>
        <link href="https://www.cloudpods.org/en/blog/ocfs2-as-san-filesystem"/>
        <updated>2021-07-02T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[本文介绍OCFS2共享集群文件系统，如何配置以及如何在线扩容。]]></summary>
        <content type="html"><![CDATA[<p>本文介绍OCFS2共享集群文件系统，如何配置以及如何在线扩容。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="什么是ocfs2文件系统">什么是OCFS2文件系统？<a class="hash-link" aria-label="Direct link to 什么是OCFS2文件系统？" title="Direct link to 什么是OCFS2文件系统？" href="https://www.cloudpods.org/en/blog/ocfs2-as-san-filesystem#%E4%BB%80%E4%B9%88%E6%98%AFocfs2%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F">​</a></h2>
<p>OCFS2是 Oracle Cluster File System Version 2 的缩写，是Oracle公司内部开发的共享磁盘文件系统，于2011年开源，使用GNU GPL协议。</p>
<p>什么是共享磁盘文件系统呢？我们下面通过解释三个概念的对比来说明：</p>
<ul>
<li>磁盘文件系统</li>
</ul>
<p>这是最常见的文件系统，构建在<strong>本地</strong>的磁盘（块存储，Block Storage）之上。通过磁盘文件系统，磁盘上的内容以文件目录的形式进行组织，方便了用户有效使用磁盘上的存储空间。磁盘文件系统的例子有：ext4, xfs等。</p>
<ul>
<li>共享文件系统</li>
</ul>
<p>共享文件系统通过远端服务器上运行的服务程序访问挂载在远端服务器上的文件系统。例子为：NFS（Network File System），Samba（CIFS）。</p>
<ul>
<li>共享磁盘文件系统</li>
</ul>
<p>共享磁盘文件系统又叫集群文件系统（Cluster File System），是专门构建在网络共享的磁盘上的文件系统。网络共享磁盘通过SAN（Storage Area Network）被多台主机共同访问，和磁盘文件系统相比，共享磁盘文件系统除了要解决磁盘空间的有效管理问题之外，还要解决文件系统被多台主机同时访问的并发修改问题。因此分布式锁机制是共享磁盘文件系统共有的机制。</p>
<p>从使用场景来看，三种文件系统的差别很明显：磁盘文件系统直接访问本地磁盘，共享文件系统需要通过共享文件服务访问挂载在服务器上的文件系统，而共享磁盘文件系统则直接访问共享磁盘。</p>
<p>因此，在网络共享的场景下，通过共享磁盘文件系统访问SAN存储，可以直接访问共享存储设备。访问路径短，效率高，并且能解决多主机并发访问共享存储的问题。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="qemu通过ocfs2使用共享san存储">QEMU通过OCFS2使用共享SAN存储<a class="hash-link" aria-label="Direct link to QEMU通过OCFS2使用共享SAN存储" title="Direct link to QEMU通过OCFS2使用共享SAN存储" href="https://www.cloudpods.org/en/blog/ocfs2-as-san-filesystem#qemu%E9%80%9A%E8%BF%87ocfs2%E4%BD%BF%E7%94%A8%E5%85%B1%E4%BA%ABsan%E5%AD%98%E5%82%A8">​</a></h2>
<p>QEMU使用共享SAN存储有多种方案。常见方案是在需要新建虚拟机磁盘时，使用SAN存储的管理API，分配出卷（LUN）之后，直接将卷挂载给QEMU虚拟机使用。这种方案的优点是QEMU虚拟机直接访问LUN，损耗低，性能好。而缺点是需要使用存储设备特定的API，和设备绑定，不够通用。</p>
<p>本文介绍通过OCFS2共享磁盘文件系统，将一个大容量的SAN存储卷作为存储QEMU虚拟机虚拟磁盘文件的存储，达到QEMU使用共享储存的目的。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="ocfs2文件系统的配置">OCFS2文件系统的配置<a class="hash-link" aria-label="Direct link to OCFS2文件系统的配置" title="Direct link to OCFS2文件系统的配置" href="https://www.cloudpods.org/en/blog/ocfs2-as-san-filesystem#ocfs2%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%85%8D%E7%BD%AE">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="准备环境">准备环境<a class="hash-link" aria-label="Direct link to 准备环境" title="Direct link to 准备环境" href="https://www.cloudpods.org/en/blog/ocfs2-as-san-filesystem#%E5%87%86%E5%A4%87%E7%8E%AF%E5%A2%83">​</a></h3>
<p>这一步安装和配置软件</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="下载和安装ocfs2-tools的rpm包安装也依赖net-tools">下载和安装ocfs2-tools的rpm包安装（也依赖net-tools）<a class="hash-link" aria-label="Direct link to 下载和安装ocfs2-tools的rpm包安装（也依赖net-tools）" title="Direct link to 下载和安装ocfs2-tools的rpm包安装（也依赖net-tools）" href="https://www.cloudpods.org/en/blog/ocfs2-as-san-filesystem#%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85ocfs2-tools%E7%9A%84rpm%E5%8C%85%E5%AE%89%E8%A3%85%E4%B9%9F%E4%BE%9D%E8%B5%96net-tools">​</a></h4>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">wget</span><span class="token plain"> http://public-yum.oracle.com/public-yum-ol7.repo </span><span class="token parameter variable" style="color:#36acaa">-O</span><span class="token plain"> /etc/yum.repos.d/public-yum-ol7.repo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">rpm</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">--import</span><span class="token plain"> http://public-yum.oracle.com/RPM-GPG-KEY-oracle-ol7</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ yum </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"> yum-plugin-downloadonly </span><span class="token parameter variable" style="color:#36acaa">-y</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">mkdir</span><span class="token plain"> /tmp/ocfs2 </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token builtin class-name">cd</span><span class="token plain"> /tmp/ocfs2/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ yum </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">--downloadonly</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">--downloaddir</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">/tmp/ocfs2/ ocfs2-tools net-tools </span><span class="token parameter variable" style="color:#36acaa">-y</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>具体操作步骤见官方文档：<a href="https://docs.oracle.com/cd/E52668_01/E54669/E54669.pdf" target="_blank" rel="noopener noreferrer">https://docs.oracle.com/cd/E52668_01/E54669/E54669.pdf</a>, Chapter 23 Oracle Cluster File System Version 2</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="安装cloudpods内核自带编译了ocfs2文件系统的内核模块">安装Cloudpods内核，自带编译了ocfs2文件系统的内核模块<a class="hash-link" aria-label="Direct link to 安装Cloudpods内核，自带编译了ocfs2文件系统的内核模块" title="Direct link to 安装Cloudpods内核，自带编译了ocfs2文件系统的内核模块" href="https://www.cloudpods.org/en/blog/ocfs2-as-san-filesystem#%E5%AE%89%E8%A3%85cloudpods%E5%86%85%E6%A0%B8%E8%87%AA%E5%B8%A6%E7%BC%96%E8%AF%91%E4%BA%86ocfs2%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%86%85%E6%A0%B8%E6%A8%A1%E5%9D%97">​</a></h4>
<p>由于OCFS2使用场景较少，在常见发行版的内核中都不会启用OCFS2的内核模块。我们提供了预先编译好的启用了OCFS2的内核安装包：</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ yum </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-y</span><span class="token plain"> yum-utils</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 添加 yunion Cloudpods rpm 源</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ yum-config-manager --add-repo https://iso.yunion.cn/yumrepo-3.6/yunion.repo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ yum </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-y</span><span class="token plain"> kernel-3.10.0-1062.4.3.el7.yn20191203</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>同时，部署时写配置文件到/etc/modules-load.d/ocfs2.conf，确保内核的ocfs2模块自动加载</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># Load ocfs2.ko at boot</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ocfs2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>安装内核后需要重启生效，重启后检查新的内核已经生效</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">uname</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-r</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">3.10</span><span class="token plain">.0-1062.4.3.el7.yn20191203.x86_64</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="ocfs2配置文件">OCFS2配置文件<a class="hash-link" aria-label="Direct link to OCFS2配置文件" title="Direct link to OCFS2配置文件" href="https://www.cloudpods.org/en/blog/ocfs2-as-san-filesystem#ocfs2%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6">​</a></h4>
<p>OCFS2配置简单，只需要在每个要挂载OCFS2的节点上都配置相同的配置文件，申明成员节点即可。</p>
<p>以下为示例配置文件:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">cat</span><span class="token plain"> /etc/ocfs2/cluster.conf </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cluster:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        node_count </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token plain">            </span><span class="token operator" style="color:#393A34">&lt;=</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> 集群节点数目</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> ocfs2              </span><span class="token operator" style="color:#393A34">&lt;=</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> 集群名字</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">node:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ip_port </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">7777</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ip_address </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">192.168</span><span class="token plain">.7.10</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        number </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">                </span><span class="token operator" style="color:#393A34">&lt;=</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> 节点编号</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> client01           </span><span class="token operator" style="color:#393A34">&lt;=</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> 节点名字</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        cluster </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> ocfs2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">node:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ip_port </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">7777</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ip_address </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">192.168</span><span class="token plain">.7.11</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        number </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> client02</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        cluster </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> ocfs2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">node:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ip_port </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">7777</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ip_address </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">192.168</span><span class="token plain">.7.12</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        number </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> client03</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        cluster </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> ocfs2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="初始化ocfs2的配置">初始化ocfs2的配置<a class="hash-link" aria-label="Direct link to 初始化ocfs2的配置" title="Direct link to 初始化ocfs2的配置" href="https://www.cloudpods.org/en/blog/ocfs2-as-san-filesystem#%E5%88%9D%E5%A7%8B%E5%8C%96ocfs2%E7%9A%84%E9%85%8D%E7%BD%AE">​</a></h4>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ o2cb.init configure      第一项选yes，集群名称填上面配置文件里的，默认是ocfs2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="确保o2cb-ocfs2服务启动并设置为开机自启">确保o2cb ocfs2服务启动并设置为开机自启<a class="hash-link" aria-label="Direct link to 确保o2cb ocfs2服务启动并设置为开机自启" title="Direct link to 确保o2cb ocfs2服务启动并设置为开机自启" href="https://www.cloudpods.org/en/blog/ocfs2-as-san-filesystem#%E7%A1%AE%E4%BF%9Do2cb-ocfs2%E6%9C%8D%E5%8A%A1%E5%90%AF%E5%8A%A8%E5%B9%B6%E8%AE%BE%E7%BD%AE%E4%B8%BA%E5%BC%80%E6%9C%BA%E8%87%AA%E5%90%AF">​</a></h4>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">systemctl </span><span class="token builtin class-name">enable</span><span class="token plain"> o2cb ocfs2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>至此，OCFS2的软件和配置完成，下一步将格式化磁盘，挂载OCFS2文件系统</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="挂载ocfs2文件系统">挂载OCFS2文件系统<a class="hash-link" aria-label="Direct link to 挂载OCFS2文件系统" title="Direct link to 挂载OCFS2文件系统" href="https://www.cloudpods.org/en/blog/ocfs2-as-san-filesystem#%E6%8C%82%E8%BD%BDocfs2%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F">​</a></h3>
<p>这一步使用OCFS2格式化网络共享磁盘，并且挂载到各台宿主机上</p>
<p>在此之前可能要配置SAN存储的多路径multipath(由于行文原因，细节在此省略)，在此之后使用parted分区，格式化成ocfs2（只在一台机器分区格式化，其他机器partprobe就能看到格式化后的分区）并挂载到多台机器</p>
<p>以下命令在第一个节点执行：</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># 查看多路径multipath磁盘情况</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ multipath </span><span class="token parameter variable" style="color:#36acaa">-l</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>使用mkfs.ocfs2格式化分区</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">parted</span><span class="token plain"> /dev/dm-0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ mkfs.ocfs2 /dev/dm-1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">mount</span><span class="token plain"> /dev/dm-1 /data</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>持久化磁盘挂载到/etc/fstab</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># /etc/fstab</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/dev/dm-1  /opt/cloud/workspace/disks  ocfs2     _netdev,defaults  </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>在其他节点，则只需要执行partprobe探测分区变化，并且挂载分区。也应该修改/etc/fstab，持久化分区的挂载。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="cloudpods使用ocfs2文件系统">Cloudpods使用OCFS2文件系统<a class="hash-link" aria-label="Direct link to Cloudpods使用OCFS2文件系统" title="Direct link to Cloudpods使用OCFS2文件系统" href="https://www.cloudpods.org/en/blog/ocfs2-as-san-filesystem#cloudpods%E4%BD%BF%E7%94%A8ocfs2%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F">​</a></h2>
<p>在Cloudpods中，通过OCFS2挂载的共享文件系统可以作为GPFS类型的共享存储类型进行管理。通过以下步骤将OCFS2的共享存储注册到Cloudpods，并且用来存储虚拟机用的虚拟磁盘文件。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="注册ocfs2块存储">注册OCFS2块存储<a class="hash-link" aria-label="Direct link to 注册OCFS2块存储" title="Direct link to 注册OCFS2块存储" href="https://www.cloudpods.org/en/blog/ocfs2-as-san-filesystem#%E6%B3%A8%E5%86%8Cocfs2%E5%9D%97%E5%AD%98%E5%82%A8">​</a></h3>
<p>在【存储-块存储】界面，新建一个GPFS类型的共享存储。</p>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/ocfs2-create-8ab1a7535ef997b7abb16695b2ef1b62.png" width="800" height="501" class="img_ev3q"></p>
<p>存储记录创建成功后，选择该存储的“管理宿主机”菜单按钮，在关联存储的宿主机列表，选择“关联宿主机”，将挂载该存储的宿主机节点都注册关联，让Cloudpods平台知道这个共享存储挂载到哪些宿主机的哪个目录下。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="使用ocfs2创建主机虚拟磁盘">使用OCFS2创建主机虚拟磁盘<a class="hash-link" aria-label="Direct link to 使用OCFS2创建主机虚拟磁盘" title="Direct link to 使用OCFS2创建主机虚拟磁盘" href="https://www.cloudpods.org/en/blog/ocfs2-as-san-filesystem#%E4%BD%BF%E7%94%A8ocfs2%E5%88%9B%E5%BB%BA%E4%B8%BB%E6%9C%BA%E8%99%9A%E6%8B%9F%E7%A3%81%E7%9B%98">​</a></h3>
<p>以上配置完成后，在新建虚拟机时，就可以选择新建的OCFS2存储作为虚拟磁盘的存储。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="ocfs2文件系统的扩容">OCFS2文件系统的扩容<a class="hash-link" aria-label="Direct link to OCFS2文件系统的扩容" title="Direct link to OCFS2文件系统的扩容" href="https://www.cloudpods.org/en/blog/ocfs2-as-san-filesystem#ocfs2%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%89%A9%E5%AE%B9">​</a></h2>
<p>首先需要将OCFS2只挂载在第一个节点，将其他节点都卸载。以下操作都只在第一个节点上执行。</p>
<p>首先，需要在SAN存储扩容该物理卷，这一步在SAN设备上操作，在此不详叙述。</p>
<p>其次，针对multipath设备，需要rescan该设备下的每个磁盘，让操作系统感知到设备的扩容。</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># 首先执行 multipath -l 查看multipath设备底层的磁盘设备</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ multipath </span><span class="token parameter variable" style="color:#36acaa">-ll</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Jun </span><span class="token number" style="color:#36acaa">24</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">15</span><span class="token plain">:09:16 </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> ignoring extra data starting with </span><span class="token string" style="color:#e3116c">'}'</span><span class="token plain"> on line </span><span class="token number" style="color:#36acaa">16</span><span class="token plain"> of /etc/multipath.conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Jun </span><span class="token number" style="color:#36acaa">24</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">15</span><span class="token plain">:09:16 </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> sdi: alua not supported</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Jun </span><span class="token number" style="color:#36acaa">24</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">15</span><span class="token plain">:09:16 </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> sdb: alua not supported</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Jun </span><span class="token number" style="color:#36acaa">24</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">15</span><span class="token plain">:09:16 </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> sdc: alua not supported</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Jun </span><span class="token number" style="color:#36acaa">24</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">15</span><span class="token plain">:09:16 </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> sdd: alua not supported</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Jun </span><span class="token number" style="color:#36acaa">24</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">15</span><span class="token plain">:09:16 </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> sde: alua not supported</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Jun </span><span class="token number" style="color:#36acaa">24</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">15</span><span class="token plain">:09:16 </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> sdf: alua not supported</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Jun </span><span class="token number" style="color:#36acaa">24</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">15</span><span class="token plain">:09:16 </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> sdg: alua not supported</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Jun </span><span class="token number" style="color:#36acaa">24</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">15</span><span class="token plain">:09:16 </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> sdh: alua not supported</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Jun </span><span class="token number" style="color:#36acaa">24</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">15</span><span class="token plain">:09:16 </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> sdq: alua not supported</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Jun </span><span class="token number" style="color:#36acaa">24</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">15</span><span class="token plain">:09:16 </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> sdj: alua not supported</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Jun </span><span class="token number" style="color:#36acaa">24</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">15</span><span class="token plain">:09:16 </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> sdm: alua not supported</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Jun </span><span class="token number" style="color:#36acaa">24</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">15</span><span class="token plain">:09:16 </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> sdn: alua not supported</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Jun </span><span class="token number" style="color:#36acaa">24</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">15</span><span class="token plain">:09:16 </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> sdo: alua not supported</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Jun </span><span class="token number" style="color:#36acaa">24</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">15</span><span class="token plain">:09:16 </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> sdp: alua not supported</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Jun </span><span class="token number" style="color:#36acaa">24</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">15</span><span class="token plain">:09:16 </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> sdk: alua not supported</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Jun </span><span class="token number" style="color:#36acaa">24</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">15</span><span class="token plain">:09:16 </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> sdl: alua not supported</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">36488eef100d71ed122ace06c00000001 dm-0 HUAWEI  ,XSG1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#36acaa">size</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">15T </span><span class="token assign-left variable" style="color:#36acaa">features</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'1 queue_if_no_path'</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">hwhandler</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'0'</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">wp</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">rw</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token variable" style="color:#36acaa">`</span><span class="token variable" style="color:#36acaa">-+- </span><span class="token variable assign-left variable" style="color:#36acaa">policy</span><span class="token variable operator" style="color:#393A34">=</span><span class="token variable string" style="color:#e3116c">'service-time 0'</span><span class="token variable" style="color:#36acaa"> </span><span class="token variable assign-left variable" style="color:#36acaa">prio</span><span class="token variable operator" style="color:#393A34">=</span><span class="token variable" style="color:#36acaa">-1 </span><span class="token variable assign-left variable" style="color:#36acaa">status</span><span class="token variable operator" style="color:#393A34">=</span><span class="token variable" style="color:#36acaa">active</span><br></span><span class="token-line" style="color:#393A34"><span class="token variable" style="color:#36acaa">  </span><span class="token variable operator" style="color:#393A34">|</span><span class="token variable" style="color:#36acaa">- </span><span class="token variable number" style="color:#36acaa">1</span><span class="token variable" style="color:#36acaa">:0:7:1 sdi </span><span class="token variable number" style="color:#36acaa">8</span><span class="token variable" style="color:#36acaa">:128 active ready running</span><br></span><span class="token-line" style="color:#393A34"><span class="token variable" style="color:#36acaa">  </span><span class="token variable operator" style="color:#393A34">|</span><span class="token variable" style="color:#36acaa">- </span><span class="token variable number" style="color:#36acaa">1</span><span class="token variable" style="color:#36acaa">:0:0:1 sdb </span><span class="token variable number" style="color:#36acaa">8</span><span class="token variable" style="color:#36acaa">:16  active ready running</span><br></span><span class="token-line" style="color:#393A34"><span class="token variable" style="color:#36acaa">  </span><span class="token variable operator" style="color:#393A34">|</span><span class="token variable" style="color:#36acaa">- </span><span class="token variable number" style="color:#36acaa">1</span><span class="token variable" style="color:#36acaa">:0:1:1 sdc </span><span class="token variable number" style="color:#36acaa">8</span><span class="token variable" style="color:#36acaa">:32  active ready running</span><br></span><span class="token-line" style="color:#393A34"><span class="token variable" style="color:#36acaa">  </span><span class="token variable operator" style="color:#393A34">|</span><span class="token variable" style="color:#36acaa">- </span><span class="token variable number" style="color:#36acaa">1</span><span class="token variable" style="color:#36acaa">:0:2:1 sdd </span><span class="token variable number" style="color:#36acaa">8</span><span class="token variable" style="color:#36acaa">:48  active ready running</span><br></span><span class="token-line" style="color:#393A34"><span class="token variable" style="color:#36acaa">  </span><span class="token variable operator" style="color:#393A34">|</span><span class="token variable" style="color:#36acaa">- </span><span class="token variable number" style="color:#36acaa">1</span><span class="token variable" style="color:#36acaa">:0:3:1 sde </span><span class="token variable number" style="color:#36acaa">8</span><span class="token variable" style="color:#36acaa">:64  active ready running</span><br></span><span class="token-line" style="color:#393A34"><span class="token variable" style="color:#36acaa">  </span><span class="token variable operator" style="color:#393A34">|</span><span class="token variable" style="color:#36acaa">- </span><span class="token variable number" style="color:#36acaa">1</span><span class="token variable" style="color:#36acaa">:0:4:1 sdf </span><span class="token variable number" style="color:#36acaa">8</span><span class="token variable" style="color:#36acaa">:80  active ready running</span><br></span><span class="token-line" style="color:#393A34"><span class="token variable" style="color:#36acaa">  </span><span class="token variable operator" style="color:#393A34">|</span><span class="token variable" style="color:#36acaa">- </span><span class="token variable number" style="color:#36acaa">1</span><span class="token variable" style="color:#36acaa">:0:5:1 sdg </span><span class="token variable number" style="color:#36acaa">8</span><span class="token variable" style="color:#36acaa">:96  active ready running</span><br></span><span class="token-line" style="color:#393A34"><span class="token variable" style="color:#36acaa">  </span><span class="token variable operator" style="color:#393A34">|</span><span class="token variable" style="color:#36acaa">- </span><span class="token variable number" style="color:#36acaa">1</span><span class="token variable" style="color:#36acaa">:0:6:1 sdh </span><span class="token variable number" style="color:#36acaa">8</span><span class="token variable" style="color:#36acaa">:112 active ready running</span><br></span><span class="token-line" style="color:#393A34"><span class="token variable" style="color:#36acaa">  </span><span class="token variable operator" style="color:#393A34">|</span><span class="token variable" style="color:#36acaa">- </span><span class="token variable number" style="color:#36acaa">2</span><span class="token variable" style="color:#36acaa">:0:7:1 sdq </span><span class="token variable number" style="color:#36acaa">65</span><span class="token variable" style="color:#36acaa">:0  active ready running</span><br></span><span class="token-line" style="color:#393A34"><span class="token variable" style="color:#36acaa">  </span><span class="token variable operator" style="color:#393A34">|</span><span class="token variable" style="color:#36acaa">- </span><span class="token variable number" style="color:#36acaa">2</span><span class="token variable" style="color:#36acaa">:0:3:1 sdj </span><span class="token variable number" style="color:#36acaa">8</span><span class="token variable" style="color:#36acaa">:144 active ready running</span><br></span><span class="token-line" style="color:#393A34"><span class="token variable" style="color:#36acaa">  </span><span class="token variable operator" style="color:#393A34">|</span><span class="token variable" style="color:#36acaa">- </span><span class="token variable number" style="color:#36acaa">2</span><span class="token variable" style="color:#36acaa">:0:6:1 sdm </span><span class="token variable number" style="color:#36acaa">8</span><span class="token variable" style="color:#36acaa">:192 active ready running</span><br></span><span class="token-line" style="color:#393A34"><span class="token variable" style="color:#36acaa">  </span><span class="token variable operator" style="color:#393A34">|</span><span class="token variable" style="color:#36acaa">- </span><span class="token variable number" style="color:#36acaa">2</span><span class="token variable" style="color:#36acaa">:0:0:1 sdn </span><span class="token variable number" style="color:#36acaa">8</span><span class="token variable" style="color:#36acaa">:208 active ready running</span><br></span><span class="token-line" style="color:#393A34"><span class="token variable" style="color:#36acaa">  </span><span class="token variable operator" style="color:#393A34">|</span><span class="token variable" style="color:#36acaa">- </span><span class="token variable number" style="color:#36acaa">2</span><span class="token variable" style="color:#36acaa">:0:2:1 sdo </span><span class="token variable number" style="color:#36acaa">8</span><span class="token variable" style="color:#36acaa">:224 active ready running</span><br></span><span class="token-line" style="color:#393A34"><span class="token variable" style="color:#36acaa">  </span><span class="token variable operator" style="color:#393A34">|</span><span class="token variable" style="color:#36acaa">- </span><span class="token variable number" style="color:#36acaa">2</span><span class="token variable" style="color:#36acaa">:0:5:1 sdp </span><span class="token variable number" style="color:#36acaa">8</span><span class="token variable" style="color:#36acaa">:240 active ready running</span><br></span><span class="token-line" style="color:#393A34"><span class="token variable" style="color:#36acaa">  </span><span class="token variable operator" style="color:#393A34">|</span><span class="token variable" style="color:#36acaa">- </span><span class="token variable number" style="color:#36acaa">2</span><span class="token variable" style="color:#36acaa">:0:1:1 sdk </span><span class="token variable number" style="color:#36acaa">8</span><span class="token variable" style="color:#36acaa">:160 active ready running</span><br></span><span class="token-line" style="color:#393A34"><span class="token variable" style="color:#36acaa">  </span><span class="token variable" style="color:#36acaa">`</span><span class="token plain">- </span><span class="token number" style="color:#36acaa">2</span><span class="token plain">:0:4:1 sdl </span><span class="token number" style="color:#36acaa">8</span><span class="token plain">:176 active ready running</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>对每个设备执行：</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token builtin class-name">echo</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> /sys/class/block/sdi/device/rescan</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>再执行下面的命令，让操作系统感知到multipath设备的容量变化：</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ multipathd </span><span class="token parameter variable" style="color:#36acaa">-k</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># multipathd&gt; resize map 36488eef100d71ed122ace06c00000001</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># ok</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># multipathd&gt; exit</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>经过上面步骤，操作系统已经感知到设备的容量变化，这时候需要使用parted扩大分区表，方法是使用parted删除分区再重建分区</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">parted</span><span class="token plain"> /dev/dm-0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">parted</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> unit s</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">parted</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> p</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Model: Linux device-mapper </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">multipath</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">dm</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Disk /dev/dm-0: 32212254720s</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Sector size </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">logical/physical</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">: 512B/512B</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Partition Table: gpt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Disk Flags:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Number  Start  End           Size          File system  Name   Flags</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">      2048s  10737416191s  10737414144s               disks</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">parted</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">rm</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">parted</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> mkpart</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Partition name?  </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">?</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">File system type?  </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">ext2</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">?</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Start? </span><span class="token number" style="color:#36acaa">2048</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">End? </span><span class="token number" style="color:#36acaa">100</span><span class="token plain">%</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">device-mapper: create ioctl on 36488eef100d71ed122ace06c00000001p1 part1-mpath-36488eef100d71ed122ace06c00000001 failed: Device or resource busy</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">parted</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> p</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Model: Linux device-mapper </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">multipath</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">dm</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Disk /dev/dm-0: 32212254720s</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Sector size </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">logical/physical</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">: 512B/512B</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Partition Table: gpt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Disk Flags:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Number  Start  End           Size          File system  Name  Flags</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">      2048s  32212252671s  32212250624s</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">parted</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> quit</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>扩容分区表之后，再使用 tunefs.ocfs2 扩容文件系统</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># 扩容文件系统</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># tunefs.ocfs2 -S /dev/dm-1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>经过以上步骤后，文件系统扩容完毕。最后，在其余节点执行partprobe感知设备的容量变化，再重新挂载分区就可以了。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="ocfs2文件系统的修复">OCFS2文件系统的修复<a class="hash-link" aria-label="Direct link to OCFS2文件系统的修复" title="Direct link to OCFS2文件系统的修复" href="https://www.cloudpods.org/en/blog/ocfs2-as-san-filesystem#ocfs2%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%9A%84%E4%BF%AE%E5%A4%8D">​</a></h2>
<p>遇到某个ocfs2节点故障下线再上线后，无法正常挂载ocfs2目录的故障，dmesg报错需要运行fsck.ocfs2进行文件系统检查和修复。</p>
<p>对ocfs2文件系统进行fsck需要确保在所有节点均umount，并且停止o2cb和ocfs2服务。仅在一个节点启动o2cb和ocfs2服务，并在改节点运行fsck.ocfs2。</p>
<p>对ocsfs2的共享块存储多次运行fsck.ocfs2进行检查和修复后。再逐个节点启用o2cb和ocfs2服务。最后再逐个节点挂载ocfs2文件系统。</p>]]></content>
        <author>
            <name>Jian Qiu</name>
            <uri>https://github.com/swordqiu</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[问题分析：为什么keystone的本地用户认证接口压测性能很差？]]></title>
        <id>https://www.cloudpods.org/en/blog/keystone-slow-password-auth</id>
        <link href="https://www.cloudpods.org/en/blog/keystone-slow-password-auth"/>
        <updated>2021-07-01T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[有用户反馈keystone认证本地用户的接口性能很差，因此做了调研。]]></summary>
        <content type="html"><![CDATA[<p>有用户反馈keystone认证本地用户的接口性能很差，因此做了调研。</p>
<p>首先使用ab（apache benchmark）模拟用户认证，调用命令行如下：</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ab </span><span class="token parameter variable" style="color:#36acaa">-n</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2000</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-c</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">100</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-p</span><span class="token plain"> ~/auth_body.json </span><span class="token parameter variable" style="color:#36acaa">-T</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'application/json'</span><span class="token plain"> http://192.168.1.248:5000/v3/auth/tokens</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>执行以上脚本过程中，采集keystone的pprof的profile数据：</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">wget</span><span class="token plain"> http://192.168.1.248:5000/debug/pprof/profile</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>然后把profile数据文件拷贝到本地，用本地go tool打开一个http服务，查看profile的内容。</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">go tool pprof </span><span class="token parameter variable" style="color:#36acaa">-http</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">0.0</span><span class="token plain">.0.0:8081 ~/profile</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>用浏览打开看，得到如下的调用图：</p>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/goprofile-90364e1ac68260b993159f60438e4189.png" width="1648" height="1329" class="img_ev3q"></p>
<p>发现整个profile时间约130秒，调用blowfish encryptBlock的时间花了约101秒。查看代码发现这个是密码校验调用的方法bcrypt.CompareHashAndPassword。也就是说，70%的时间都花在验证本地用户的密码上了。</p>
<p>为什么这个bcrypt.CompareHashAndPassword方法这么慢呢？搜索google发现这个问答：</p>
<p><a href="https://stackoverflow.com/questions/49437359/why-bcrypt-library-comparehashandpassword-method-is-slow" target="_blank" rel="noopener noreferrer">https://stackoverflow.com/questions/49437359/why-bcrypt-library-comparehashandpassword-method-is-slow</a></p>
<p>其中有一段文字：</p>
<p>Besides incorporating a salt to protect against rainbow table attacks, bcrypt is an adaptive function: over time, the iteration count can be increased to make it slower, so it remains resistant to brute-force search attacks even with increasing computation power.</p>
<p>因此，采用bcrypt加密用户密码后，为了防止密码被暴力破解，用户认证接口的校验速度是故意地越压越慢的，性能必然不会好。</p>]]></content>
        <author>
            <name>Jian Qiu</name>
            <uri>https://github.com/swordqiu</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用 Cgroups 限制 Kubernetes Pod 进程数]]></title>
        <id>https://www.cloudpods.org/en/blog/cgroups-kubernetes-pid-limits</id>
        <link href="https://www.cloudpods.org/en/blog/cgroups-kubernetes-pid-limits"/>
        <updated>2021-06-25T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Kubernetes 里面的 Pod 资源是最小的计算单元，抽象了一组（一个或多个）容器。容器也是 Linux 系统上的进程，但基于 Namespace 和 Cgroups(Control groups) 等技术实现了不同程度的隔离。]]></summary>
        <content type="html"><![CDATA[<p>Kubernetes 里面的 Pod 资源是最小的计算单元，抽象了一组（一个或多个）容器。容器也是 Linux 系统上的进程，但基于 Namespace 和 Cgroups(Control groups) 等技术实现了不同程度的隔离。
简单来说 Namespace 可以让每个进程有独立的 PID, IPC 和网络空间。Cgroups 可以控制进程的资源占用，比如 CPU ，内存和允许的最大进程数等等。</p>
<p>今天主要介绍如何通过 Cgroups 里面的 pids 控制器限制 Kubernetes Pod 容器的最大进程数量。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="场景介绍">场景介绍<a class="hash-link" aria-label="Direct link to 场景介绍" title="Direct link to 场景介绍" href="https://www.cloudpods.org/en/blog/cgroups-kubernetes-pid-limits#%E5%9C%BA%E6%99%AF%E4%BB%8B%E7%BB%8D">​</a></h2>
<p>之前遇到过这样一个问题，我们的服务会调用执行外部的命令，每调用一次外部命令就会 fork 产生子进程。但是由于代码上的 bug ，没有及时对子进程回收，然后这个容器不断 fork 产生子进程，耗尽了宿主机的进程表空间，最终导致整个系统不响应，影响了其它的服务。</p>
<p>这种问题除了让开发人员修复 bug 外，也需要在系统层面对进程数量进行限制。所以，如果一个容器里面运行的服务会 fork 产生子进程，就很有必要使用 Cgroups 的 pids 控制器限制这个容器能运行的最大进程数量。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="解决方法">解决方法<a class="hash-link" aria-label="Direct link to 解决方法" title="Direct link to 解决方��法" href="https://www.cloudpods.org/en/blog/cgroups-kubernetes-pid-limits#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="kubelet-开启-podpidslimit-功能">Kubelet 开启 PodPidsLimit 功能<a class="hash-link" aria-label="Direct link to Kubelet 开启 PodPidsLimit 功能" title="Direct link to Kubelet 开启 PodPidsLimit 功能" href="https://www.cloudpods.org/en/blog/cgroups-kubernetes-pid-limits#kubelet-%E5%BC%80%E5%90%AF-podpidslimit-%E5%8A%9F%E8%83%BD">​</a></h3>
<p>Kubernetes 里面的每个节点都会运行一个叫做 Kubelet 的服务，负责节点上容器的状态和生命周期，比如创建和删除容器。根据 Kubernetes 的官方文档 <a href="https://kubernetes.io/docs/concepts/policy/pid-limiting/" target="_blank" rel="noopener noreferrer">Process ID Limits And Reservations</a> 内容，可以设置 Kubelet 服务的 <strong>--pod-max-pids</strong> 配置选项，之后在该节点上创建的容器，最终都会使用 Cgroups pid 控制器限制容器的进程数量。</p>
<p>我们 Kubernetes 是在 CentOS 7 上使用 kubeadm 部署的 v1.15.9 版本，需要额外设置 <strong>SupportPodPidsLimit</strong> 的 feature-gate，对应操作如下（其它发行版应该也类似）：</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># kubelet 使用 systemd 启动的，可以通过编辑 /etc/sysconfig/kubelet</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 添加额外的启动参数，设置 pod 最大进程数为 1024</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">vim</span><span class="token plain"> /etc/sysconfig/kubelet</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#36acaa">KUBELET_EXTRA_ARGS</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"--pod-max-pids=1024 --feature-gates=</span><span class="token string entity" style="color:#36acaa">\"</span><span class="token string" style="color:#e3116c">SupportPodPidsLimit=true</span><span class="token string entity" style="color:#36acaa">\"</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 重启 kubelet 服务</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ systemctl restart kubelet</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 查看参数是否生效</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">ps</span><span class="token plain"> faux </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">grep</span><span class="token plain"> kubelet </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">grep</span><span class="token plain"> pod-max-pids</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">root     </span><span class="token number" style="color:#36acaa">104865</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10.5</span><span class="token plain">  </span><span class="token number" style="color:#36acaa">0.6</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1731392</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">107368</span><span class="token plain"> ?      Ssl  </span><span class="token number" style="color:#36acaa">11</span><span class="token plain">:56   </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">:30 /usr/bin/kubelet </span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">. --pod-max-pids</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">10</span><span class="token plain"> --feature-gates</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">SupportPodPidsLimit</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">true</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="验证-podpidslimit">验证 PodPidsLimit<a class="hash-link" aria-label="Direct link to 验证 PodPidsLimit" title="Direct link to 验证 PodPidsLimit" href="https://www.cloudpods.org/en/blog/cgroups-kubernetes-pid-limits#%E9%AA%8C%E8%AF%81-podpidslimit">​</a></h3>
<p>通过配置 Kubelet 的 <strong>--pod-max-pids=1024</strong> 选项，限制了一个容器内允许的最大进程数为 1024 个。现在来测试下如果容器内不断 fork 子进程，数目到达 1024 个时会触发什么行为。</p>
<p>参考 <a href="https://en.wikipedia.org/wiki/Fork_bomb" target="_blank" rel="noopener noreferrer">Fork bomb</a> 的内容，可以创建一个 pod，不断 fork 子进程。</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># 创建普通的 nginx pod yaml</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">cat</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token string" style="color:#e3116c">EOF</span><span class="token string bash punctuation" style="color:#393A34"> </span><span class="token string bash punctuation operator" style="color:#393A34">&gt;</span><span class="token string bash punctuation" style="color:#393A34"> test-nginx.yaml</span><span class="token string" style="color:#e3116c"></span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">apiVersion: v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">kind: Pod</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">metadata:</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">  name: test-nginx</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">spec:</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">  containers:</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">  - name: nginx</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">    image: nginx</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">EOF</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 创建到 Kubernetes 集群</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ kubectl apply </span><span class="token parameter variable" style="color:#36acaa">-f</span><span class="token plain"> test-nginx.yaml</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 进入 nginx 容器模拟 fork bomb </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ kubectl </span><span class="token builtin class-name">exec</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-ti</span><span class="token plain"> test-nginx </span><span class="token function" style="color:#d73a49">bash</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">root@test-nginx:/</span><span class="token comment" style="color:#999988;font-style:italic"># bash -c "fork() { fork | fork &amp;  }; fork"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">environment: fork: retry: Resource temporarily unavailable</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">environment: fork: retry: Resource temporarily unavailable</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">environment: fork: retry: Resource temporarily unavailable</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>通过进入一个 nginx 容器里面使用 bash 运行 fork bomb 命令，我们会发现当 fork 的子进程达到限制的上限数目后，会报 <strong>retry: Resource temporarily unavailable</strong> 的错误，这个时候再看下宿主机的 fork 进程数目。</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># 通过在外部宿主机执行下面的命令，会发现 fork 的进程数目接近 1024 个</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">ps</span><span class="token plain"> faux </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">grep</span><span class="token plain"> fork </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">wc</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-l</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">1019</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>通过以上的实验，发现能够通过设置 Kubelet 的 <strong>--pod-max-pids</strong> 选项，限制容器类的进程数，避免容器进程数不断上升最终耗尽宿主机资源，拖垮整个宿主机系统。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="原理实现">原理实现<a class="hash-link" aria-label="Direct link to 原理实现" title="Direct link to 原理实现" href="https://www.cloudpods.org/en/blog/cgroups-kubernetes-pid-limits#%E5%8E%9F%E7%90%86%E5%AE%9E%E7%8E%B0">​</a></h2>
<p>通过之前描述的解决方法，已经能够限制容器的进程数了。</p>
<p>现在从代码的层面看下 Kubelet 如何设置 Cgroups pids 控制器。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="kubelet-代码调用">Kubelet 代码调用<a class="hash-link" aria-label="Direct link to Kubelet 代码调用" title="Direct link to Kubelet 代码调用" href="https://www.cloudpods.org/en/blog/cgroups-kubernetes-pid-limits#kubelet-%E4%BB%A3%E7%A0%81%E8%B0%83%E7%94%A8">​</a></h3>
<p>首先来看下 Kubelet 代码里面 <strong>--pod-max-pids</strong> 是怎么生效的，Kubernetes 的版本为 v1.15.9。</p>
<p><strong>--pid-max-pids</strong> 选项是在 <code>cmd/kubelet/app/options/options.go</code> 里面的 <code>AddKubeletConfigFlags</code> 函数设置的，对应代码如下。</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// cmd/kubelet/app/options/options.go</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">AddKubeletConfigFlags</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">mainfs </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">pflag</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">FlagSet</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> c </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">kubeletconfig</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">KubeletConfiguration</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 这里定义了 '--pod-max-pids' 的选项</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 对应参数的值通过命令行解析到 kubeletconfig.KubeletConfiguration.PodPidsLimit 里面</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Int64Var</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PodPidsLimit</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"pod-max-pids"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PodPidsLimit</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Set the maximum number of processes per pod.  If -1, the kubelet defaults to the node allocatable pid capacity."</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><code>PodPidsLimit</code> 配置参数解析完成后，kubelet 会在启动的时候把值设置到 ContainerManager 里面，对应代码在 <code>cmd/kubelet/app/server.go</code> 里面的 <code>run</code> 函数，注释如下。</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// cmd/kubelet/app/server.go</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">run</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">s </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">options</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">KubeletServer</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> kubeDeps </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">kubelet</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Dependencies</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> stopCh </span><span class="token operator" style="color:#393A34">&lt;-</span><span class="token keyword" style="color:#00009f">chan</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">struct</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">err </span><span class="token builtin">error</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        kubeDeps</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ContainerManager</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> cm</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewContainerManager</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            cm</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">NodeConfig</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token comment" style="color:#999988;font-style:italic">// 容器 runtime，默认使用 docker</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                ContainerRuntime</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">      s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ContainerRuntime</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token comment" style="color:#999988;font-style:italic">// 使用 Cgroups 控制 pod 的服务质量</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                CgroupsPerQOS</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">         s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">CgroupsPerQOS</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token comment" style="color:#999988;font-style:italic">// 操作 Cgroups 的驱动，有 cgroupfs 和 systemd 两种</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token comment" style="color:#999988;font-style:italic">// 我们默认配置使用 systemd 来控制 Cgroups</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                CgroupDriver</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">          s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">CgroupDriver</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token comment" style="color:#999988;font-style:italic">// 这里就是 PodPidsLimit 的设置了，通过刚才 options 的解析</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token comment" style="color:#999988;font-style:italic">// 赋值到了 ContainerManager.ExperimentalPodPidsLimit 属性</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                ExperimentalPodPidsLimit</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">              s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PodPidsLimit</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token comment" style="color:#999988;font-style:italic">// 限制容器 CPU 使用率的参数</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                EnforceCPULimits</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">                      s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">CPUCFSQuota</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                CPUCFSQuotaPeriod</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">                     s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">CPUCFSQuotaPeriod</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Duration</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token operator" style="color:#393A34">...</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>初始化 ContainerManager 后，会在 <code>pkg/kubelet/cm/container_manager_linux.go</code> 里面调用 <code>NewPodContainerManager</code> 创建 PodContainerManager，代码如下。</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// pkg/kubelet/cm/container_manager_linux.go</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">cm </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">containerManagerImpl</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">NewPodContainerManager</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> PodContainerManager </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 默认情况下已经打开了 CgroupsPerQOS 的选项</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> cm</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">NodeConfig</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">CgroupsPerQOS </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// 这里返回 PodContainerManager 接口的实现</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">podContainerManagerImpl</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            qosContainersInfo</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> cm</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">GetQOSContainersInfo</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            subsystems</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">        cm</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">subsystems</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            cgroupManager</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">     cm</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">cgroupManager</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token comment" style="color:#999988;font-style:italic">// 这里设置 podPidsLimit</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            podPidsLimit</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">      cm</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ExperimentalPodPidsLimit</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            enforceCPULimits</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">  cm</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">EnforceCPULimits</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            cpuCFSQuotaPeriod</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">uint64</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">cm</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">CPUCFSQuotaPeriod </span><span class="token operator" style="color:#393A34">/</span><span class="token plain"> time</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Microsecond</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">podContainerManagerNoop</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        cgroupRoot</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> cm</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">cgroupRoot</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">...</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>从之前的代码能发现 PodContainerManager 是一个接口，对应的实现在 <code>pkg/kubelet/cm/pod_container_manager_linux.go</code> 里面，与 Cgroup 相关的函数则是 <code>podContainerManagerImpl.EnsureExists</code> 函数。</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// pkg/kubelet/cm/pod_container_manager_linux.go</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// podContainerManagerImpl 就是实现 PodContainerManager 接口的结构体</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// EnsureExists 会根据 api 里面 Pod 的定义，在当前系统创建对应容器的 cgroup 配置</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">m </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">podContainerManagerImpl</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">EnsureExists</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pod </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">error</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// podContainerName 也会作为 cgroup name，根据 pod 的 QOS 级别和 UUID 生成</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 查看容器是否存在</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    alreadyExists </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> m</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Exists</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pod</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">                                                                                  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!</span><span class="token plain">alreadyExists </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// 创建 pod 对应容器的 cgroup</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        containerConfig </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">CgroupConfig</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            Name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">               podContainerName</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            ResourceParameters</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">ResourceConfigForPod</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pod</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> m</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">enforceCPULimits</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> m</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">cpuCFSQuotaPeriod</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// 如果启用了 SupportPodPidsLimit feature-gate ，并且 podPidsLimit 大于 0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> utilfeature</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">DefaultFeatureGate</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Enabled</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">kubefeatures</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">SupportPodPidsLimit</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> m</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">podPidsLimit </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token comment" style="color:#999988;font-style:italic">// 这里就会配置 PidsLimit</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            containerConfig</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ResourceParameters</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PidsLimit </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">m</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">podPidsLimit</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// 调用 cgroupManager 根据 containerConfig 创建对应的 cgroup</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> m</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">cgroupManager</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">containerConfig</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Errorf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"failed to create container for %v : %v"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> podContainerName</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">...</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>接下来看 cgroupManager.Create 函数的实现，对应代码实现在 <code>pkg/kubelet/cm/cgroup_manager_linux.go</code> 里面的 <code>cgroupManagerImpl.Create</code>。</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">m </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">cgroupManagerImpl</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">cgroupConfig </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">CgroupConfig</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">error</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    resources </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> m</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">toResources</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">cgroupConfig</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ResourceParameters</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    libcontainerCgroupConfig </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">libcontainerconfigs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Cgroup</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Resources</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> resources</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// libcontainer consumes a different field and expects a different syntax</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// depending on the cgroup driver in use, so we need this conditional here.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> m</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">adapter</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">cgroupManagerType </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> libcontainerSystemd </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// 我们使用 systemd 管理 cgroup ，所以这里会更新下 systemd 对应 cgroup 的配置</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">updateSystemdCgroupInfo</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">libcontainerCgroupConfig</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> cgroupConfig</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Name</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        libcontainerCgroupConfig</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Path </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> cgroupConfig</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Name</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ToCgroupfs</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> utilfeature</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">DefaultFeatureGate</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Enabled</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">kubefeatures</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">SupportPodPidsLimit</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> cgroupConfig</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ResourceParameters </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> cgroupConfig</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ResourceParameters</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PidsLimit </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// 设置 libcontainerCgroupConfig 里面的 PidsLimit</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// 这里 PidsLimit 就是一开始参数指定的 --pod-max-pids 的值</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        libcontainerCgroupConfig</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PidsLimit </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">cgroupConfig</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ResourceParameters</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PidsLimit</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 这里根据 cgroup 的配置返回 libcontainercgroups.Manager 接口的实现</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 这里的实现是 systemd 的实现</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    manager</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> m</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">adapter</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">newManager</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">libcontainerCgroupConfig</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> err</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 调用 libcontainer 里面的 cgroups manager Apply 接口把 pod 的 cgroup 配置应用到系统</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 在我们的环境中，这个 Apply 函数会由 libcontainer/cgroupfs/systemd.Manager 实现</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> manager</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Apply</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> err</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">...</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>在看下最后的 <code>Apply</code> 函数，该函数会调用到 <code>vendor/github.com/opencontainers/runc/libcontainer/cgroups/systemd/apply_systemd.go</code> 里面的 systemd 实现。</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// vendor/github.com/opencontainers/runc/libcontainer/cgroups/systemd/apply_systemd.go</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">m </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">Manager</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Apply</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pid </span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">error</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 初始化 systemd cgroup 需要的一些变量</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        c          </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> m</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Cgroups</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// systemd unit name</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        unitName   </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getUnitName</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        slice      </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"system.slice"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// systemd unit 里面的配置属性</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        properties </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">systemdDbus</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Property</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Always enable accounting, this gets us the same behaviour as the fs implementation,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// plus the kernel has some problems with joining the memory cgroup at a later time.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    properties </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">properties</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">newProp</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"MemoryAccounting"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">newProp</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"CPUAccounting"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">newProp</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"BlockIOAccounting"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Resources</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Memory </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// 设置 cgroup memory limit</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        properties </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">properties</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token function" style="color:#d73a49">newProp</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"MemoryLimit"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">uint64</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Resources</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Memory</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Resources</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">CpuShares </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// 设置 cgroup cpu shares</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        properties </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">properties</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token function" style="color:#d73a49">newProp</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"CPUShares"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Resources</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">CpuShares</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Resources</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">BlkioWeight </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// 设置 cgroup block io weight</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        properties </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">properties</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token function" style="color:#d73a49">newProp</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"BlockIOWeight"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">uint64</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Resources</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">BlkioWeight</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Resources</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PidsLimit </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// 这里设置了本文关注的 PidsLimit 参数</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// 发现会对应 systemd 里面的 TasksAccounting 和 TasksMax 属性</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        properties </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">properties</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token function" style="color:#d73a49">newProp</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"TasksAccounting"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token function" style="color:#d73a49">newProp</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"TasksMax"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">uint64</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Resources</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PidsLimit</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 通过 systemdDbus 根据之前的 cgroup 设置创建对应的 unit</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">_</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> theConn</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">StartTransientUnit</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">unitName</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"replace"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> properties</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> statusChan</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 最后加入 Cgroups</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">joinCgroups</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> pid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> err</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">...</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="systemd-cgroup-slice">Systemd Cgroup slice<a class="hash-link" aria-label="Direct link to Systemd Cgroup slice" title="Direct link to Systemd Cgroup slice" href="https://www.cloudpods.org/en/blog/cgroups-kubernetes-pid-limits#systemd-cgroup-slice">​</a></h3>
<p>通过对 Kubelet 调用 libcontainer，最后由 systemd 创建 pod 容器对应 cgroup unit 的代码调用分析，在这里看下对应 pod 的 systemd unit 配置。</p>
<p>从之前代码看，最终生成的 systemd unit 和 cgroup 和 pod 的 <code>uid</code> 和 <code>qosClass</code> 有关系，所以先通过以下的命令拿到 pod 的 <code>uid</code> 和 <code>qosClass</code>。</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ kubectl get pods test-nginx </span><span class="token parameter variable" style="color:#36acaa">-o</span><span class="token plain"> yaml </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">grep</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-E</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'uid|qos'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  uid: 2ac1e32c-d8d6-4533-8eab-d04d60465065</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  qosClass: BestEffort</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>然后找到对应的 systemd unit .slice 文件。</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># uid 取前 8 位，qosClass 小写</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 找到对应的 kubepods-besteffort-pod2ac1e32c_d8d6_4533_8eab_d04d60465065.slice</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ systemctl </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">grep</span><span class="token plain"> 2ac1e32c </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">grep</span><span class="token plain"> besteffort</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kubepods-besteffort-pod2ac1e32c_d8d6_4533_8eab_d04d60465065.slice      loaded active active    libcontainer container kubepods-besteffort-pod2ac1e32c_d8d6_4533_8eab_d04d60465065.slice</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 查看对应 slice 的配置</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ systemctl status kubepods-besteffort-pod2ac1e32c_d8d6_4533_8eab_d04d60465065.slice</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">● kubepods-besteffort-pod2ac1e32c_d8d6_4533_8eab_d04d60465065.slice - libcontainer container kubepods-besteffort-pod2ac1e32c_d8d6_4533_8eab_d04d60465065.slice</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   Loaded: loaded </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">/run/systemd/system/kubepods-besteffort-pod2ac1e32c_d8d6_4533_8eab_d04d60465065.slice</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> static</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> vendor preset: disabled</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Drop-In: /run/systemd/system/kubepods-besteffort-pod2ac1e32c_d8d6_4533_8eab_d04d60465065.slice.d</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           └─50-BlockIOAccounting.conf, </span><span class="token number" style="color:#36acaa">50</span><span class="token plain">-CPUAccounting.conf, </span><span class="token number" style="color:#36acaa">50</span><span class="token plain">-CPUShares.conf, </span><span class="token number" style="color:#36acaa">50</span><span class="token plain">-DefaultDependencies.conf, </span><span class="token number" style="color:#36acaa">50</span><span class="token plain">-Delegate.conf, </span><span class="token number" style="color:#36acaa">50</span><span class="token plain">-Description.conf, </span><span class="token number" style="color:#36acaa">50</span><span class="token plain">-MemoryAccounting.conf, </span><span class="token number" style="color:#36acaa">50</span><span class="token plain">-TasksAccounting.conf, </span><span class="token number" style="color:#36acaa">50</span><span class="token plain">-TasksMax.conf, </span><span class="token number" style="color:#36acaa">50</span><span class="token plain">-Wants-kubepods-besteffort</span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain">x2eslice.conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   Active: active since Fri </span><span class="token number" style="color:#36acaa">2021</span><span class="token plain">-06-25 </span><span class="token number" style="color:#36acaa">16</span><span class="token plain">:21:25 CST</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> 7min ago</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Tasks: </span><span class="token number" style="color:#36acaa">6</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">limit: </span><span class="token number" style="color:#36acaa">1024</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   Memory: </span><span class="token number" style="color:#36acaa">6</span><span class="token plain">.8M</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   CGroup: /kubepods.slice/kubepods-besteffort.slice/kubepods-besteffort-pod2ac1e32c_d8d6_4533_8eab_d04d60465065.slice</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           ├─docker-2d151786c9985db74632c09412207fa99755473fde93d09920604e097f25a2b7.scope</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           │ ├─32662 nginx: master process nginx </span><span class="token parameter variable" style="color:#36acaa">-g</span><span class="token plain"> daemon off</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           │ ├─32703 nginx: worker process</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           │ ├─32704 nginx: worker process</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           │ ├─32705 nginx: worker process</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           │ └─32706 nginx: worker process</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           └─docker-966047566d9e90d9ef64126b605101c174d750ec0cde3d3a83c5b313c7af9a21.scope</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             └─32544 /pause</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Jun </span><span class="token number" style="color:#36acaa">25</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">16</span><span class="token plain">:21:25 centos7-oc-dev systemd</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">: Created slice libcontainer container kubepods-besteffort-pod2ac1e32c_d8d6_4533_8eab_d04d60465065.slice.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 通过 systemctl status 能发现 50-TasksMax.conf 的文件</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 从之前的代码分析，发现 PodPidsLimit 会对应到 systemd 的 TasksMax 属性</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 现在在看下这个文件的内容</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">cat</span><span class="token plain"> /run/systemd/system/kubepods-besteffort-pod2ac1e32c_d8d6_4533_8eab_d04d60465065.slice.d/50-TasksMax.conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">Slice</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#36acaa">TasksMax</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">1024</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># TasksMax 设置为了 1024 ，限制了这个进程最大子进程（Task）数量</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="cgroup-fs">Cgroup FS<a class="hash-link" aria-label="Direct link to Cgroup FS" title="Direct link to Cgroup FS" href="https://www.cloudpods.org/en/blog/cgroups-kubernetes-pid-limits#cgroup-fs">​</a></h3>
<p>查看之前的 <code>vendor/github.com/opencontainers/runc/libcontainer/cgroups/systemd/apply_systemd.go</code> 代码，发现在创建完 pod 容器对应的 systemd cgroup slice 后，还会调用一次 <code>joinCgroups</code> 这个函数。这个函数会使用 Cgroup FS 原生的方法，在 <code>/sys/fs/cgroup</code> 里面创建对应 pod 容器的 group 。</p>
<p>所以再看下 Cgroup FS 里面 pod 设置 pid limit 的配置。</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># 找到 Cgroup FS pids 控制器的挂载点</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ cgroup on /sys/fs/cgroup/pids </span><span class="token builtin class-name">type</span><span class="token plain"> cgroup </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">rw,nosuid,nodev,noexec,relatime,pids</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 看下 /sys/fs/cgroup/pids 目录下的文件</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">ls</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-alh</span><span class="token plain"> /sys/fs/cgroup/pids</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 发现有一个由 Kubelet 创建的 kubepods.slice</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">drwxr-xr-x   </span><span class="token number" style="color:#36acaa">4</span><span class="token plain"> root root   </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> Jun </span><span class="token number" style="color:#36acaa">25</span><span class="token plain"> 04:49 kubepods.slice</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 再通过查看 /sys/fs/cgroup/pids/kubepods.slice 目录</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 会发现 kubepods-besteffort.slice 和 kubepods-burstable.slice 两个目录</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 分别对应 pod 容器的 QOS 级别</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">ls</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-alh</span><span class="token plain"> /sys/fs/cgroup/pids/kubepods.slice</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">drwxr-xr-x </span><span class="token number" style="color:#36acaa">42</span><span class="token plain"> root root </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> Jun </span><span class="token number" style="color:#36acaa">25</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">16</span><span class="token plain">:21 kubepods-besteffort.slice</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">drwxr-xr-x  </span><span class="token number" style="color:#36acaa">8</span><span class="token plain"> root root </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> Jun </span><span class="token number" style="color:#36acaa">25</span><span class="token plain"> 04:49 kubepods-burstable.slice</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 结合刚才的代码片段，也可以想到原生 Cgroup FS 的目录和 systemd 的应该是差不多的层级</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 现在直接用 find 命令查看 pids 控制器下面的 cgroup 设置</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">find</span><span class="token plain"> /sys/fs/cgroup/pids/kubepods.slice </span><span class="token parameter variable" style="color:#36acaa">-type</span><span class="token plain"> f </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">grep</span><span class="token plain"> pod2ac1e32c</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 能发现 pids.current 和 pids.max 两个 cgroup 的配置</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># pids.current 表示当前 pod 里面的进程（Task）数量</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/sys/fs/cgroup/pids/kubepods.slice/kubepods-besteffort.slice/kubepods-besteffort-pod2ac1e32c_d8d6_4533_8eab_d04d60465065.slice/pids.current</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># pids.max 则表示 pod 里面能运行的进程（Task）上限</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/sys/fs/cgroup/pids/kubepods.slice/kubepods-besteffort.slice/kubepods-besteffort-pod2ac1e32c_d8d6_4533_8eab_d04d60465065.slice/pids.max</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 查看 pod pids.max 设置，结果为 1024</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">cat</span><span class="token plain"> /sys/fs/cgroup/pids/kubepods.slice/kubepods-besteffort.slice/kubepods-besteffort-pod2ac1e32c_d8d6_4533_8eab_d04d60465065.slice/pids.max</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">1024</span><span class="token plain"> </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>另外这篇内核文档 <a href="https://www.kernel.org/doc/Documentation/cgroup-v1/pids.txt" target="_blank" rel="noopener noreferrer">Process Number Controller</a> 对 cgroup pids 控制器的使用进行了介绍，可以了解下。</p>]]></content>
        <author>
            <name>Zexi Li</name>
            <uri>https://github.com/zexi</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用Linux vfio将Nvidia GPU透传给QEMU虚拟机]]></title>
        <id>https://www.cloudpods.org/en/blog/nvidia-gpu-passthrough-record</id>
        <link href="https://www.cloudpods.org/en/blog/nvidia-gpu-passthrough-record"/>
        <updated>2021-06-07T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Linux 上虚拟机 GPU 透传需要使用 vfio 的方式。主要是因为在 vfio 方式下对虚拟设备的权限和 DMA 隔离上做的更好。但是这么做也有个缺点，这个物理设备在主机和其他虚拟机都不能使用了。]]></summary>
        <content type="html"><![CDATA[<p>Linux 上虚拟机 GPU 透传需要使用 vfio 的方式。主要是因为在 vfio 方式下对虚拟设备的权限和 DMA 隔离上做的更好。但是这么做也有个缺点，这个物理设备在主机和其他虚拟机都不能使用了。</p>
<p>qemu 直接使用物理设备本身命令行是很简单的，关键在于事先在主机上对系统、内核和物理设备的一些配置。</p>
<p>单纯从 qemu 的命令行来看，其实和普通虚拟机启动就差了最后那个 <code>-device</code> 的选项。这个选项也比较容易理解，就是把主机上的设备 0000:00:01.0 传给了虚拟机使用。</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ qemu-system-x86_64 </span><span class="token parameter variable" style="color:#36acaa">-m</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">4096</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-smp</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">4</span><span class="token plain"> --enable-kvm </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token parameter variable" style="color:#36acaa">-drive</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">file</span><span class="token operator" style="color:#393A34">=~</span><span class="token plain">/guest/fedora.img </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token parameter variable" style="color:#36acaa">-device</span><span class="token plain"> vfio-pci,host</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">0000:00:01.0</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="系统及硬件准备">系统及硬件准备<a class="hash-link" aria-label="Direct link to 系统及硬件准备" title="Direct link to 系统及硬件准备" href="https://www.cloudpods.org/en/blog/nvidia-gpu-passthrough-record#%E7%B3%BB%E7%BB%9F%E5%8F%8A%E7%A1%AC%E4%BB%B6%E5%87%86%E5%A4%87">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="bios中打开iommu">BIOS中打开IOMMU<a class="hash-link" aria-label="Direct link to BIOS中打开IOMMU" title="Direct link to BIOS中打开IOMMU" href="https://www.cloudpods.org/en/blog/nvidia-gpu-passthrough-record#bios%E4%B8%AD%E6%89%93%E5%BC%80iommu">​</a></h3>
<p>设备直通在 x86 平台上需要打开 iommu 功能。这是 Intel 虚拟技术 VT-d(Virtualization Technology for Device IO) 中的一个部分。有时候这部分的功能没有被打开。</p>
<p>打开的方式在 BIOS 设置中 Security-&gt;Virtualization-&gt;VT-d 这个位置。当然不同的 BIOS 位置可能会略有不同。记得在使用直通设备前要将这个选项打开。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="内核配置勾选iommu">内核配置勾选IOMMU<a class="hash-link" aria-label="Direct link to 内核配置勾选IOMMU" title="Direct link to 内核配置勾选IOMMU" href="https://www.cloudpods.org/en/blog/nvidia-gpu-passthrough-record#%E5%86%85%E6%A0%B8%E9%85%8D%E7%BD%AE%E5%8B%BE%E9%80%89iommu">​</a></h3>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">INTEL_IOMMU</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│ Location: │</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│ -</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> Device Drivers │</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│ </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> -</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> IOMMU Hardware Support </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">IOMMU_SUPPORT </span><span class="token punctuation" style="color:#393A34">[</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">y</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="内核启动参数enable-iommu">内核启动参数enable IOMMU<a class="hash-link" aria-label="Direct link to 内核启动参数enable IOMMU" title="Direct link to 内核启动参数enable IOMMU" href="https://www.cloudpods.org/en/blog/nvidia-gpu-passthrough-record#%E5%86%85%E6%A0%B8%E5%90%AF%E5%8A%A8%E5%8F%82%E6%95%B0enable-iommu">​</a></h3>
<p>BIOS 中打开，内核编译选项勾选还不够。还需要在引导程序中添加上内核启动参数</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># 对应编辑 /etc/default/grub, 设置 GRUB_CMDLINE_LINUX=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">cat</span><span class="token plain"> /etc/default/grub</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#36acaa">GRUB_CMDLINE_LINUX</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"intel_iommu=on iommu=pt vfio_iommu_type1.allow_unsafe_interrupts=1 rdblacklist=nouveau nouveau.modeset=0"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 重新生成 grub 引导配置文件</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ grub2-mkconfig </span><span class="token parameter variable" style="color:#36acaa">-o</span><span class="token plain"> /boot/grub2/grub.cfg</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 将vfio相关 module 设置为开机load</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">cat</span><span class="token plain"> /etc/modules-load.d/vfio.conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">vfio</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">vfio_iommu_type1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">vfio_pci</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">vfio_virqfd</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><a href="https://wiki.archlinux.org/index.php/PCI_passthrough_via_OVMF#Setting_up_IOMMU" target="_blank" rel="noopener noreferrer">Setting up IOMMU</a>
<a href="https://wiki.archlinux.org/index.php/Kernel_parameters" target="_blank" rel="noopener noreferrer">Kernel parameters</a></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="找到-nvidia-gpu-busid">找到 nvidia GPU BusID<a class="hash-link" aria-label="Direct link to 找到 nvidia GPU BusID" title="Direct link to 找到 nvidia GPU BusID" href="https://www.cloudpods.org/en/blog/nvidia-gpu-passthrough-record#%E6%89%BE%E5%88%B0-nvidia-gpu-busid">​</a></h3>
<p>record PCI addresses and hardware IDs of the GPU</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ lspci </span><span class="token parameter variable" style="color:#36acaa">-k</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">grep</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-i</span><span class="token plain"> nvidia </span><span class="token parameter variable" style="color:#36acaa">-A</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token plain">                   </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">41</span><span class="token plain">:00.0 VGA compatible controller: NVIDIA Corporation GP107 </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">GeForce GTX </span><span class="token number" style="color:#36acaa">1050</span><span class="token plain"> Ti</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">rev a1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Subsystem: Device 1b4c:11bf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Kernel driver </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> use: vfio-pci</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Kernel modules: nouveau</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">41</span><span class="token plain">:00.1 Audio device: NVIDIA Corporation GP107GL High Definition Audio Controller </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">rev a1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Subsystem: Device 1b4c:11bf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Kernel driver </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> use: snd_hda_intel</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Kernel modules: snd_hda_intel</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># pci address =&gt; 41:00.0,41:00.1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># device id =&gt; 1b4c:11bf</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 这里找到了两张 nvidia 卡，它们的 device id 都是 1b4c:11bf, 一张是 Audio device</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 这样是不能 passthrough 进去的，因为:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># vfio-pci use your vendor and device id pair to identify which device they need to bind to at boot,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># if you have two GPUs sharing such an ID pair you will not be able to get your passthough driver to bind with just one of them</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 使用下面的脚本解决这种情况：</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">cat</span><span class="token plain"> /usr/bin/vfio-pci-override.sh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#!/bin/sh</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token for-or-select variable" style="color:#36acaa">i</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> </span><span class="token variable" style="color:#36acaa">$(</span><span class="token variable function" style="color:#d73a49">find</span><span class="token variable" style="color:#36acaa"> /sys/devices/pci* </span><span class="token variable parameter variable" style="color:#36acaa">-name</span><span class="token variable" style="color:#36acaa"> boot_vga</span><span class="token variable" style="color:#36acaa">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">do</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> </span><span class="token variable" style="color:#36acaa">$(</span><span class="token variable function" style="color:#d73a49">cat</span><span class="token variable" style="color:#36acaa"> </span><span class="token variable string" style="color:#e3116c">"</span><span class="token variable string variable" style="color:#36acaa">$i</span><span class="token variable string" style="color:#e3116c">"</span><span class="token variable" style="color:#36acaa">)</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-eq</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">then</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token assign-left variable" style="color:#36acaa">GPU</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">${i</span><span class="token string variable operator" style="color:#393A34">%</span><span class="token string variable operator" style="color:#393A34">/</span><span class="token string variable" style="color:#36acaa">boot_vga}</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token assign-left variable" style="color:#36acaa">AUDIO</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">$(</span><span class="token string variable builtin class-name" style="color:#36acaa">echo</span><span class="token string variable" style="color:#36acaa"> </span><span class="token string variable string" style="color:#e3116c">"</span><span class="token string variable string variable" style="color:#36acaa">$GPU</span><span class="token string variable string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa"> </span><span class="token string variable operator" style="color:#393A34">|</span><span class="token string variable" style="color:#36acaa"> </span><span class="token string variable function" style="color:#d73a49">sed</span><span class="token string variable" style="color:#36acaa"> </span><span class="token string variable parameter variable" style="color:#36acaa">-e</span><span class="token string variable" style="color:#36acaa"> </span><span class="token string variable string" style="color:#e3116c">"s/0$/1/"</span><span class="token string variable" style="color:#36acaa">)</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin class-name">echo</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"vfio-pci"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">$GPU</span><span class="token string" style="color:#e3116c">/driver_override"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-d</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">$AUDIO</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">then</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token builtin class-name">echo</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"vfio-pci"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">$AUDIO</span><span class="token string" style="color:#e3116c">/driver_override"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">fi</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">fi</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">done</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">modprobe </span><span class="token parameter variable" style="color:#36acaa">-i</span><span class="token plain"> vfio-pci</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 把脚本传入 /etc/modprobe.d/vfio.conf</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">cat</span><span class="token plain"> /etc/modprobe.d/vfio.conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">install</span><span class="token plain"> vfio-pci /usr/bin/vfio-pci-override.sh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">options vfio-pci </span><span class="token assign-left variable" style="color:#36acaa">ids</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">10de:1c82 </span><span class="token assign-left variable" style="color:#36acaa">disable_vga</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="使用-vfio-管理-gpu">使用 vfio 管理 GPU<a class="hash-link" aria-label="Direct link to 使用 vfio 管理 GPU" title="Direct link to 使用 vfio 管理 GPU" href="https://www.cloudpods.org/en/blog/nvidia-gpu-passthrough-record#%E4%BD%BF%E7%94%A8-vfio-%E7%AE%A1%E7%90%86-gpu">​</a></h3>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># /etc/modprobe.d/vfio.conf, ids 为 lspci 找到的 hardware id, 多个设备的话用','分割</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">cat</span><span class="token plain"> /etc/modprobe.d/vfio.conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">options vfio-pci </span><span class="token assign-left variable" style="color:#36acaa">ids</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">10de:134d </span><span class="token assign-left variable" style="color:#36acaa">disable_vga</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 禁用NVIDIA nouveau 开源驱动, /etc/modprobe.d/blacklist.conf</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">cat</span><span class="token plain"> /etc/modprobe.d/blacklist.conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">blacklist nouveau</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># kvm 模块配置, /etc/modprobe.d/kvm.conf</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">cat</span><span class="token plain"> /etc/modprobe.d/kvm.conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">options kvm </span><span class="token assign-left variable" style="color:#36acaa">ignore_msrs</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>重启系统，启动完成后查看当前的 nvidia GPU 是否被 vfio-pci 模块使用, 确认IOMMU功能确实打开。</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">dmesg</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">grep</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-e</span><span class="token plain"> DMAR </span><span class="token parameter variable" style="color:#36acaa">-e</span><span class="token plain"> IOMMU </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">grep</span><span class="token plain"> enabled</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 如果能搜索到</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">DMAR: IOMMU enabled</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 表示上述配置成功。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 查看 GPU 是否被 vfio-pci 使用</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 另外注意检查看看 41:00.1 Audio device 是否也被 vfio-pci 使用</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ lspci </span><span class="token parameter variable" style="color:#36acaa">-k</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">grep</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-i</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-e</span><span class="token plain"> nvidia </span><span class="token parameter variable" style="color:#36acaa">-A</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">41</span><span class="token plain">:00.0 VGA compatible controller: NVIDIA Corporation GP107 </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">GeForce GTX </span><span class="token number" style="color:#36acaa">1050</span><span class="token plain"> Ti</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">rev a1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Subsystem: Device 1b4c:11bf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Kernel driver </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> use: vfio-pci </span><span class="token comment" style="color:#999988;font-style:italic"># GTX 1050 Ti GPU 被 vfio-pci 使用</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Kernel modules: nouveau</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">41</span><span class="token plain">:00.1 Audio device: NVIDIA Corporation GP107GL High Definition Audio Controller </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">rev a1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Subsystem: Device 1b4c:11bf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Kernel driver </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> use: vfio-pci </span><span class="token comment" style="color:#999988;font-style:italic"># 发现 Audio device 也被 vfio-pci 使用了</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Kernel modules: snd_hda_intel</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># list GPU IOMMU group</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">find</span><span class="token plain"> /sys/kernel/iommu_groups/ </span><span class="token parameter variable" style="color:#36acaa">-type</span><span class="token plain"> l </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">grep</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">41</span><span class="token plain">:00</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/sys/kernel/iommu_groups/27/devices/0000:41:00.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/sys/kernel/iommu_groups/27/devices/0000:41:00.1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 找到IOMMU Group 管理的 PCI 设备</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#!/bin/bash</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">shopt</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-s</span><span class="token plain"> nullglob</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token for-or-select variable" style="color:#36acaa">d</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> /sys/kernel/iommu_groups/*/devices/*</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">do</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token assign-left variable" style="color:#36acaa">n</span><span class="token operator" style="color:#393A34">=</span><span class="token variable" style="color:#36acaa">${d</span><span class="token variable operator" style="color:#393A34">#</span><span class="token variable" style="color:#36acaa">*</span><span class="token variable operator" style="color:#393A34">/</span><span class="token variable" style="color:#36acaa">iommu_groups</span><span class="token variable operator" style="color:#393A34">/</span><span class="token variable" style="color:#36acaa">*}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">n</span><span class="token operator" style="color:#393A34">=</span><span class="token variable" style="color:#36acaa">${n</span><span class="token variable operator" style="color:#393A34">%%</span><span class="token variable operator" style="color:#393A34">/</span><span class="token variable" style="color:#36acaa">*}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token builtin class-name">printf</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'IOMMU Group %s '</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">$n</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  lspci </span><span class="token parameter variable" style="color:#36acaa">-nns</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">${d</span><span class="token string variable operator" style="color:#393A34">##</span><span class="token string variable" style="color:#36acaa">*</span><span class="token string variable operator" style="color:#393A34">/</span><span class="token string variable" style="color:#36acaa">}</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">done</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="使用-qemu-透传-nvidia-gpu">使用 qemu 透传 nvidia GPU<a class="hash-link" aria-label="Direct link to 使用 qemu 透传 nvidia GPU" title="Direct link to 使用 qemu 透传 nvidia GPU" href="https://www.cloudpods.org/en/blog/nvidia-gpu-passthrough-record#%E4%BD%BF%E7%94%A8-qemu-%E9%80%8F%E4%BC%A0-nvidia-gpu">​</a></h3>
<p>准备好centos7镜像，然后在虚拟机里面安装 nvidia 官方闭源驱动和 cuda SDK</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># 我从服务器上拷贝过来的是 vmdk 的镜像，先把它转换成 qcow2 的格式</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ /usr/local/qemu-2.9.0/bin/qemu-img convert </span><span class="token parameter variable" style="color:#36acaa">-f</span><span class="token plain"> vmdk </span><span class="token parameter variable" style="color:#36acaa">-O</span><span class="token plain"> qcow2 centos-7.3.1611-20180104.vmdk centos-7.3.1611-20180104.qcow2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 使用 qemu 启动，注意-cpu 需要 kvm=off 参数</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># kvm=off will hide the kvm hypervisor signature, this is required for NVIDIA cards</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># since its driver will refuse to work on an hypervisor and result in Code 43 on windows</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">cat</span><span class="token plain"> startvm.sh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#!/bin/sh</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/usr/local/qemu-2.9.0/bin/qemu-system-x86_64 -enable-kvm </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token parameter variable" style="color:#36acaa">-m</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">4096</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-cpu</span><span class="token plain"> host,kvm</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">off </span><span class="token parameter variable" style="color:#36acaa">-smp</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">4</span><span class="token plain">,sockets</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">,cores</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">4</span><span class="token plain">,threads</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token parameter variable" style="color:#36acaa">-drive</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">file</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">./centos-7.3.1611-20180104.qcow2 </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token parameter variable" style="color:#36acaa">-device</span><span class="token plain"> vfio-pci,host</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">41</span><span class="token plain">:00.0,multifunction</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">on,addr</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">0x16 </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token parameter variable" style="color:#36acaa">-device</span><span class="token plain"> vfio-pci,host</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">41</span><span class="token plain">:00.1 </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token parameter variable" style="color:#36acaa">-net</span><span class="token plain"> nic,model</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">e1000 </span><span class="token parameter variable" style="color:#36acaa">-net</span><span class="token plain"> user,hostfwd</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">tcp::5022-:22 </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token parameter variable" style="color:#36acaa">-vnc</span><span class="token plain"> :1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 这台虚拟机开了vnc和ssh 端口转发，可以使用vnc或者ssh访问</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 从host进入虚拟机</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">ssh</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">127.0</span><span class="token plain">.0.1 </span><span class="token parameter variable" style="color:#36acaa">-p</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">5022</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 查看虚拟机透传进来的显卡</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ lspci </span><span class="token parameter variable" style="color:#36acaa">-k</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">grep</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-i</span><span class="token plain"> nvidia </span><span class="token parameter variable" style="color:#36acaa">-A</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">00:04.0 Audio device: NVIDIA Corporation Device 0fb9 </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">rev a1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Subsystem: Device 1b4c:11bf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Kernel driver </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> use: snd_hda_intel</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Kernel modules: snd_hda_intel</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">00:16.0 VGA compatible controller: NVIDIA Corporation GP107 </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">rev a1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Subsystem: Device 1b4c:11bf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Kernel modules: nouveau</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="安装nvidia-驱动和-cuda">安装nvidia 驱动和 Cuda<a class="hash-link" aria-label="Direct link to 安装nvidia 驱动和 Cuda" title="Direct link to 安装nvidia 驱动和 Cuda" href="https://www.cloudpods.org/en/blog/nvidia-gpu-passthrough-record#%E5%AE%89%E8%A3%85nvidia-%E9%A9%B1%E5%8A%A8%E5%92%8C-cuda">​</a></h2>
<p>nvidia 驱动需要从官方下载，如果先安装 cuda 的话会一同安装 nvidia 驱动。
接下来采用虚拟机先安装驱动再安装 cuda 的步骤。</p>
<p>参考：
<a href="http://www.advancedclustering.com/act_kb/installing-nvidia-drivers-rhel-centos-7/" target="_blank" rel="noopener noreferrer">installing-nvidia-drivers-centos-7</a>
<a href="https://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html" target="_blank" rel="noopener noreferrer">NVIDIA CUDA GETTINGS STARTED GUIDE FOR LINUX</a></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="安装-nvidia-驱动">安装 nvidia 驱动<a class="hash-link" aria-label="Direct link to 安装 nvidia 驱动" title="Direct link to 安装 nvidia 驱动" href="https://www.cloudpods.org/en/blog/nvidia-gpu-passthrough-record#%E5%AE%89%E8%A3%85-nvidia-%E9%A9%B1%E5%8A%A8">​</a></h3>
<p>下载地址：<a href="http://www.nvidia.com/object/unix.html" target="_blank" rel="noopener noreferrer">http://www.nvidia.com/object/unix.html</a></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># update 后如果更新内核，需要重启</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ yum </span><span class="token parameter variable" style="color:#36acaa">-y</span><span class="token plain"> update</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 安装 gcc、make、glibc等工具和库</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ yum </span><span class="token parameter variable" style="color:#36acaa">-y</span><span class="token plain"> groupinstall </span><span class="token string" style="color:#e3116c">"Development Tools"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ yum </span><span class="token parameter variable" style="color:#36acaa">-y</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"> kernel-devel</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Download the latest NVIDIA driver for unix.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">wget</span><span class="token plain"> http://us.download.nvidia.com/XFree86/Linux-x86_64/390.42/NVIDIA-Linux-x86_64-390.42.run</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ yum </span><span class="token parameter variable" style="color:#36acaa">-y</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"> epel-release</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ yum </span><span class="token parameter variable" style="color:#36acaa">-y</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"> dkms</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Edit /etc/default/grub. Append the following  to “GRUB_CMDLINE_LINUX”</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#36acaa">rd.driver.blacklist</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">nouveau </span><span class="token assign-left variable" style="color:#36acaa">nouveau.modeset</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Generate a new grub configuration to include the above changes.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ grub2-mkconfig </span><span class="token parameter variable" style="color:#36acaa">-o</span><span class="token plain"> /boot/grub2/grub.cfg</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Edit/create /etc/modprobe.d/blacklist.conf and append:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">blacklist nouveau</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Backup your old initramfs and then build a new one</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">mv</span><span class="token plain"> /boot/initramfs-</span><span class="token variable" style="color:#36acaa">$(</span><span class="token variable function" style="color:#d73a49">uname</span><span class="token variable" style="color:#36acaa"> </span><span class="token variable parameter variable" style="color:#36acaa">-r</span><span class="token variable" style="color:#36acaa">)</span><span class="token plain">.img /boot/initramfs-</span><span class="token variable" style="color:#36acaa">$(</span><span class="token variable function" style="color:#d73a49">uname</span><span class="token variable" style="color:#36acaa"> </span><span class="token variable parameter variable" style="color:#36acaa">-r</span><span class="token variable" style="color:#36acaa">)</span><span class="token plain">-nouveau.img</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ dracut /boot/initramfs-</span><span class="token variable" style="color:#36acaa">$(</span><span class="token variable function" style="color:#d73a49">uname</span><span class="token variable" style="color:#36acaa"> </span><span class="token variable parameter variable" style="color:#36acaa">-r</span><span class="token variable" style="color:#36acaa">)</span><span class="token plain">.img </span><span class="token variable" style="color:#36acaa">$(</span><span class="token variable function" style="color:#d73a49">uname</span><span class="token variable" style="color:#36acaa"> </span><span class="token variable parameter variable" style="color:#36acaa">-r</span><span class="token variable" style="color:#36acaa">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 重启again</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Run the NVIDIA driver installer and enter yes to all options.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">sh</span><span class="token plain"> NVIDIA-Linux-x86_64-*.run</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 装好后再一次重启，lspci -k 看下gpu使用的驱动是否是nvidia</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ lspci </span><span class="token parameter variable" style="color:#36acaa">-k</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">grep</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-i</span><span class="token plain"> nvidia </span><span class="token parameter variable" style="color:#36acaa">-A</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">00:04.0 Audio device: NVIDIA Corporation GP107GL High Definition Audio Controller </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">rev a1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">00:16.0 VGA compatible controller: NVIDIA Corporation GP107 </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">GeForce GTX </span><span class="token number" style="color:#36acaa">1050</span><span class="token plain"> Ti</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">rev a1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Kernel driver </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> use: nvidia </span><span class="token comment" style="color:#999988;font-style:italic"># 发现已经使用nvidia驱动</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Kernel modules: nouveau, nvidia_drm, nvidia</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 执行 nvidia-smi 看下输出和温度</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ nvidia-smi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Thu Mar </span><span class="token number" style="color:#36acaa">15</span><span class="token plain"> 01:31:09 </span><span class="token number" style="color:#36acaa">2018</span><span class="token plain">      </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+-----------------------------------------------------------------------------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> NVIDIA-SMI </span><span class="token number" style="color:#36acaa">390.42</span><span class="token plain">                 Driver Version: </span><span class="token number" style="color:#36acaa">390.42</span><span class="token plain">                    </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">-------------------------------+----------------------+----------------------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> GPU  Name        Persistence-M</span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> Bus-Id        Disp.A </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> Volatile Uncorr. ECC </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> Fan  Temp  Perf  Pwr:Usage/Cap</span><span class="token operator" style="color:#393A34">|</span><span class="token plain">         Memory-Usage </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> GPU-Util  Compute M. </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">+=</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">+=</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">   </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">  GeForce GTX </span><span class="token number" style="color:#36acaa">105</span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.  Off  </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> 00000000:00:16.0 Off </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">                  N/A </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">40</span><span class="token plain">%   32C    P0    N/A / 100W </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">      0MiB /  4040MiB </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">      </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">%      Default </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+-------------------------------+----------------------+----------------------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+-----------------------------------------------------------------------------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> Processes:                                                       GPU Memory </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">  GPU       PID   Type   Process name                             Usage      </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">  No running processes found                                                 </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+-----------------------------------------------------------------------------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ nvidia-smi </span><span class="token parameter variable" style="color:#36acaa">-q</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-d</span><span class="token plain"> TEMPERATURE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token plain">NVSMI </span><span class="token assign-left variable" style="color:#36acaa">LOG</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Timestamp                           </span><span class="token builtin class-name">:</span><span class="token plain"> Thu Mar </span><span class="token number" style="color:#36acaa">15</span><span class="token plain"> 01:32:42 </span><span class="token number" style="color:#36acaa">2018</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Driver Version                      </span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">390.42</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Attached GPUs                       </span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">GPU 00000000:00:16.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Temperature</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        GPU Current Temp            </span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">32</span><span class="token plain"> C</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        GPU Shutdown Temp           </span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">102</span><span class="token plain"> C</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        GPU Slowdown Temp           </span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">99</span><span class="token plain"> C</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        GPU Max Operating Temp      </span><span class="token builtin class-name">:</span><span class="token plain"> N/A</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Memory Current Temp         </span><span class="token builtin class-name">:</span><span class="token plain"> N/A</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Memory Max Operating Temp   </span><span class="token builtin class-name">:</span><span class="token plain"> N/A</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="安装-cuda">安装 cuda<a class="hash-link" aria-label="Direct link to 安装 cuda" title="Direct link to 安装 cuda" href="https://www.cloudpods.org/en/blog/nvidia-gpu-passthrough-record#%E5%AE%89%E8%A3%85-cuda">​</a></h3>
<p>下载地址： <a href="https://developer.nvidia.com/cuda-downloads" target="_blank" rel="noopener noreferrer">https://developer.nvidia.com/cuda-downloads</a>
这里选择 runfile，以后为了方便也可以选择 rpm(network)的方式，会自动帮我们安装 nvidia 驱动</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">wget</span><span class="token plain"> https://developer.nvidia.com/compute/cuda/9.1/Prod/local_installers/cuda_9.1.85_387.26_linux</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Say no to installing the NVIDIA driver.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># The standalone driver you already installed is typically newer than what is packaged with CUDA.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Use the default option for all other choices.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">sh</span><span class="token plain"> cuda_*.run</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 添加 CUDA 相关的环境变量</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token assign-left variable environment constant" style="color:#36acaa">PATH</span><span class="token operator" style="color:#393A34">=</span><span class="token environment constant" style="color:#36acaa">$PATH</span><span class="token plain">:/usr/local/cuda/bin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">LD_LIBRARY_PATH</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">/usr/local/cuda/lib64:</span><span class="token variable" style="color:#36acaa">$LD_LIBRARY_PATH</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># make samples</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token builtin class-name">cd</span><span class="token plain"> ~/NVIDIA_CUDA-9.1_Samples</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">make</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-j</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">4</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token builtin class-name">cd</span><span class="token plain"> bin/x86_64/linux/release</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ ./deviceQuery </span><span class="token comment" style="color:#999988;font-style:italic"># 查询gpu信息</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./deviceQuery Starting</span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> CUDA Device Query </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Runtime API</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> version </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">CUDART static linking</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Detected </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> CUDA Capable device</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">s</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Device </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">: </span><span class="token string" style="color:#e3116c">"GeForce GTX 1050 Ti"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  CUDA Driver Version / Runtime Version          </span><span class="token number" style="color:#36acaa">9.1</span><span class="token plain"> / </span><span class="token number" style="color:#36acaa">9.1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  CUDA Capability Major/Minor version number:    </span><span class="token number" style="color:#36acaa">6.1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Total amount of global memory:                 </span><span class="token number" style="color:#36acaa">4040</span><span class="token plain"> MBytes </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">4236312576</span><span class="token plain"> bytes</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">6</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> Multiprocessors, </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">128</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> CUDA Cores/MP:     </span><span class="token number" style="color:#36acaa">768</span><span class="token plain"> CUDA Cores</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  GPU Max Clock rate:                            </span><span class="token number" style="color:#36acaa">1481</span><span class="token plain"> MHz </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1.48</span><span class="token plain"> GHz</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Memory Clock rate:                             </span><span class="token number" style="color:#36acaa">3504</span><span class="token plain"> Mhz</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Memory Bus Width:                              </span><span class="token number" style="color:#36acaa">128</span><span class="token plain">-bit</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  L2 Cache Size:                                 </span><span class="token number" style="color:#36acaa">1048576</span><span class="token plain"> bytes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ ./bandwidtTest </span><span class="token comment" style="color:#999988;font-style:italic"># 使用 cuda 测试gpu bandwidth</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Running on</span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> Device </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">: GeForce GTX </span><span class="token number" style="color:#36acaa">1050</span><span class="token plain"> Ti</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> Quick Mode</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> Host to Device Bandwidth, </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> Device</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">s</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> PINNED Memory Transfers</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   Transfer Size </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Bytes</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">    Bandwidth</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">MB/s</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token number" style="color:#36acaa">33554432</span><span class="token plain">            </span><span class="token number" style="color:#36acaa">9719.0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> Device to Host Bandwidth, </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> Device</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">s</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> PINNED Memory Transfers</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   Transfer Size </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Bytes</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">    Bandwidth</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">MB/s</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token number" style="color:#36acaa">33554432</span><span class="token plain">            </span><span class="token number" style="color:#36acaa">9215.8</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> Device to Device Bandwidth, </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> Device</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">s</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> PINNED Memory Transfers</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   Transfer Size </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Bytes</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">    Bandwidth</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">MB/s</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token number" style="color:#36acaa">33554432</span><span class="token plain">            </span><span class="token number" style="color:#36acaa">95525.1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Result </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> PASS</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">NOTE: The CUDA Samples are not meant </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> performance measurements. Results may vary when GPU Boost is enabled.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>Zexi Li</name>
            <uri>https://github.com/zexi</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Cloudpods 3.7版本新功能介绍]]></title>
        <id>https://www.cloudpods.org/en/blog/cloudpods-3.7-new-feature-introduction</id>
        <link href="https://www.cloudpods.org/en/blog/cloudpods-3.7-new-feature-introduction"/>
        <updated>2021-05-31T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[作者: 高现起]]></summary>
        <content type="html"><![CDATA[<p><strong>作者:</strong> 高现起</p>
<p>今天围绕以下目录展开要讲的内容：</p>
<ul>
<li>产品简介</li>
<li>3.7版本新功能介绍</li>
<li>功能规划</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="一产品简介">一、产品简介<a class="hash-link" aria-label="Direct link to 一、产品简介" title="Direct link to 一、产品简介" href="https://www.cloudpods.org/en/blog/cloudpods-3.7-new-feature-introduction#%E4%B8%80%E4%BA%A7%E5%93%81%E7%AE%80%E4%BB%8B">​</a></h2>
<p>目前，企业的IT资源属于无处不在的状态，根据 Flexera 2020 云状态（原 RightScale 云状态报告）报告，93%的企业实施了多云战略。虽然这一调查的依据是全球750家企业的云决策者，但是从国内的实际情况来说，数字可能没有那么大，趋势还是有的，就是多云已经是更多企业的选择了。</p>
<p>多云环境，我们又统称为异构IT基础设施，那么这种异构IT基础设施在给客户带来更优性能更优成本的同时，也会带来一些新的问题，例如我下边列举的5种不同角色的用户所遇到的问题：</p>
<ul>
<li>运维工程师/开发工程师-如何统一管理所有的云计算资源？</li>
<li>财务专员-如何获取统一易读的公有云账单？</li>
<li>运维主管/开发主管-如何及时获取资源整体的使用情况？</li>
<li>财务主管-如何及时获取IT资源成本的使用结构？</li>
<li>CTO/CIO-如何提高IT资源的ROI（投资回报率）？</li>
</ul>
<p>我们早在2017年就关注到多云带来客户的问题，开始做云联壹云这款产品，希望能够帮助企业很好的解决这些问题。</p>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/01-a96592b11b32ad0bd8ca8cb852d02f14.png" width="867" height="382" class="img_ev3q"></p>
<p>云联壹云是一站式管理云计算资源的解决方案，希望帮助客户在一个地方管理本地IDC、私有云、公有云等IT资源，整体提高企业IT基础设施的管理效率。</p>
<p>从产品架构图上，我们可以看出，底层是一些异构资源，上层是一些应用或服务，云联壹云处于承上启下的作用，向下屏蔽异构的差异，向上提供一致的资源管理能力。</p>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/02-bff3e3b9ca336f36812ffe35864e7a63.png" width="812" height="427" class="img_ev3q"></p>
<p>以上是我们最新版本也就是3.7版本的功能概览。</p>
<p>最底层是异构资源，中层就是我们云管理平台的功能概览，上层应用和服务。云管理平台的底层是多云的适配层，往上是基础的资源管理，包括计算、存储、网络、PaaS服务等，再往上是针对企业客户做的三大块的功能，依次是权限管理、统一监控和报警、成本管理包括私有云的计量计费公有云的账单分析和成本优化等等，面向用户层，我们针对不同的用户有不同的用户界面，包括管理员的系统管理视图，租户的租户管理视图，普通用户的项目视图，针对运维人员的climc命令行工具，针对开发人员，我们也有丰富的REST API以及各个开发语言的SDK。</p>
<p>这款产品能够带给客户3种价值：</p>
<ul>
<li>省人省事-一站式采买、批量操作、一次配置，全网生效、统一获取易读账单</li>
<li>省钱-算好账、摊好钱、节成本</li>
<li>安全-统一认证、统一授权、免密登录</li>
</ul>
<p>总而言之，云联壹云希望帮助用户解决异构IT基础设施带来的问题，充分发挥异构IT基础设施的优势。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="二37版本新功能介绍">二、3.7版本新功能介绍<a class="hash-link" aria-label="Direct link to 二、3.7版本新功能介绍" title="Direct link to 二、3.7版本新功能介绍" href="https://www.cloudpods.org/en/blog/cloudpods-3.7-new-feature-introduction#%E4%BA%8C37%E7%89%88%E6%9C%AC%E6%96%B0%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D">​</a></h2>
<p>3.7版本增加了不下30多项功能或更新，由于时间关系，今天我主要给大家介绍这5个方面的功能：</p>
<ul>
<li>多云资源对接</li>
<li>多云账单管理</li>
<li>多云监控告警</li>
<li>多云权限管理</li>
<li>标签管理</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-多云资源对接">1. 多云资源对接<a class="hash-link" aria-label="Direct link to 1. 多云资源对接" title="Direct link to 1. 多云资源对接" href="https://www.cloudpods.org/en/blog/cloudpods-3.7-new-feature-introduction#1-%E5%A4%9A%E4%BA%91%E8%B5%84%E6%BA%90%E5%AF%B9%E6%8E%A5">​</a></h3>
<p>在3.7版本，我们不断围绕客户需求，支持更多公有云资源的纳管：</p>
<ul>
<li>AWS平台对接Redis</li>
<li>Azure平台对接RDS</li>
<li>阿里云和华为云NAS文件存储对接</li>
<li>移动云对接</li>
<li>阿里云、华为云NAT网关支持</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-多云账单管理">2. 多云账单管理<a class="hash-link" aria-label="Direct link to 2. 多云账单管理" title="Direct link to 2. 多云账单管理" href="https://www.cloudpods.org/en/blog/cloudpods-3.7-new-feature-introduction#2-%E5%A4%9A%E4%BA%91%E8%B4%A6%E5%8D%95%E7%AE%A1%E7%90%86">​</a></h3>
<p>2.1 支持AWS的预留实例分析，包括RI推荐及RI覆盖率，帮助客户用好RI，节约成本</p>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/03-28bb0c9569ccb19fa52552af9b77104a.png" width="918" height="215" class="img_ev3q"></p>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/04-75c971925144da2d8ff2656253770e26.png" width="828" height="317" class="img_ev3q"></p>
<p>2.2 支持价格对比功能，同配置全网比价，帮助客户发现便宜资源</p>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/05-c7453fb75e117fde92d8a48713f313c1.png" width="892" height="255" class="img_ev3q"></p>
<p>2.3 支持所有平台费用报告及定期发送</p>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/06-68d123e244defb999bfdc96683d0274c.png" width="879" height="458" class="img_ev3q"></p>
<p>2.4 支持预算管理功能，并且可以配置预算告警，防止费用超支</p>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/07-f189c7d0fca34f82220a1764404d6308.png" width="780" height="316" class="img_ev3q"></p>
<p>2.5 费用优化迭代，更多纬度节省费用，帮助用户发现更多可以优化成本的途径</p>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/08-2db6d2219821fa0fdcc3c44d96dfc9b1.png" width="795" height="249" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-多云监控告警">3. 多云监控告警<a class="hash-link" aria-label="Direct link to 3. 多云监控告警" title="Direct link to 3. 多云监控告警" href="https://www.cloudpods.org/en/blog/cloudpods-3.7-new-feature-introduction#3-%E5%A4%9A%E4%BA%91%E7%9B%91%E6%8E%A7%E5%91%8A%E8%AD%A6">​</a></h3>
<p>3.1 支持自定义监控面板，一次定义，随时查看</p>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/09-1fac754083ab7891c76c02e7f1a8e405.png" width="744" height="342" class="img_ev3q"></p>
<p>3.2 报警策略支持函数及静默期设置，有效避免毛刺、报警泛滥等问题</p>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/10-3633c580941c379a1a42f9212c8319c4.png" width="926" height="246" class="img_ev3q"></p>
<p>3.3 支持自动化安装监控插件，可显示内存使用率等更多监控指标</p>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/11-963d57d813f75349aa268fa0ce7b559b.png" width="798" height="467" class="img_ev3q"></p>
<p>3.4 大屏增加地图，可根据资源城市进行分布</p>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/12-6971f13a1067417c78ce0d88d91ee093.png" width="823" height="467" class="img_ev3q"></p>
<p>3.5 增加监控总览，可以查看告警情况及平台各纬度使用情况</p>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/13-6a6cc1f96af9b935bdf904a49cfe077f.png" width="772" height="497" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="4-多云权限管理">4. 多云权限管理<a class="hash-link" aria-label="Direct link to 4. 多云权限管理" title="Direct link to 4. 多云权限管理" href="https://www.cloudpods.org/en/blog/cloudpods-3.7-new-feature-introduction#4-%E5%A4%9A%E4%BA%91%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86">​</a></h3>
<ul>
<li>在一个地方创建及管理所有云平台的子账号，并分配权限</li>
<li>通过云管壹云控制台可一键跳转免密登录公有云控制台</li>
<li>员工离职，自动注销对应的公有云账号</li>
</ul>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/14-95e8decec9a00b8b37a383377ac012aa.png" width="623" height="359" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="5-标签管理">5. 标签管理<a class="hash-link" aria-label="Direct link to 5. 标签管理" title="Direct link to 5. 标签管理" href="https://www.cloudpods.org/en/blog/cloudpods-3.7-new-feature-introduction#5-%E6%A0%87%E7%AD%BE%E7%AE%A1%E7%90%86">​</a></h3>
<ul>
<li>标签支持CMP与公有云平台双向同步</li>
<li>标签搜索增强，支持特殊符号复杂搜索</li>
</ul>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/15-5c074395b31fa0d6a0ba7657dcfb6f93.png" width="597" height="456" class="img_ev3q"></p>
<p>除以上5大功能的更新外，我们其实还有很多细节更新，在这里就不在展开给大家介绍，感兴趣的同学可以看一下以下总结</p>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/16-40c26c30bff035096f252627fad4e379.png" width="901" height="488" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="三功能规划">三、功能规划<a class="hash-link" aria-label="Direct link to 三、功能规划" title="Direct link to 三、功能规划" href="https://www.cloudpods.org/en/blog/cloudpods-3.7-new-feature-introduction#%E4%B8%89%E5%8A%9F%E8%83%BD%E8%A7%84%E5%88%92">​</a></h2>
<p>我们近期的功能规划主要是以下6个方面</p>
<ul>
<li>京东云对接，我们有客户对京东云资源的纳管有需求</li>
<li>Azure RI&amp;CPP使用率、覆盖率以及推荐</li>
<li>产品内置负载均衡支持VPC网络（这个是我们私有云的功能）</li>
<li>公有云账单的二次定价，我们很多MSP厂商的需求</li>
<li>公有云WAF产品对接</li>
<li>监控报警的迭代，后期也会增加监控数据报表的功能</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="总结">总结<a class="hash-link" aria-label="Direct link to 总结" title="Direct link to 总结" href="https://www.cloudpods.org/en/blog/cloudpods-3.7-new-feature-introduction#%E6%80%BB%E7%BB%93">​</a></h2>
<p>好的，今天直播咱们就到这里，咱们简单的总结一下今天的内容：</p>
<p>产品简介，在多云趋势的背景下，云联壹云产品希望帮助用户解决异构资源管理问题，提升企业IT基础设施管理效率，以及云联壹云带给客户省人省事、省钱、安全三大产品价值；</p>
<p>3.7版本新功能介绍，主要给大家介绍了多云对接、多云账单管理、多云监控告警、多云权限管理以及标签管理5大模块的功能或更新；</p>
<p>功能规划，我们近期将会围绕京东云对接、AzureCPP、内置负载均衡支持VPC、公有云账单二次定价、公有云WAF对接、监控迭代5大方面展开产品的功能设计与实现。</p>
<p>感谢大家百忙之中参加我们的Meetup，下次直播再见。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Cloudpods负载均衡的功能介绍]]></title>
        <id>https://www.cloudpods.org/en/blog/cloudpods-lb-application-intro</id>
        <link href="https://www.cloudpods.org/en/blog/cloudpods-lb-application-intro"/>
        <updated>2021-05-31T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[作者: 周有松]]></summary>
        <content type="html"><![CDATA[<p><strong>作者:</strong> 周有松</p>
<p>今天的内容会从以下几个方面展开：</p>
<ul>
<li>负载均衡产品简介。主要介绍负载均衡作为一个云上产品，它的功能模型是怎样的，日常使用中会遇到的业务词汇</li>
<li>负载均衡的功能与典型应用场景。这部分主要结合业务词汇，对负载均衡服务中常见的一些功能选项进行介绍，并举例介绍一些典型的应用场景</li>
<li>最后，我们做一下总结，讨论一下负载均衡产品相比传统方式的优点</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="一产品简介">一、产品简介<a class="hash-link" aria-label="Direct link to 一、产品简介" title="Direct link to 一、产品简介" href="https://www.cloudpods.org/en/blog/cloudpods-lb-application-intro#%E4%B8%80%E4%BA%A7%E5%93%81%E7%AE%80%E4%BB%8B">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-以nginx为例">1. 以NGINX为例<a class="hash-link" aria-label="Direct link to 1. 以NGINX为例" title="Direct link to 1. 以NGINX为例" href="https://www.cloudpods.org/en/blog/cloudpods-lb-application-intro#1-%E4%BB%A5nginx%E4%B8%BA%E4%BE%8B">​</a></h3>
<p>提到负载均衡，我们以前一般先会想到NGINX，或者淘宝的分支Tengine。我们先来看看</p>
<ul>
<li>它是怎样工作的</li>
<li>它解决了什么样的问题</li>
<li>它适合什么样的应用场景</li>
</ul>
<p><img decoding="async" loading="lazy" alt="Nginx example" src="https://www.cloudpods.org/en/assets/images/01-e2999ff3e26df18372a5f00ab0304895.png" width="606" height="355" class="img_ev3q"></p>
<p>在加入了NGINX之后，客户端（Client IP）首先与NGINX建立连接（Virtual IP+Virtual Port），请求也先发给NGINX，再由NGINX从多个后端服务器中选择一台，建立连接后把请求转发给后端服务器（Real IP）。</p>
<p>NGINX作为网络转发节点，不参与后端服务的业务逻辑处理。而相比客户端直连后端，多个后端服务器可同时处理业务请求，应用的服务能力得到水平扩展。同时，转发节点上可以对后端做健康检查，自动屏蔽掉不健康的后端服务器，保障业务的高可用，使得单个后端服务器在故障、升级、过载时依然对用户连续可用。</p>
<p>因此，我们说水平扩展、高可用是负载均衡解决的最基本的两个问题。从另外一方面来说，使用负载均衡的业务，在架构设计上应该是能够水平扩展的。比如，一个应用的多个实例之间不需要通信，相互之间没有复杂的状态维护。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-业务词汇">2. 业务词汇<a class="hash-link" aria-label="Direct link to 2. 业务词汇" title="Direct link to 2. 业务词汇" href="https://www.cloudpods.org/en/blog/cloudpods-lb-application-intro#2-%E4%B8%9A%E5%8A%A1%E8%AF%8D%E6%B1%87">​</a></h3>
<p>在使用云上负载均衡的时候，不管哪个厂商的产品，我们会遇到一些常用的业务词汇。我们围绕一张图来简要介绍。</p>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/02-9b852ffbde75366a7c0d8fccbcf627aa.png" width="615" height="261" class="img_ev3q"></p>
<p>负载均衡实例，除了区域、可用区之外，每个实例至少有一个IP地址。同一个负载均衡实例下可以有多个监听，每个监听一般至少有协议、端口两个属性。后面还会介绍监听的其它属性，比如调度算法、健康检查、转发策略等。</p>
<p>实例和监听对应到NGINX上，其实是Virtual IP和Virtual Port的组合。每个监听有一个后端服务器组，组内可以有多个后端服务器，监听将来自客户端的请求转发给后端服务器（Real IP、Real Port）。</p>
<p>对于HTTPS协议的监听，我们还会遇到TLS证书的概念。</p>
<p>通常每个监听还可以绑定一个访问控制列表，用来设置黑名单、白名单，限定业务的服务范围。</p>
<p>将业务词汇放到转发模型上，我们可以得到这样一张图。在壹云的负载均衡实现中，转发节点使用HAProxy负责具体的流量转发。实例和监听的配置被转换为HAProxy的配置应用到转发节点上。HAProxy据此将流量转发到后端服务器组。</p>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/03-1-99edc5d46cc850363d4ecad956d06aa0.png" width="607" height="383" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="二功能与应用场景">二、功能与应用场景<a class="hash-link" aria-label="Direct link to 二、功能与应用场景" title="Direct link to 二、功能与应用场景" href="https://www.cloudpods.org/en/blog/cloudpods-lb-application-intro#%E4%BA%8C%E5%8A%9F%E8%83%BD%E4%B8%8E%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-监听协议">1. 监听协议<a class="hash-link" aria-label="Direct link to 1. 监听协议" title="Direct link to 1. 监听协议" href="https://www.cloudpods.org/en/blog/cloudpods-lb-application-intro#1-%E7%9B%91%E5%90%AC%E5%8D%8F%E8%AE%AE">​</a></h3>
<p>一般来说，负载均衡监听支持的传输层协议为TCP、UDP，应用层一般支持HTTP、HTTPS。其中对HTTP协议的支持一般包括HTTP/1.0，HTTP/1.1，HTTP/2，以及WS（WebSocket），WSS（WebSocket Secure）等。</p>
<p>除此之外，许多厂商的负载均衡产品也陆续开始了QUIC协议的支持。QUIC有时也被称作HTTP/3，它的传输层协议类型为UDP。壹云的负载均衡产品基于HAProxy，它将会随着HAProxy 2.5的发版实现对QUIC协议的支持。</p>
<p>同实例下的多个监听，传输层协议相同时，端口必须不能冲突。比如，同一实例下，无法TCP/80和HTTP/80的两个监听只能选其一。但是TCP/53和UDP/53的两个监听可以同时存在。</p>
<p>从开销来说，HTTPS因为涉及到TLS协商和传输加解密，开销最大。HTTP其次，相比TCP协议转发节点需要对传输的数据做内容解析。TCP作为有状态的连接，相比UDP开销又要大一些。</p>
<p>图中展示的是壹云控制台中负载均衡监听创建的第1步。其中，端口对所有协议类型都是必选的项。创建HTTPS监听时，要求必须关联相应的TLS证书。对于WS、WSS的支持是默认就有的。</p>
<p>主流的浏览器要求HTTP/2必须运行在加密信道上，一般来说，负载均衡产品对于HTTPS监听默认开启HTTP/2的支持。极个别情况下，某些应用的客户端遇到HTTP/2时会有兼容性问题，所以负载均衡产品通常也会提供开关，允许显式将HTTP/2支持关闭。</p>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/03-f611528c870ff76340c009d0a915059f.png" width="499" height="421" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-调度算法">2. 调度算法<a class="hash-link" aria-label="Direct link to 2. 调度算法" title="Direct link to 2. 调度算法" href="https://www.cloudpods.org/en/blog/cloudpods-lb-application-intro#2-%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95">​</a></h3>
<p>监听收到客户端的请求后，从后端服务器组中选出一个后端做转发。这个算法通常就叫“调度算法”。一般来说我们常用的有3种：</p>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/04-8ec52c8913245f20ed943cc039333bf3.png" width="269" height="200" class="img_ev3q"></p>
<ul>
<li>轮询，round robin。这种策略比较适用于短连接、短生命周期的业务，比如网页浏览。每打开一个网页，通常需要下载HTML、CSS、JS、字体等文档，每个请求大约秒级、毫秒级即可完成。这种场景下，轮询作为一种简单的算法，能够实现较好的均衡效果。</li>
<li>最小连接数，least connected。转发节点会记录它与每个监听的后端服务器的当前活跃的连接数，在转发请求时，从中选择一个活跃连接数最少的后端。这种算法较适合长连接、生命周期较长的业务，比如大文件上传下载、长时的交互会话如SSH等。</li>
<li>源一致性哈希。在这类算法中，转发节点通常会对请求来源标记一个身份，比如源IP地址、请求中的某个HTTP cookie值等。对于来自同一个标记的请求，将其转发到上次选择的后端服务器。这种算法较适合需要维护会话缓存、关联状态的业务。例如，某些业务后端收到请求后，需要从别处获取并缓存该请求相关的信息，比如订单详情、关联的用户详情等等，如果来自同一个用户的请求依然送到同一个后端，使得缓存使中率提高。这种对Locality的利用对应用的体验提升较好。</li>
</ul>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/05-4d003b8f391d4f541fec1c0b1e7dbadb.png" width="593" height="443" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3健康检查">3.健康检查<a class="hash-link" aria-label="Direct link to 3.健康检查" title="Direct link to 3.健康检查" href="https://www.cloudpods.org/en/blog/cloudpods-lb-application-intro#3%E5%81%A5%E5%BA%B7%E6%A3%80%E6%9F%A5">​</a></h3>
<p>健康检查是一种负载均衡服务实现高可用，保障业务连续性的机制。通过健康检查结果，转发节点将不健康的后端向用户屏蔽，实现故障、升级等行为对用户的无感知。</p>
<p>云上负载均衡的健康检查通常有以下几种：</p>
<ul>
<li>TCP检查。即通过TCP连接是否能够成功建立判断后端的健康与否，连接建立成功后会立即发出RST报文中断连接，减少后端资源占用。使用这种健康检查时，在后端的日志中可能会周期出现“connection reset”字样的信息，是预期中的效果。</li>
<li>UDP检查。一般的机制是，向后端服务器发送指定内容的请求，在约定时间内若能收到来自后端的响应，并且响应内容匹配，则认为此次检查结果为健康。由于UDP是无状态连接协议，因此配置的参数里除了指定请求、响应的内容，还需指定响应超时时间。</li>
<li>HTTP检查。通常通过向后端发送HEAD请求，对响应的状态码做检查来判断健康与否。默认的配置一般是2xx、3xx的响应判定为健康，4xx、5xx判定为故障。对状态码的归类一般也是可配置的。</li>
</ul>
<p>云上负载均衡产品一般会某个后端的检查结果，作为一个初步诊断。一般会有连接超时、连接错误、响应错误等。当所有后端都被判定为不可用时，对于HTTP/HTTPS类型的监听，转发节点通常会直接返回503 Service Unavailable。</p>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/06-f11ec79cc7680cf06517867daa36f846.png" width="652" height="445" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="4-http转发策略">4. HTTP转发策略<a class="hash-link" aria-label="Direct link to 4. HTTP转发策略" title="Direct link to 4. HTTP转发策略" href="https://www.cloudpods.org/en/blog/cloudpods-lb-application-intro#4-http%E8%BD%AC%E5%8F%91%E7%AD%96%E7%95%A5">​</a></h3>
<p>转发策略是针对HTTP/HTTPS监听为言的。简单来说，它通过匹配用户请求中的Host、Path字段来决定将请求转发到哪个后端服务器组。</p>
<p>首先，同一监听下的多个转发策略共用一个IP、端口组合，实现了复用，并且业务的域名和路径统一管理，无需配置到每一台后端服务器上。例如，我们可以将wiki.example.com, task.example.com解析到同负载均衡实例的IP地址，然后创建一个HTTPS监听，再创建2个转发策略，分别匹配这两个域名，实现不同的转发路径。也可以通过共用域名解析，分配不同URL路径（/wiki，/task）的方式实现相同的效果。</p>
<p>另外，同一监听下的转发策略可以共用监听自身的ACL规则，共享监听的带单和速率控制，因此管理、配置会明晰简单。</p>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/07-ae8f308cc63160c4da183b2112e28ec1.png" width="720" height="438" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="5-会话保持">5. 会话保持<a class="hash-link" aria-label="Direct link to 5. 会话保持" title="Direct link to 5. 会话保持" href="https://www.cloudpods.org/en/blog/cloudpods-lb-application-intro#5-%E4%BC%9A%E8%AF%9D%E4%BF%9D%E6%8C%81">​</a></h3>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/08-584a8b3d7a21d288e8c516f1457527ee.png" width="724" height="262" class="img_ev3q"></p>
<p>会话保持也叫Sticky Session，适用于HTTP/HTTPS类型的监听。它是一种通过在HTTP cookie中嵌入后端标识的方式指定请求的转发路径。根据Set-Cookie的时间不同，通常有两个选项：</p>
<p>Server模式。后端服务器知道自己的标识，在返回响应的时候给出Set-Cookie，经过转发节点交给浏览器后，记录在浏览器。转发请求下次收到该浏览器的请求时会看到相应的Cookie值，将其转发到上次的后端服务器。</p>
<p>Insert模式。转发节点收到后端服务器的响应后，再转发给浏览器前会加入Set-Cookie头部，这个值之后会记录在浏览器中。转发节点下次收到浏览器的请求时，若其中包含此cookie，它会将其去除之后再转发给后端服务器。因此，在Insert模式下，后端服务器感知不到此cookie的存在。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="6-跳转">6. 跳转<a class="hash-link" aria-label="Direct link to 6. 跳转" title="Direct link to 6. 跳转" href="https://www.cloudpods.org/en/blog/cloudpods-lb-application-intro#6-%E8%B7%B3%E8%BD%AC">​</a></h3>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/09-89d0a19afe47a87e78a5e4b4f942b4dc.png" width="921" height="319" class="img_ev3q"></p>
<p>HTTP/HTTPS协议的监听可以指定跳转目标。这种情况下，监听无需绑定后端服务器组。</p>
<p>跳转类型的监听通常用来实现HTTP到HTTPS的跳转，实现全站加密访问。例如，在明文HTTP协议下，有些宽带运营商可能会篡改应用的响应，在其中插入广告等信息，某些情况下还可能导致信息安全问题。强制HTTPS跳转作为一种应对措施，可以帮助实现用户到站点的端到端保密信道。</p>
<p>另外，跳转还可以用来实现站点的迁移、应用的升级场景里。当迁移、升级完成后，通过跳转将用户请求转移到新站点，旧的URL依然可用，迁移升级过程对用户无感知，回滚也非常便捷。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="7-访问控制">7. 访问控制<a class="hash-link" aria-label="Direct link to 7. 访问控制" title="Direct link to 7. 访问控制" href="https://www.cloudpods.org/en/blog/cloudpods-lb-application-intro#7-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6">​</a></h3>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/10-6b38a243df7b2af6753ac84c6fb6b4a5.png" width="441" height="245" class="img_ev3q"></p>
<p>监听可以指定访问控制列表（ACL），并指定该列表的类型是黑名单还是白名单。</p>
<p>有时我们有一些内部接口、服务需要只能够有限开放，比如同公司另外一个机房，或者不同公司的合作伙伴等。此时通过访问控制列表实现就非常方便，在界面上统一管理、备注。</p>
<p>另外一种情况下，有些应用我们需要限定服务区域，比如版权、监管的原因等。此时我们可以将服务区域的来源地址做成白名单，仅开放应用给这些区域。网络控制在负载均衡一处完成，整个过程应用本身无需配置变更。</p>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/11-ed45ae17ecb211b6688640952ada5199.png" width="610" height="219" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="8-获取客户端真实ip">8. 获取客户端真实IP<a class="hash-link" aria-label="Direct link to 8. 获取客户端真实IP" title="Direct link to 8. 获取客户端真实IP" href="https://www.cloudpods.org/en/blog/cloudpods-lb-application-intro#8-%E8%8E%B7%E5%8F%96%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%9C%9F%E5%AE%9Eip">​</a></h3>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/12-4f04ef5666aed19d53184f64430f60e1.png" width="708" height="202" class="img_ev3q"></p>
<p>从产品简介中我们可以看到，客户端的连接和请求终结在转发节点上，后端服务器看到的连接都来自转发节点。此时，后端看到的网络层源IP也都是转发节点的地址。负载均衡产品一般提供提供了以下几种方式让后端服务器能够获取客户端的源IP地址：</p>
<p>对于HTTP/HTTPS协议，转发节点可以通过HTTP头部来传递客户端的源地址，头部的名称一般为X-Forwarded-For。</p>
<p>对于其它协议，一般通过PROXY协议来向后端服务器传递此信息。PROXY协议由HAProxy项目制订，AWS的负载均衡即支持此规范，另外还有NGINX、LightHTTPd也是支持此协议的。举例来说，对于TCP连接，PROXY协议会在连接建立后先进行连接信息传递，之后才是正常的数据交换。因此，如果PROXY协议直接对接应用服务，需要对应用服务的连接入口进行微小的修改。</p>
<p>一部分云厂商在整个负载均衡转发面实施会话记录、地址转换，使得虚机作为后端服务器时看到源地址即为客户请求的源地址，此时无需额外机制获得客户端的真实IP地址。需要注意的是，对于内网负载均衡，服务器在访问自身作为后端监听时，会出现因为源、目的IP地址都是自己而造成路径不通，这是这种机制的一个小限制。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="9-请求速率控制">9. 请求速率控制<a class="hash-link" aria-label="Direct link to 9. 请求速率控制" title="Direct link to 9. 请求速率控制" href="https://www.cloudpods.org/en/blog/cloudpods-lb-application-intro#9-%E8%AF%B7%E6%B1%82%E9%80%9F%E7%8E%87%E6%8E%A7%E5%88%B6">​</a></h3>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/13-08545915a1b1502790fc577dc36cc07d.png" width="756" height="184" class="img_ev3q"></p>
<p>壹云的负载均衡对于HTTP/HTTPS类型的监听可以实施请求速率控制。分为两个方面：</p>
<p>一是对监听整体进行速率控制。例如，某个应用现在的服务能力是每秒3000个请求，为了保护后端服务器，避免过载造成雪崩效应等，我们可以设定整体的速率控制。</p>
<p>二是对每个来源IP地址进行控制。这个可以用于阻止来自单个客户的高频异常请求，比如刷单、爬虫类请求等</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="10-tls证书">10. TLS证书<a class="hash-link" aria-label="Direct link to 10. TLS证书" title="Direct link to 10. TLS��证书" href="https://www.cloudpods.org/en/blog/cloudpods-lb-application-intro#10-tls%E8%AF%81%E4%B9%A6">​</a></h3>
<p>最后，我们简单介绍一下TLS证书。用户在使用负载均衡时，经常反馈在证书上传这一步产生困惑。</p>
<p>首先，从非对称加密算法的类型来说，证书一般分别为RSA、EC证书两类。其中EC证书也叫椭圆曲线证书，相对较新一些，大部分平台也是支持的。</p>
<p>上传证书时，一般要求同时上传证书、私钥两个文件或文件的内容。这两者是成对出现的。云平台一般支持PEM格式的证书和私钥，为base64编码带标识头的文本格式。与之对应通常叫DER格式，它是ASN.1编码的二进制格式。如果用文本编辑器打开证书和私钥文件，看到的是规整的ASCII字符串，那么应该是PEM格式，如果是乱码状态，很可能就是DER格式了。</p>
<p>图中是常见的3种私钥PEM文件头。PKCS是RSA Laboratory制定的一系列标准。其中PKCS#8支持封装多种加密算法的私钥，因此此种格式的PEM私钥有可能是RSA或者EC格式的私钥。</p>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/14-b94d7f47e560b9ce740d5ed1aebfa21a.png" width="538" height="138" class="img_ev3q"></p>
<p>图中展示了壹云控制台中证书列表的菜单位置。从中可以看到证书上传后，可以直接看到证书的CN（Common Name）。SAN（Subject Alternative Name），以及过期时间。在“操作”列中，若“删除”操作为灰色禁用状态，一般表示该证书正被HTTPS监听关联使用</p>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/15-59cfbf9a078e034ffb39bcf5003d44ca.png" width="920" height="352" class="img_ev3q"></p>
<p>我们可以从证书的详情中，找到与它关联的监听列表，实现对所有监听批量更新证书。</p>
<p><img decoding="async" loading="lazy" src="https://www.cloudpods.org/en/assets/images/16-b627ca86fea920cb77777ceb3e7c8a1c.png" width="868" height="417" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="三总结">三、总结<a class="hash-link" aria-label="Direct link to 三、总结" title="Direct link to 三、总结" href="https://www.cloudpods.org/en/blog/cloudpods-lb-application-intro#%E4%B8%89%E6%80%BB%E7%BB%93">​</a></h2>
<p>以上结合实际的场景对负载均衡产品做了一个简略的介绍，我们经常被问到，这些功能特性都可以通过自己搭建NGINX一步一步配置出来，为什么还要花钱用云上的产品呢？</p>
<p>首先，作为一种模块化封装的产品，负载均衡的主要优势在于简便、高效。自建NGINX时，我们需要自己配置集群高可用，考虑集群的水平扩展和扩容。在生产环境时还需要配置自己的监控、告警策略。在管理层面，权限管理和操作过程审计也必不可少，然而NGINX作为基础组件与这些上层概念距离较远，需要较复杂的过程才可实现相等效果。</p>
<p>其次，云上负载均衡通常都有开放的API，可通过编程与周边系统对接，灵活应对需求。</p>
<p>从企业IT资产管理的角度来说，负载均衡代表着更先进的生产力。壹云控制台上的信息呈现相比命令行中单字符控制来说，更加一目了然，操作也更加简便，使得对于操作结果的可预期性更强。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[面向未来的 IT 基础设施管理架构——融合云（Unified IaaS）]]></title>
        <id>https://www.cloudpods.org/en/blog/unified-iaas-for-future</id>
        <link href="https://www.cloudpods.org/en/blog/unified-iaas-for-future"/>
        <updated>2019-06-13T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[随着数字化时代的到来，IT系统已成为人类社会正常运转不可或缺的组成部分。不远的未来，智能制造，5G和人工智能等技术将成为推动生产力发展的重要引擎，人类社会将面临前所未有的全面彻底的数字化浪潮。IT基础设施作为IT系统运行的平台和载体，是实现数字化的基石。在这场数字化浪潮中，企业必须积极拥抱云计算技术，采用符合技术发展趋势、面向未来的IT基础构架，才能在未来的竞争中赢得先机。]]></summary>
        <content type="html"><![CDATA[<p>随着数字化时代的到来，IT系统已成为人类社会正常运转不可或缺的组成部分。不远的未来，智能制造，5G和人工智能等技术将成为推动生产力发展的重要引擎，人类社会将面临前所未有的全面彻底的数字化浪潮。IT基础设施作为IT系统运行的平台和载体，是实现数字化的基石。在这场数字化浪潮中，企业必须积极拥抱云计算技术，采用符合技术发展趋势、面向未来的IT基础构架，才能在未来的竞争中赢得先机。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="一云计算历经十余年发展的趋势判断">一、云计算历经十余年发展的趋势判断<a class="hash-link" aria-label="Direct link to 一、云计算历经十余年发展的趋势判断" title="Direct link to 一、云计算历经十余年发展的趋势判断" href="https://www.cloudpods.org/en/blog/unified-iaas-for-future#%E4%B8%80%E4%BA%91%E8%AE%A1%E7%AE%97%E5%8E%86%E7%BB%8F%E5%8D%81%E4%BD%99%E5%B9%B4%E5%8F%91%E5%B1%95%E7%9A%84%E8%B6%8B%E5%8A%BF%E5%88%A4%E6%96%AD">​</a></h2>
<p>云计算技术自2006年AWS推出第一个公有云服务S3开始，发展到2019年的今天，一些格局和趋势开始逐步清晰：</p>
<p>首先，私有云依然是大中型企业以及一些细分行业，例如政务、金融、医疗、教育、能源和制造等的首选IT基础设施。随着各大公有云厂商陆续推出其公有云在政企客户私有化部署的扩展方案，例如AWS Outposts、Azure Stack，Google Anthos，以及国内阿里云、腾讯云等的私有云／专有云部署方案，“私有云是否会随着公有云的发展逐步消亡”的命题已被公有云厂商自己否定。事实证明，私有云将长期持续存在，将和公有云共生，成为企业IT基础设施的一个重要组成部分。</p>
<p>其次，公有云持续迅猛发展，逐步成为企业IT基础设施的主要提供者。2018年Q3云硬件支出占IT总收入的50.9%。2018年中国私有云基础架构支出38.0亿美元，公有云基础架构支出达到82亿美元（来源：IDC）。因此，公有云已经成为IT基础设施的最主要提供者。尤其对于中小企业而言，其IT基础设施可能完全构建在公有云之上。同时，一些处于技术领先行业的大型企业，例如互联网，金融，制造等，也已经开始使用公有云，探索结合公有云和私有云优势的混合云架构。</p>
<p>与此同时，公有云市场竞争异常激烈，最后将只剩下少数技术和资本都十分雄厚的玩家，进入寡头垄断市场阶段。一方面，公有云厂商提供的产品和服务本质相同，都是IT基础设施资源以及其上的软件服务，另一方面，各家厂商都极力完善自身产品，丰富产品线，做出特色，以获得竞争优势，吸引增量用户，避免存量用户的流失。因此，最终公有云提供的产品功能矩阵都基本趋同，但是在特色功能、区域覆盖、用户体验方面则各有千秋，差异很大。随着用户对公有云产品服务依赖的加深，公有云之间的服务切换和迁移将变得越来越难，云和云之间存在隐形的鸿沟。当然，公有云进入寡头垄断阶段也意味着公有云供应商列表将长期保持相对稳定，这意味着针对所有公有云API的适配成本将变得可控可行。</p>
<p>还有一个不容忽视的趋势是Kubernetes已成为容器编排的事实标准，逐步成为云原生时代应用部署和运行的标准环境。随着Kubernetes对存储、网络支持的逐步完善，不仅无状态服务可以在Kubernetes上部署运行，有状态的数据存储服务也可以在Kubernetes上运行。同时，基于Kubernetes之上已经发展出了一个繁荣并且强大的开源软件生态和完整的工具链，例如Helm实现软件套件的自动部署，Operator实现软件的自动化运维，lstio提供微服务RPC通信治理架构，Knative提供Serverless的运行框架等等。可以预见，Kubernetes将成为未来分布式应用的标准运行时环境，成为分布式应用时代的“Linux”。Kubernetes之上将构建出一个完全由开源软件主导的软件生态，不仅仅包含应用软件，还包含各种PaaS中间件，例如消息中间件，各类开源数据库，开发框架，AI训练框架等，真正实现"开源统治世界"的愿景。正是基于这个趋势判断，各大公有云厂商都相继推出了自己的Kubernetes解决方案，允许原生Kubernetes在自己的云平台上更高效运行。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="二企业未来it基础设施的确定和不确定">二、企业未来IT基础设施的确定和不确定<a class="hash-link" aria-label="Direct link to 二、企业未来IT基础设施的确定和不确定" title="Direct link to 二、企业未来IT基础设施的确定和不确定" href="https://www.cloudpods.org/en/blog/unified-iaas-for-future#%E4%BA%8C%E4%BC%81%E4%B8%9A%E6%9C%AA%E6%9D%A5it%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD%E7%9A%84%E7%A1%AE%E5%AE%9A%E5%92%8C%E4%B8%8D%E7%A1%AE%E5%AE%9A">​</a></h2>
<p>基于这些事实和趋势，我们可以想象未来的企业IT基础设施将是这样：</p>
<p>首先，混合云架构是企业的最佳选择。</p>
<p>将来企业的IT基础设施方案，公有云和私有云不再是二选一的选项，而是一个完整的IT基础设施的两个必然组成部分。一方面，企业可能会有自己的私有云，但也存在一些完全运行在公有云的企业。另一方面，企业必然会使用公有云，其购买的公有云资源将成为其私有IT基础设施的一部分。</p>
<p>其次，Kubernetes将会成为企业云原生应用的标准运行环境。</p>
<p>就像企业今天企业应用都运行在Linux中一样，将来的企业服务将云原生化，分布化，运行在Kubernetes中。企业将会有若干Kubernetes集群，运行着不同的应用，分布在不同的基础设施之上，有的运行在本地IDC，有的运行在私有云，有的运行在公有云。</p>
<p>以上两点是公认比较确定的论断，但是还有其他很多问题目前没有确定性的结论，例如：</p>
<p>1、虽然使用公有云是企业必然的选择，但是企业会在使用多个公有云还是单一公有云进行抉择。采用多公有云方案的原因很多，收益也显而易见，例如避免供应商锁定，提高议价的能力，获得更丰富的功能特性和地域选择等。但同时，使用多个公有云资源的统一管理难度大，云间服务切换和迁移成本较高的问题则阻碍了用户选择多个公有云。</p>
<p>2、虽然云计算技术发展了十多年，但是依然有很大比例的企业的本地IT基础设施并未云化，既没有通过私有云管理，甚至都没有采用虚拟化技术。虽然未来的云原生应用将运行在Kubernetes的容器环境中，但是企业还有很多未容器化的传统应用。而且，实事求是地讲，对于大多数企业来讲，也许未来很长一段时间，依然是以非云原生的传统应用为主。因此，企业未来的IT基础设施并不能简单地假设为全部都归一化地运行Kubernetes，而是应该给这些传统应用提供运行所需的虚拟机或者裸机环境。这类企业云转型过程中是否还是需要经过私有云-混合云-多云的漫长路径，再部署一套私有云实现本地IT基础设施的云化？</p>
<p>3、一方面，随着业务发展和行业驱动，企业对IT基础设施的要求，无论是规模、效率还是稳定性都将越来越苛刻。敏捷开发和DevOps将成为企业的标配。另一方面，随着技术的发展，企业IT基础设施也将愈发复杂和难以驾驭。企业IT资源将不仅是物理服务器，还有虚拟机，容器，除了x86，还会有小型机、ARM，甚至还有GPU、FPGA、TPU等异构计算资源。网络和存储也有多种技术选择。同时，截止今日，仅主流公有云供应商在全球200多个区域500多个可用区提供上千种云产品和服务。只要企业愿意，一个全球规模的IT基础设施唾手可得。企业IT人员如何应对IT基础设施在规模、效率和复杂度方面的挑战？</p>
<p>4、即使未来的企业IT基础架构将收敛到完全运行在Kubernetes上，单个Kubernetes集群往往只用于一个单一特定目的，例如特定部门的测试或生产集群，企业内有多个Kubernetes集群是常态。管理多Kubernetes集群，尤其是部署在多云环境下的多Kubernetes集群依然是一个难题。虽然Kubernetes屏蔽了底层基础设施的差异，向上提供了一致的接口和运行环境，但是Kubernetes在各个公有云以及本地IDC的管理接口以及网络存储方案都没有统一，在新建、扩容和调整配置Kubernetes集群时候，依然面临对接多个供应商接口的问题。同时，分布在多个公有云上的Kubernetes集群之间没有打通，不仅控制信息无法同步，数据链路层面更是相互隔离，互为孤岛。因此无法实现多个集群的联动，更无法实现集群之间的切换和协同。多云环境下的Kubernetes集群方案依然有待探索。</p>
<p>5、随着Kubernetes生态的完善，用户在公有云上使用PaaS服务将有两个选择：使用公有云提供的PaaS服务还是基于Kubernetes的云原生开源PaaS服务。前者产品化程度高，更加易于使用，能得到商业支持。但也存在被商业产品锁定，切换困难，使用费用高昂的问题。使用后者则需要对开源软件有一定掌控力，但是价格便宜（云主机的使用费），基于开源技术，有强大社区支持，架构开放灵活且易于扩展。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="三融合云unified-iaas面向未来的it基础设施架构选择">三、融合云（Unified IaaS），面向未来的IT基础设施架构选择<a class="hash-link" aria-label="Direct link to 三、融合云（Unified IaaS），面向未来的IT基础设施架构选择" title="Direct link to 三、融合云（Unified IaaS），面向未来的IT基础设施架构选择" href="https://www.cloudpods.org/en/blog/unified-iaas-for-future#%E4%B8%89%E8%9E%8D%E5%90%88%E4%BA%91unified-iaas%E9%9D%A2%E5%90%91%E6%9C%AA%E6%9D%A5%E7%9A%84it%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD%E6%9E%B6%E6%9E%84%E9%80%89%E6%8B%A9">​</a></h2>
<p>针对以上确定性结论和不确定问题，我们的答案是面向未来的IT基础设施架构管理的最佳选择是融合云（Unified IaaS）。顾名思义，所谓融合云就是融合管理分布在多云环境（本地IDC，私有云和公有云）中的所有IT基础设施，构建一个“云上之云”的融合IaaS平台。融合云本质上是私有云，但是管理的IT资源的范围不再局限于本地IDC，还包括企业在公有云购买的IaaS资源。对于纯公有云架构的企业，融合云管理的则完全是企业购买的公有云资源。融合云和传统云平台的区别不在于管理的资源范围的不同，而在于针对上述企业IT的发展趋势和问题，在设计理念上，融合云和传统的云平台有如下不同：</p>
<p>首先，融合云面向的是多云环境。</p>
<p>融合云的部署场景中，企业用户IT基础设施不仅包含部署在本地IDC的部分，还包含用户在公有云购买的部分。融合云通过一个平台管理企业所有的IT基础设施。首先是在管理平面的统一和融合，实现私有云和公有云资源的统一API访问，不仅实现资源的管理，还包括账单的统一，资源管理的统一。让用户跨云调用就像使用一个云平台一样的便利。其次是数据平面的打通，通过和跨云网络方案的整合，实现控制平面和数据平台的协同，达到整个平台的跨云内网的互通。另外，融合云还将提供跨云数据迁移的工具，方便用户实现跨云的应用迁移。总之，融合云的目标就是填补云和云之间的鸿沟，降低跨云切换和迁移的成本，让多云部署更简单。</p>
<p>其次，融合云实现企业整体异构IT基础设施的全面云化。</p>
<p>融合云不仅能管理已经云化的私有云和公有云资源，还需内置了管理裸机的裸金属云，KVM和VMware ESXi等虚拟化技术、以及ARM，GPU等计算资源的私有云技术。对于还没有部署私有云的企业，通过部署融合云，一步到位地实现企业私有IT基础设施的私有云化，实现裸金属、KVM、VMware ESXi、GPU等的云化管理，无需再引入额外的私有云方案，降低了企业上云的实施成本和管理复杂度。</p>
<p>第三，智能将是融合云的核心特征。</p>
<p>融合云一方面优化IT资源分配的调度策略，找出闲置浪费的IT资源，提升IT资源的利用率。另一方面提前预测资源需求和发现系统故障隐患，确保系统的平稳运行和扩展。通过数据和算法，使得IT基础设施更加智能，帮助企业IT人员驾驭未来的IT基础设施在规模、效率和复杂度方面的挑战。</p>
<p>第四，融合云面向的是Kubernetes。</p>
<p>融合云一方面实现多云环境下Kubernetes底层基础设施的统一和融合。一是通过统一的API为Kubernetes提供多云环境下统一的IaaS接口，为跨云部署Kubernetes环境提供便利。二是在数据平面打通跨云Kubernetes的内网，实现跨云通信。另一方面则直接提供统一的Kubernetes集群管理控制API以及集群信息的同步机制，实现跨集群Kubernetes的统一管控，实现跨Kubernetes集群的账号、权限、配置的同步和统一。</p>
<p>最后，融合云全面拥抱开源技术。</p>
<p>软件发展的历程表明PaaS的未来是开源。供应商都无法仅凭一己之力满足企业客户所有的PaaS需求。因此，融合云聚焦于企业分布在本地IDC和公有云的计算、网络和存储IaaS资源的统一管理，为多云Kubernetes提供可靠的底层基础设施，Kubernetes之上的软件和应用需求则依赖开源生态来提供解决方案。融合云用户对PaaS的需求通过Kubernetes应用市场，通过整合开源PaaS应用向用户提供服务。这一方面降低用户使用开源PaaS的技术门槛，另一方面则依赖强大的开源社区给用户提供开放灵活丰富的软件产品，避免私有PaaS软件对用户的锁定。</p>
<p>基于以上的设想，融合云的架构如下所示。</p>
<p><img decoding="async" loading="lazy" alt="Architecture of Unified IaaS" src="https://www.cloudpods.org/en/assets/images/unified_iaas-b6aab0c813d11d38d1378dd5a3eaf833.jpg" width="553" height="361" class="img_ev3q"></p>
<p>向下：融合云统一管理多云基础设施，主要实现多云环境下计算、网络、存储等IaaS资源的统一管理。对于本地IDC的未云化资源，主要是裸机，KVM虚拟机（Libvirt），VMware ESXi虚拟机（vSphere），通过内置的私有云方案实现云化管理。对于私有云和公有云资源，则通过API实现统一管理。</p>
<p>向上：融合云一方面通过虚拟机、裸机等形式为传统应用提供完整操作系统运行时环境，另一方面则给Kubernetes提供多云运行环境，统一管理多云Kubernetes。在Kubernetes之上则提供云原生应用的容器运行时环境。同时，基于Kubernetes和开源组件提供PaaS中间件服务。</p>
<p>总之，融合云向下统一管理多云IaaS资源；向上为Kubernetes提供多云支持，通过开源生态满足企业PaaS需求；用户其他需求则可以通过访问公有云的原生服务获得，从而全方位满足未来企业对IT基础设施的多层次需求。</p>
<p>随着大数据、人工智能技术的普及，5G时代的到来，IT基础设施变得愈加重要，成为企业数字化转型，全面拥抱数字时代的基石。基于企业IT架构多云趋势，融合云应运而生。融合云是面向未来的企业IT基础设施管理的云平台，针对企业在未来IT基础架构的问题而设计，将帮助企业迎接即将到来的数字化转型的挑战。</p>]]></content>
        <author>
            <name>Jian Qiu</name>
            <uri>https://github.com/swordqiu</uri>
        </author>
    </entry>
</feed>